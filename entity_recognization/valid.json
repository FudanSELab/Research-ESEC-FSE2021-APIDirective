[
    {
        "id": 119255,
        "text": "if alias or entry is null",
        "meta": {
            "doc_index": 275471,
            "doc_name": "java.security.KeyStore.setEntry(java.lang.String,java.security.KeyStore.Entry,java.security.KeyStore.ProtectionParameter).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                21,
                25,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119257,
        "text": "if the provider name is null or empty.",
        "meta": {
            "doc_index": 275239,
            "doc_name": "java.security.AlgorithmParameterGenerator.getInstance(java.lang.String,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119258,
        "text": "if text or attributes is null.",
        "meta": {
            "doc_index": 276738,
            "doc_name": "java.text.AttributedString.AttributedString(java.lang.String,java.util.Map<? extends java.text.AttributedCharacterIterator.Attribute,?>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119259,
        "text": "srcBegin is greater than srcEnd srcEnd is greater than the length of this string dstBegin is negative dstBegin+(srcEnd-srcBegin) is larger than dst.length",
        "meta": {
            "doc_index": 273538,
            "doc_name": "com.sun.org.apache.xml.internal.utils.FastStringBuffer.getChars(int,int,char[],int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                8,
                "GT-1"
            ],
            [
                25,
                31,
                "GT-2"
            ],
            [
                32,
                38,
                "GT-1"
            ],
            [
                55,
                80,
                "GT-2"
            ],
            [
                81,
                89,
                "Negative"
            ],
            [
                102,
                128,
                "GT-1"
            ],
            [
                144,
                154,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119260,
        "text": "if the specified Class parameter is null.",
        "meta": {
            "doc_index": 274507,
            "doc_name": "java.lang.Class.isAssignableFrom(java.lang.Class<?>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                40,
                "EQ-2"
            ],
            [
                17,
                32,
                "EQ-1"
            ]
        ]
    },
    {
        "id": 119261,
        "text": "if the specified chain has a length of 0, if the specified chain does not contain Certificates of the same type, or if the PrivateKey algorithm does not match the algorithm of the PublicKey in the end entity Certificate (at index 0)",
        "meta": {
            "doc_index": 275419,
            "doc_name": "java.security.KeyStore.PrivateKeyEntry.PrivateKeyEntry(java.security.PrivateKey,java.security.Certificate[]).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                35,
                "EQ-1"
            ],
            [
                39,
                40,
                "EQ-2"
            ],
            [
                119,
                143,
                "NEQ-1"
            ],
            [
                159,
                219,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119262,
        "text": "if the value index is negative or not less than the length of the char array.",
        "meta": {
            "doc_index": 274479,
            "doc_name": "java.lang.Character.codePointAt(char[],int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "Negative"
            ],
            [
                48,
                76,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119263,
        "text": "if saltLen is less than 0.",
        "meta": {
            "doc_index": 275622,
            "doc_name": "java.security.spec.PSSParameterSpec.PSSParameterSpec(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "LT-1"
            ],
            [
                24,
                25,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119264,
        "text": "if there is an error accessing the CLOB value or if len is less than 0",
        "meta": {
            "doc_index": 275885,
            "doc_name": "java.sql.Clob.truncate(long).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                55,
                "LT-1"
            ],
            [
                69,
                70,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119266,
        "text": "if mdName is null.",
        "meta": {
            "doc_index": 275618,
            "doc_name": "java.security.spec.MGF1ParameterSpec.MGF1ParameterSpec(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119268,
        "text": "if attributes is null.",
        "meta": {
            "doc_index": 276749,
            "doc_name": "java.text.AttributedString.addAttributes(java.util.Map<? extends java.text.AttributedCharacterIterator.Attribute,?>,int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119270,
        "text": "if pos is less than 0 or if an I/O error occurs.",
        "meta": {
            "doc_index": 274407,
            "doc_name": "java.io.RandomAccessFile.seek(long).java.io.IOException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "LT-1"
            ],
            [
                20,
                21,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119271,
        "text": "if the target is null",
        "meta": {
            "doc_index": 274535,
            "doc_name": "java.lang.invoke.MethodHandles.Lookup.revealDirect(java.lang.invoke.MethodHandle).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119272,
        "text": "if the permission to check for is null.",
        "meta": {
            "doc_index": 275221,
            "doc_name": "java.security.AccessControlContext.checkPermission(java.security.Permission).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                34,
                38,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119273,
        "text": "if a state other than RAW_TEXT or CONVERTED_TEXT is given",
        "meta": {
            "doc_index": 273873,
            "doc_name": "java.awt.im.InputMethodHighlight.InputMethodHighlight(boolean,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "NEQ-1"
            ],
            [
                22,
                48,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119274,
        "text": "when GraphicsEnvironment.isHeadless returns true",
        "meta": {
            "doc_index": 274065,
            "doc_name": "java.awt.Window.Window(java.awt.Frame).HeadlessException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                5,
                35,
                "Returns-1"
            ],
            [
                44,
                48,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119275,
        "text": "if key is null.",
        "meta": {
            "doc_index": 274762,
            "doc_name": "java.lang.System.getProperty(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119276,
        "text": "if frontCaps or backCaps are null",
        "meta": {
            "doc_index": 273680,
            "doc_name": "java.awt.BufferCapabilities.BufferCapabilities(java.awt.ImageCapabilities,java.awt.ImageCapabilities,java.awt.BufferCapabilities.FlipContents).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                24,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119277,
        "text": "if alias or entryClass is null",
        "meta": {
            "doc_index": 275473,
            "doc_name": "java.security.KeyStore.entryInstanceOf(java.lang.String,java.lang.Class<? extends java.security.KeyStore.Entry>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119278,
        "text": "if size is negative.",
        "meta": {
            "doc_index": 274128,
            "doc_name": "java.io.ByteArrayOutputStream.ByteArrayOutputStream(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "Negative"
            ]
        ]
    },
    {
        "id": 119279,
        "text": "if the value of npoints is negative.",
        "meta": {
            "doc_index": 273961,
            "doc_name": "java.awt.Polygon.Polygon(int[],int[],int).NegativeArraySizeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "Negative"
            ]
        ]
    },
    {
        "id": 119280,
        "text": "If dstIndex is equal to dst.length-1 and the specified codePoint is a supplementary character, the high-surrogate value is not stored in dst[dstIndex].)",
        "meta": {
            "doc_index": 274490,
            "doc_name": "java.lang.Character.toChars(int,char[],int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                24,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119281,
        "text": "if the position is less than 0 or greater than getItemCount()-1",
        "meta": {
            "doc_index": 273937,
            "doc_name": "java.awt.List.remove(int).ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "LT-1"
            ],
            [
                29,
                30,
                "LT-2"
            ],
            [
                47,
                63,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119282,
        "text": "if the AttributedString has length 0 (attributes cannot be applied to a 0-length range).",
        "meta": {
            "doc_index": 276746,
            "doc_name": "java.text.AttributedString.addAttribute(java.text.AttributedCharacterIterator.Attribute,java.lang.Object).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                36,
                "EQ-2"
            ],
            [
                28,
                34,
                "EQ-1"
            ]
        ]
    },
    {
        "id": 119283,
        "text": "if any of the parameters, i.e. modulus, publicExponent, privateExponent, primeP, primeQ, primeExponentP, primeExponentQ, crtCoefficient, is null.",
        "meta": {
            "doc_index": 275623,
            "doc_name": "java.security.spec.RSAMultiPrimePrivateCrtKeySpec.RSAMultiPrimePrivateCrtKeySpec(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.security.spec.RSAOtherPrimeInfo[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                135,
                "EQ-1"
            ],
            [
                140,
                144,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119284,
        "text": "if context is null",
        "meta": {
            "doc_index": 273876,
            "doc_name": "java.awt.im.spi.InputMethod.setInputMethodContext(java.awt.im.spi.InputMethodContext).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119285,
        "text": "a null paper instance was passed as a parameter.",
        "meta": {
            "doc_index": 273969,
            "doc_name": "java.awt.print.PageFormat.setPaper(java.awt.print.Paper).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                2,
                6,
                "EQ-1"
            ],
            [
                7,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119286,
        "text": "if the specified Provider is null, or if the specified parameters are not understood by the PolicySpi implementation from the specified Provider.",
        "meta": {
            "doc_index": 275529,
            "doc_name": "java.security.Policy.getInstance(java.lang.String,java.security.Policy.Parameters,java.security.Provider).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119287,
        "text": "if rp is null.",
        "meta": {
            "doc_index": 275600,
            "doc_name": "java.security.spec.ECFieldF2m.ECFieldF2m(int,java.math.BigInteger).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "EQ-1"
            ],
            [
                9,
                13,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119288,
        "text": "if both tileX and tileY are not equal to 0",
        "meta": {
            "doc_index": 273884,
            "doc_name": "java.awt.image.BufferedImage.getTile(int,int).ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                41,
                42,
                "NEQ-2"
            ],
            [
                3,
                23,
                "NEQ-1"
            ]
        ]
    },
    {
        "id": 119289,
        "text": "if there is an error accessing the BLOB value or if start is less than 1",
        "meta": {
            "doc_index": 275657,
            "doc_name": "java.sql.Blob.position(java.sql.Blob,long).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                57,
                "LT-1"
            ],
            [
                71,
                72,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119290,
        "text": "if dstIndex is negative or not less than dst.length, or if dst at dstIndex doesn't have enough array element(s) to store the resulting char value(s). (",
        "meta": {
            "doc_index": 274490,
            "doc_name": "java.lang.Character.toChars(int,char[],int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "Negative"
            ],
            [
                41,
                51,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119291,
        "text": "if the linger value is negative.",
        "meta": {
            "doc_index": 274947,
            "doc_name": "java.net.Socket.setSoLinger(boolean,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "Negative"
            ]
        ]
    },
    {
        "id": 119292,
        "text": "If off is negative, len is negative, or len is greater than b.length - off",
        "meta": {
            "doc_index": 274127,
            "doc_name": "java.io.ByteArrayInputStream.read(byte[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                43,
                "GT-1"
            ],
            [
                60,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119293,
        "text": "if size <= 0.",
        "meta": {
            "doc_index": 274098,
            "doc_name": "java.io.BufferedInputStream.BufferedInputStream(java.io.InputStream,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "LE-1"
            ],
            [
                11,
                12,
                "LE-2"
            ]
        ]
    },
    {
        "id": 119294,
        "text": "if handler is null",
        "meta": {
            "doc_index": 275417,
            "doc_name": "java.security.KeyStore.CallbackHandlerProtection.CallbackHandlerProtection(javax.security.auth.callback.CallbackHandler).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119295,
        "text": "if representationClass is null",
        "meta": {
            "doc_index": 273763,
            "doc_name": "java.awt.datatransfer.DataFlavor.DataFlavor(java.lang.Class<?>,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119296,
        "text": "if urls is null.",
        "meta": {
            "doc_index": 275018,
            "doc_name": "java.net.URLClassLoader.URLClassLoader(java.net.URL[],java.lang.ClassLoader).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119297,
        "text": "if icm is null",
        "meta": {
            "doc_index": 273920,
            "doc_name": "java.awt.image.RGBImageFilter.filterIndexColorModel(java.awt.image.IndexColorModel).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119298,
        "text": "if libname is null",
        "meta": {
            "doc_index": 274688,
            "doc_name": "java.lang.Runtime.loadLibrary(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119299,
        "text": "if the specified provider is null.",
        "meta": {
            "doc_index": 275241,
            "doc_name": "java.security.AlgorithmParameterGenerator.getInstance(java.lang.String,java.security.Provider).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119300,
        "text": "if the length is negative of if the length is greater than the packet's data buffer length.",
        "meta": {
            "doc_index": 274807,
            "doc_name": "java.net.DatagramPacket.setLength(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "Negative"
            ],
            [
                32,
                42,
                "GT-1"
            ],
            [
                59,
                90,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119301,
        "text": "if anotherString is null.",
        "meta": {
            "doc_index": 273548,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.compareTo(com.sun.org.apache.xml.internal.utils.XMLString).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119302,
        "text": "if the key is null.",
        "meta": {
            "doc_index": 273983,
            "doc_name": "java.awt.RenderingHints.put(java.lang.Object,java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119303,
        "text": "if GraphicsEnvironment.isHeadless() returns true",
        "meta": {
            "doc_index": 273672,
            "doc_name": "java.applet.Applet.readObject(java.io.ObjectInputStream).java.awt.HeadlessException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                35,
                "Returns-1"
            ],
            [
                44,
                48,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119304,
        "text": "if the String is null.",
        "meta": {
            "doc_index": 273654,
            "doc_name": "com.sun.security.auth.NTSid.NTSid(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119305,
        "text": "if the specified object is null and the method is an instance method.",
        "meta": {
            "doc_index": 274681,
            "doc_name": "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119306,
        "text": "if parameterName does not correspond to a named parameter; if a database access error occurs or this method is called on a closed CallableStatement or if the Java Object specified by x is an InputStream or Reader object and the value of the scale parameter is less than zero",
        "meta": {
            "doc_index": 275849,
            "doc_name": "java.sql.CallableStatement.setObject(java.lang.String,java.lang.Object,java.sql.SQLType,int).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                183,
                184,
                "Type-1"
            ],
            [
                191,
                202,
                "Type-2"
            ],
            [
                206,
                212,
                "Type-2"
            ],
            [
                224,
                256,
                "LT-1"
            ],
            [
                270,
                274,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119307,
        "text": "if event is null",
        "meta": {
            "doc_index": 273871,
            "doc_name": "java.awt.im.InputContext.dispatchEvent(java.awt.AWTEvent).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119309,
        "text": "if name is null",
        "meta": {
            "doc_index": 274473,
            "doc_name": "java.lang.Character.Subset.Subset(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119310,
        "text": "if the action is null",
        "meta": {
            "doc_index": 275222,
            "doc_name": "java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedAction<T>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119311,
        "text": "if a database access error occurs or if the Java Object specified by x is an InputStream or Reader object and the value of the scale parameter is less than zero",
        "meta": {
            "doc_index": 276655,
            "doc_name": "java.sql.SQLOutput.writeObject(java.lang.Object,java.sql.SQLType).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                69,
                70,
                "Type-1"
            ],
            [
                77,
                88,
                "Type-2"
            ],
            [
                92,
                98,
                "Type-2"
            ],
            [
                110,
                142,
                "LT-1"
            ],
            [
                156,
                160,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119312,
        "text": "if the clazz argument is null.",
        "meta": {
            "doc_index": 274740,
            "doc_name": "java.lang.SecurityManager.checkMemberAccess(java.lang.Class<?>,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119313,
        "text": "if arguments is null.",
        "meta": {
            "doc_index": 276817,
            "doc_name": "java.text.MessageFormat.formatToCharacterIterator(java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119314,
        "text": "if mimeType is null",
        "meta": {
            "doc_index": 273765,
            "doc_name": "java.awt.datatransfer.DataFlavor.DataFlavor(java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119315,
        "text": "if encoded is null",
        "meta": {
            "doc_index": 275516,
            "doc_name": "java.security.PKCS12Attribute.PKCS12Attribute(byte[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119318,
        "text": "if the file argument is null.",
        "meta": {
            "doc_index": 274707,
            "doc_name": "java.lang.SecurityManager.checkRead(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119319,
        "text": "if type is null, if algorithm is null, if format is null, or if encoded is null",
        "meta": {
            "doc_index": 275414,
            "doc_name": "java.security.KeyRep.KeyRep(java.security.KeyRep.Type,java.lang.String,java.lang.String,byte[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ],
            [
                20,
                29,
                "EQ-1"
            ],
            [
                33,
                37,
                "EQ-2"
            ],
            [
                42,
                48,
                "EQ-1"
            ],
            [
                52,
                56,
                "EQ-2"
            ],
            [
                64,
                71,
                "EQ-1"
            ],
            [
                75,
                79,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119320,
        "text": "if beginIndex is less then 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don't define a non-empty subrange of the string and the attributes parameter is not an empty Map.",
        "meta": {
            "doc_index": 276750,
            "doc_name": "java.text.AttributedString.addAttributes(java.util.Map<? extends java.text.AttributedCharacterIterator.Attribute,?>,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                28,
                "LT-2"
            ],
            [
                30,
                38,
                "GT-1"
            ],
            [
                55,
                79,
                "GT-2"
            ],
            [
                169,
                193,
                "NEQ-1"
            ],
            [
                201,
                213,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119321,
        "text": "if the provider is null or empty.",
        "meta": {
            "doc_index": 275312,
            "doc_name": "java.security.cert.CertPathBuilder.getInstance(java.lang.String,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119322,
        "text": "if pixel is not large enough to hold a pixel value for this ColorModel, or if components is not null and is not large enough to hold all the color and alpha components, starting at offset",
        "meta": {
            "doc_index": 273900,
            "doc_name": "java.awt.image.DirectColorModel.getComponents(java.lang.Object,int[],int).ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                96,
                100,
                "NEQ-2"
            ],
            [
                78,
                88,
                "NEQ-1"
            ]
        ]
    },
    {
        "id": 119323,
        "text": "if newFormats is null",
        "meta": {
            "doc_index": 276811,
            "doc_name": "java.text.MessageFormat.setFormatsByArgumentIndex(java.text.Format[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119324,
        "text": "if the given argument is greater than 999999999 or less than 0",
        "meta": {
            "doc_index": 276733,
            "doc_name": "java.sql.Timestamp.setNanos(int).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "GT-1"
            ],
            [
                38,
                47,
                "GT-2"
            ],
            [
                61,
                62,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119325,
        "text": "if beginIndex is less then 0, endIndex is greater than the length of the string, or beginIndex is greater than endIndex.",
        "meta": {
            "doc_index": 276751,
            "doc_name": "java.text.AttributedString.getIterator(java.text.AttributedCharacterIterator.Attribute[],int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                28,
                "LT-2"
            ],
            [
                30,
                38,
                "GT-1"
            ],
            [
                55,
                79,
                "GT-2"
            ],
            [
                84,
                94,
                "GT-1"
            ],
            [
                111,
                119,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119326,
        "text": "if filename is null",
        "meta": {
            "doc_index": 274685,
            "doc_name": "java.lang.Runtime.load(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119327,
        "text": "if the given pattern or locale is null",
        "meta": {
            "doc_index": 276842,
            "doc_name": "java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                30,
                "EQ-1"
            ],
            [
                34,
                38,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119328,
        "text": "if xpoints or ypoints is null.",
        "meta": {
            "doc_index": 273963,
            "doc_name": "java.awt.Polygon.Polygon(int[],int[],int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119329,
        "text": "if b is null.",
        "meta": {
            "doc_index": 274283,
            "doc_name": "java.io.InputStream.read(byte[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119330,
        "text": "if either argument is null",
        "meta": {
            "doc_index": 274516,
            "doc_name": "java.lang.invoke.MethodHandleInfo.reflectAs(java.lang.Class<T>,java.lang.invoke.MethodHandles.Lookup).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119331,
        "text": "if trustedCert is null",
        "meta": {
            "doc_index": 275424,
            "doc_name": "java.security.KeyStore.TrustedCertificateEntry.TrustedCertificateEntry(java.security.Certificate).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119332,
        "text": "If b is null.",
        "meta": {
            "doc_index": 274126,
            "doc_name": "java.io.ByteArrayInputStream.read(byte[],int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119334,
        "text": "if props is null",
        "meta": {
            "doc_index": 273907,
            "doc_name": "java.awt.image.ImageFilter.setProperties(java.util.Hashtable<?,?>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119335,
        "text": "if ks is null.",
        "meta": {
            "doc_index": 275602,
            "doc_name": "java.security.spec.ECFieldF2m.ECFieldF2m(int,int[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "EQ-1"
            ],
            [
                9,
                13,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119336,
        "text": "if p is null.",
        "meta": {
            "doc_index": 275604,
            "doc_name": "java.security.spec.ECFieldFp.ECFieldFp(java.math.BigInteger).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119337,
        "text": "if the signature byte array is null, or the offset or length is less than 0, or the sum of the offset and length is greater than the length of the signature byte array.",
        "meta": {
            "doc_index": 275560,
            "doc_name": "java.security.Signature.verify(byte[],int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                27,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ],
            [
                40,
                60,
                "LT-1"
            ],
            [
                74,
                75,
                "LT-2"
            ],
            [
                80,
                112,
                "GT-1"
            ],
            [
                129,
                167,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119338,
        "text": "if the params value is invalid, null, or unsupported.",
        "meta": {
            "doc_index": 275386,
            "doc_name": "java.security.interfaces.DSAKeyPairGenerator.initialize(java.security.interfaces.DSAParams,java.security.SecureRandom).java.security.InvalidParameterException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119340,
        "text": "if there is an error accessing the BLOB or if start is less than 1",
        "meta": {
            "doc_index": 275655,
            "doc_name": "java.sql.Blob.position(byte[],long).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                46,
                51,
                "LT-1"
            ],
            [
                65,
                66,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119341,
        "text": "if isHeadless() returns true",
        "meta": {
            "doc_index": 273862,
            "doc_name": "java.awt.GraphicsEnvironment.getScreenDevices().java.awt.HeadlessException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "Returns-1"
            ],
            [
                24,
                28,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119342,
        "text": "if beginIndex is less then 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don't define a non-empty subrange of the string.",
        "meta": {
            "doc_index": 276748,
            "doc_name": "java.text.AttributedString.addAttribute(java.text.AttributedCharacterIterator.Attribute,java.lang.Object,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                28,
                "LT-2"
            ],
            [
                30,
                38,
                "GT-1"
            ],
            [
                55,
                79,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119343,
        "text": "if host is null.",
        "meta": {
            "doc_index": 274941,
            "doc_name": "java.net.Socket.Socket(java.net.InetAddress,int,boolean).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119344,
        "text": "if toAppendTo or pos is null",
        "meta": {
            "doc_index": 276775,
            "doc_name": "java.text.DecimalFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119346,
        "text": "if saltLen or trailerField is less than 0.",
        "meta": {
            "doc_index": 275621,
            "doc_name": "java.security.spec.PSSParameterSpec.PSSParameterSpec(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                26,
                "LT-1"
            ],
            [
                40,
                41,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119347,
        "text": "if either off or len is negative, or if off+len is greater than b.length.",
        "meta": {
            "doc_index": 275536,
            "doc_name": "java.security.SecureClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.CodeSource).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                13,
                "Negative"
            ],
            [
                17,
                20,
                "Negative"
            ],
            [
                40,
                47,
                "GT-1"
            ],
            [
                64,
                72,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119348,
        "text": "if the specified provider is null or empty, or if the specified parameters are not understood by the PolicySpi implementation from the specified provider.",
        "meta": {
            "doc_index": 275524,
            "doc_name": "java.security.Policy.getInstance(java.lang.String,java.security.Policy.Parameters,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119349,
        "text": "if a database access error occurs, this method is called on a closed Statement or the condition seconds >= 0 is not satisfied",
        "meta": {
            "doc_index": 276675,
            "doc_name": "java.sql.Statement.setQueryTimeout(int).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                82,
                103,
                "LT-1"
            ],
            [
                107,
                108,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119350,
        "text": "if the value index is negative or not less than seq.length().",
        "meta": {
            "doc_index": 274477,
            "doc_name": "java.lang.Character.codePointAt(java.lang.CharSequence,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "Negative"
            ],
            [
                48,
                60,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119351,
        "text": "If the name is null.",
        "meta": {
            "doc_index": 273623,
            "doc_name": "com.sun.security.auth.LdapPrincipal.LdapPrincipal(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119352,
        "text": "if certificate is null",
        "meta": {
            "doc_index": 275360,
            "doc_name": "java.security.cert.X509CRL.getRevokedCertificate(java.security.cert.X509Certificate).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119353,
        "text": "if the host argument is null.",
        "meta": {
            "doc_index": 274717,
            "doc_name": "java.lang.SecurityManager.checkConnect(java.lang.String,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119354,
        "text": "if the specified security context is not an instance of AccessControlContext (e.g., is null), or does not have permission to read the specified file.",
        "meta": {
            "doc_index": 274708,
            "doc_name": "java.lang.SecurityManager.checkRead(java.lang.String,java.lang.Object).SecurityException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "NotType-1"
            ],
            [
                56,
                76,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 119355,
        "text": "if locale is null",
        "meta": {
            "doc_index": 273870,
            "doc_name": "java.awt.im.InputContext.selectInputMethod(java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119356,
        "text": "if instant is null.",
        "meta": {
            "doc_index": 276735,
            "doc_name": "java.sql.Timestamp.from(java.time.Instant).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119357,
        "text": "If n is negative.",
        "meta": {
            "doc_index": 274114,
            "doc_name": "java.io.BufferedReader.skip(long).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "Negative"
            ]
        ]
    },
    {
        "id": 119358,
        "text": "if mdName, or mgfName is null.",
        "meta": {
            "doc_index": 275620,
            "doc_name": "java.security.spec.PSSParameterSpec.PSSParameterSpec(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119359,
        "text": "if source is null.",
        "meta": {
            "doc_index": 273822,
            "doc_name": "java.awt.event.InputMethodEvent.getMostRecentEventTimeForSource(java.lang.Object).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119360,
        "text": "if the provided context is null.",
        "meta": {
            "doc_index": 275217,
            "doc_name": "java.security.AccessControlContext.AccessControlContext(java.security.AccessControlContext,java.security.DomainCombiner).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119361,
        "text": "if roundingMode is null.",
        "meta": {
            "doc_index": 276794,
            "doc_name": "java.text.DecimalFormat.setRoundingMode(java.math.RoundingMode).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119362,
        "text": "if the lib argument is null.",
        "meta": {
            "doc_index": 274703,
            "doc_name": "java.lang.SecurityManager.checkLink(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119363,
        "text": "if curve, g, or n is null.",
        "meta": {
            "doc_index": 275607,
            "doc_name": "java.security.spec.ECParameterSpec.ECParameterSpec(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                21,
                25,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119364,
        "text": "If any of the following is true: srcBegin is negative.",
        "meta": {
            "doc_index": 273538,
            "doc_name": "com.sun.org.apache.xml.internal.utils.FastStringBuffer.getChars(int,int,char[],int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                41,
                "Negative"
            ]
        ]
    },
    {
        "id": 119365,
        "text": "if the item's value is null",
        "meta": {
            "doc_index": 273702,
            "doc_name": "java.awt.Choice.add(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119367,
        "text": "if pattern is null",
        "meta": {
            "doc_index": 276770,
            "doc_name": "java.text.DecimalFormat.DecimalFormat(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119368,
        "text": "if numBuffers is less than two, or if BufferCapabilities.isPageFlipping is not true.",
        "meta": {
            "doc_index": 273729,
            "doc_name": "java.awt.Component.FlipBufferStrategy.FlipBufferStrategy(int,java.awt.BufferCapabilities).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                30,
                "LT-2"
            ],
            [
                38,
                71,
                "EQ-1"
            ],
            [
                79,
                83,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119369,
        "text": "will be thrown if proxy is null, or proxy has the wrong type",
        "meta": {
            "doc_index": 275010,
            "doc_name": "java.net.URL.openConnection(java.net.Proxy).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                18,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119370,
        "text": "if there is an error accessing the CLOB value or if start is less than 1",
        "meta": {
            "doc_index": 275875,
            "doc_name": "java.sql.Clob.position(java.sql.Clob,long).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                57,
                "LT-1"
            ],
            [
                71,
                72,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119371,
        "text": "if the port parameter is outside the specified range of valid port values, which is between 0 and 65535, inclusive.",
        "meta": {
            "doc_index": 274899,
            "doc_name": "java.net.ServerSocket.ServerSocket(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "LT-1"
            ],
            [
                92,
                93,
                "LT-2"
            ],
            [
                98,
                103,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119372,
        "text": "if suffix is null.",
        "meta": {
            "doc_index": 273553,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.endsWith(java.lang.String).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119373,
        "text": "if the value supplied for columns is less than 0",
        "meta": {
            "doc_index": 274004,
            "doc_name": "java.awt.TextArea.setColumns(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "LT-1"
            ],
            [
                47,
                48,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119374,
        "text": "if the beginIndex is negative, or endIndex is larger than the length of the given sequence, or beginIndex is larger than endIndex.",
        "meta": {
            "doc_index": 274493,
            "doc_name": "java.lang.Character.codePointCount(java.lang.CharSequence,int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "Negative"
            ],
            [
                34,
                42,
                "GT-1"
            ],
            [
                58,
                90,
                "GT-2"
            ],
            [
                95,
                105,
                "GT-1"
            ],
            [
                121,
                129,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119375,
        "text": "if the engine is not initialized properly, if this signature algorithm is unable to process the input data provided, or if len is less than the actual signature length.",
        "meta": {
            "doc_index": 275576,
            "doc_name": "java.security.SignatureSpi.engineSign(byte[],int,int).java.security.SignatureException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                123,
                126,
                "LT-1"
            ],
            [
                140,
                167,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119376,
        "text": "if the specified security context is not an instance of AccessControlContext (e.g., is null), or is denied access to the resource specified by the given permission.",
        "meta": {
            "doc_index": 274692,
            "doc_name": "java.lang.SecurityManager.checkPermission(java.security.Permission,java.lang.Object).SecurityException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "NotType-1"
            ],
            [
                56,
                76,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 119377,
        "text": "if GraphicsEnvironment.isHeadless() returns true.",
        "meta": {
            "doc_index": 273671,
            "doc_name": "java.applet.Applet.Applet().java.awt.HeadlessException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                35,
                "Returns-1"
            ],
            [
                44,
                48,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119378,
        "text": "if codesource is null.",
        "meta": {
            "doc_index": 275029,
            "doc_name": "java.net.URLClassLoader.getPermissions(java.security.CodeSource).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119379,
        "text": "if the argument is null",
        "meta": {
            "doc_index": 274805,
            "doc_name": "java.net.DatagramPacket.setData(byte[],int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119380,
        "text": "if popup is null",
        "meta": {
            "doc_index": 273743,
            "doc_name": "java.awt.Component.add(java.awt.PopupMenu).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119382,
        "text": "if the specified position is greater than the number of items or less than zero",
        "meta": {
            "doc_index": 273707,
            "doc_name": "java.awt.Choice.select(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "GT-1"
            ],
            [
                42,
                61,
                "GT-2"
            ],
            [
                75,
                79,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119383,
        "text": "if the thread argument is null.",
        "meta": {
            "doc_index": 274696,
            "doc_name": "java.lang.SecurityManager.checkAccess(java.lang.Thread).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119384,
        "text": "if the mode argument is not equal to one of \"r\", \"rw\", \"rws\", or \"rwd\"",
        "meta": {
            "doc_index": 274383,
            "doc_name": "java.io.RandomAccessFile.RandomAccessFile(java.lang.String,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "NEQ-1"
            ],
            [
                44,
                47,
                "NEQ-2"
            ],
            [
                49,
                53,
                "NEQ-2"
            ],
            [
                55,
                60,
                "NEQ-2"
            ],
            [
                65,
                70,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119385,
        "text": "if the value is 0 or is negative.",
        "meta": {
            "doc_index": 274826,
            "doc_name": "java.net.DatagramSocket.setSendBufferSize(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "Negative"
            ],
            [
                16,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119386,
        "text": "if position is less than zero",
        "meta": {
            "doc_index": 274007,
            "doc_name": "java.awt.TextComponent.setCaretPosition(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                29,
                "LT-2"
            ],
            [
                3,
                11,
                "LT-1"
            ]
        ]
    },
    {
        "id": 119387,
        "text": "if the thread group argument is null.",
        "meta": {
            "doc_index": 274698,
            "doc_name": "java.lang.SecurityManager.checkAccess(java.lang.ThreadGroup).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                28,
                "EQ-1"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119388,
        "text": "if address is null.",
        "meta": {
            "doc_index": 274927,
            "doc_name": "java.net.Socket.Socket(java.net.InetAddress,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119389,
        "text": "if protectionAlgorithm is null",
        "meta": {
            "doc_index": 275416,
            "doc_name": "java.security.KeyStore.PasswordProtection.PasswordProtection(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119390,
        "text": "if n is negative, if the stream does not support seek, or if an I/O error occurs.",
        "meta": {
            "doc_index": 274232,
            "doc_name": "java.io.FileInputStream.skip(long).java.io.IOException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "Negative"
            ]
        ]
    },
    {
        "id": 119391,
        "text": "If the specified object is null",
        "meta": {
            "doc_index": 274547,
            "doc_name": "java.lang.reflect.Array.get(java.lang.Object,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119393,
        "text": "if the given pattern is null",
        "meta": {
            "doc_index": 276840,
            "doc_name": "java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119394,
        "text": "if alias is null",
        "meta": {
            "doc_index": 275466,
            "doc_name": "java.security.KeyStore.getEntry(java.lang.String,java.security.KeyStore.ProtectionParameter).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119395,
        "text": "if field, a, or b is null.",
        "meta": {
            "doc_index": 275613,
            "doc_name": "java.security.spec.EllipticCurve.EllipticCurve(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                21,
                25,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119396,
        "text": "if name or value is null",
        "meta": {
            "doc_index": 275514,
            "doc_name": "java.security.PKCS12Attribute.PKCS12Attribute(java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119397,
        "text": "if str is null.",
        "meta": {
            "doc_index": 273554,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.indexOf(java.lang.String).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119398,
        "text": "if numBuffers is less than 1, or if caps is null",
        "meta": {
            "doc_index": 273688,
            "doc_name": "java.awt.Canvas.createBufferStrategy(int,java.awt.BufferCapabilities).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                28,
                "LT-2"
            ],
            [
                36,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119399,
        "text": "If the specified object argument is null",
        "meta": {
            "doc_index": 274574,
            "doc_name": "java.lang.reflect.Array.set(java.lang.Object,int,java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                32,
                "EQ-1"
            ],
            [
                36,
                40,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119400,
        "text": "if m is not positive, or rp does not represent a valid reduction polynomial.",
        "meta": {
            "doc_index": 275601,
            "doc_name": "java.security.spec.ECFieldF2m.ECFieldF2m(int,java.math.BigInteger).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "Nonpositive"
            ]
        ]
    },
    {
        "id": 119401,
        "text": "if the file descriptor argument is null.",
        "meta": {
            "doc_index": 274705,
            "doc_name": "java.lang.SecurityManager.checkRead(java.io.FileDescriptor).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                31,
                "EQ-1"
            ],
            [
                35,
                39,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119402,
        "text": "if there is an error accessing the BLOB value or if pos is less than 1",
        "meta": {
            "doc_index": 275659,
            "doc_name": "java.sql.Blob.setBytes(long,byte[]).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                55,
                "LT-1"
            ],
            [
                69,
                70,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119403,
        "text": "if src is longer than dst or if for any element i of src, (src[i]&0xff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.",
        "meta": {
            "doc_index": 273887,
            "doc_name": "java.awt.image.ByteLookupTable.lookupPixel(byte[],byte[]).ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                58,
                78,
                "LT-1"
            ],
            [
                99,
                103,
                "LT-2"
            ],
            [
                132,
                162,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119404,
        "text": "if the value supplied for columns is less than 0.",
        "meta": {
            "doc_index": 274014,
            "doc_name": "java.awt.TextField.setColumns(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "LT-1"
            ],
            [
                47,
                48,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119405,
        "text": "if seq is null.",
        "meta": {
            "doc_index": 274476,
            "doc_name": "java.lang.Character.codePointAt(java.lang.CharSequence,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119406,
        "text": "if a database access error occurs, this method is called on a closed Statement or the condition rows >= 0 is not satisfied.",
        "meta": {
            "doc_index": 276687,
            "doc_name": "java.sql.Statement.setFetchSize(int).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                82,
                100,
                "LT-1"
            ],
            [
                104,
                105,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119407,
        "text": "if the key argument is null.",
        "meta": {
            "doc_index": 274729,
            "doc_name": "java.lang.SecurityManager.checkPropertyAccess(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119408,
        "text": "if prefix is null.",
        "meta": {
            "doc_index": 273549,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.startsWith(java.lang.String,int).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119409,
        "text": "if initialSize is negative",
        "meta": {
            "doc_index": 274137,
            "doc_name": "java.io.CharArrayWriter.CharArrayWriter(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "Negative"
            ]
        ]
    },
    {
        "id": 119410,
        "text": "if dst is null",
        "meta": {
            "doc_index": 273539,
            "doc_name": "com.sun.org.apache.xml.internal.utils.FastStringBuffer.getChars(int,int,char[],int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119411,
        "text": "if x or y is null.",
        "meta": {
            "doc_index": 275609,
            "doc_name": "java.security.spec.ECPoint.ECPoint(java.math.BigInteger,java.math.BigInteger).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119413,
        "text": "if flatness or limit is less than zero",
        "meta": {
            "doc_index": 273847,
            "doc_name": "java.awt.geom.FlatteningPathIterator.FlatteningPathIterator(java.awt.geom.PathIterator,double,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "LT-1"
            ],
            [
                34,
                38,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119414,
        "text": "if the length of any row in newZoneStrings is less than 5",
        "meta": {
            "doc_index": 276768,
            "doc_name": "java.text.DateFormatSymbols.setZoneStrings(java.lang.String[][]).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                42,
                "LT-1"
            ],
            [
                56,
                57,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119415,
        "text": "if pos is null.",
        "meta": {
            "doc_index": 276764,
            "doc_name": "java.text.DateFormat.parseObject(java.lang.String,java.text.ParsePosition).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119416,
        "text": "if text is null.",
        "meta": {
            "doc_index": 276737,
            "doc_name": "java.text.AttributedString.AttributedString(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119417,
        "text": "if the index argument is less than 1 or greater than the length of the char array",
        "meta": {
            "doc_index": 274485,
            "doc_name": "java.lang.Character.codePointBefore(char[],int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "LT-1"
            ],
            [
                35,
                36,
                "LT-2"
            ],
            [
                53,
                81,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119418,
        "text": "if attributes parameter is null.",
        "meta": {
            "doc_index": 273975,
            "doc_name": "java.awt.print.PrinterJob.printDialog(javax.print.attribute.PrintRequestAttributeSet).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119419,
        "text": "if attribute is null.",
        "meta": {
            "doc_index": 276745,
            "doc_name": "java.text.AttributedString.addAttribute(java.text.AttributedCharacterIterator.Attribute,java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119420,
        "text": "if the index argument is negative or not less than the limit argument, or if the limit argument is negative or greater than the length of the char array.",
        "meta": {
            "doc_index": 274481,
            "doc_name": "java.lang.Character.codePointAt(char[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "Negative"
            ],
            [
                51,
                69,
                "GE-2"
            ],
            [
                77,
                95,
                "Negative"
            ],
            [
                124,
                152,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119421,
        "text": "if orientation is null.",
        "meta": {
            "doc_index": 273744,
            "doc_name": "java.awt.Component.applyComponentOrientation(java.awt.ComponentOrientation).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119422,
        "text": "if a is null.",
        "meta": {
            "doc_index": 274478,
            "doc_name": "java.lang.Character.codePointAt(char[],int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119423,
        "text": "if size <= 0",
        "meta": {
            "doc_index": 274359,
            "doc_name": "java.io.PushbackInputStream.PushbackInputStream(java.io.InputStream,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "LE-1"
            ],
            [
                11,
                12,
                "LE-2"
            ]
        ]
    },
    {
        "id": 119424,
        "text": "if text or pos is null.",
        "meta": {
            "doc_index": 276788,
            "doc_name": "java.text.DecimalFormat.parse(java.lang.String,java.text.ParsePosition).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119425,
        "text": "if newZoneStrings is null",
        "meta": {
            "doc_index": 276769,
            "doc_name": "java.text.DateFormatSymbols.setZoneStrings(java.lang.String[][]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                21,
                25,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119426,
        "text": "if comp is null",
        "meta": {
            "doc_index": 273746,
            "doc_name": "java.awt.Container.add(java.awt.Component).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119427,
        "text": "if the beginIndex is negative, or endIndex is larger than the length of this String, or beginIndex is larger than endIndex.",
        "meta": {
            "doc_index": 274747,
            "doc_name": "java.lang.String.codePointCount(int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "Negative"
            ],
            [
                34,
                42,
                "GT-1"
            ],
            [
                58,
                83,
                "GT-2"
            ],
            [
                88,
                98,
                "GT-1"
            ],
            [
                114,
                122,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119428,
        "text": "if trustedCert or attributes is null",
        "meta": {
            "doc_index": 275425,
            "doc_name": "java.security.KeyStore.TrustedCertificateEntry.TrustedCertificateEntry(java.security.Certificate,java.util.Set<java.security.KeyStore.Entry.Attribute>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                28,
                "EQ-1"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119429,
        "text": "if w or params is null.",
        "meta": {
            "doc_index": 275611,
            "doc_name": "java.security.spec.ECPublicKeySpec.ECPublicKeySpec(java.security.spec.ECPoint,java.security.spec.ECParameterSpec).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119430,
        "text": "if the GraphicsEnvironment.isHeadless() method returns true",
        "meta": {
            "doc_index": 274039,
            "doc_name": "java.awt.Toolkit.isDynamicLayoutActive().java.awt.HeadlessException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                46,
                "Returns-1"
            ],
            [
                55,
                59,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119431,
        "text": "if the index argument is less than 1 or greater than seq.length().",
        "meta": {
            "doc_index": 274483,
            "doc_name": "java.lang.Character.codePointBefore(java.lang.CharSequence,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "LT-1"
            ],
            [
                35,
                36,
                "LT-2"
            ],
            [
                53,
                65,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119432,
        "text": "if pipeSize <= 0.",
        "meta": {
            "doc_index": 274327,
            "doc_name": "java.io.PipedInputStream.PipedInputStream(java.io.PipedOutputStream,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "LE-1"
            ],
            [
                15,
                16,
                "LE-2"
            ]
        ]
    },
    {
        "id": 119433,
        "text": "if src is longer than dst or if for any element i of src, src[i]-offset is either less than zero or greater than or equal to the length of the lookup table for any band.",
        "meta": {
            "doc_index": 273886,
            "doc_name": "java.awt.image.ByteLookupTable.lookupPixel(int[],int[]).ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                58,
                71,
                "LT-1"
            ],
            [
                92,
                96,
                "LT-2"
            ],
            [
                125,
                155,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119434,
        "text": "if npoints is greater than the length of xpoints or the length of ypoints.",
        "meta": {
            "doc_index": 273962,
            "doc_name": "java.awt.Polygon.Polygon(int[],int[],int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "GT-1"
            ],
            [
                27,
                48,
                "GT-2"
            ],
            [
                52,
                73,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119435,
        "text": "if number is null or not an instance of Number.",
        "meta": {
            "doc_index": 276774,
            "doc_name": "java.text.DecimalFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ],
            [
                40,
                46,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 119436,
        "text": "if a database access error occurs, this method is called on a closed Statement or the condition max >= 0 is not satisfied",
        "meta": {
            "doc_index": 276670,
            "doc_name": "java.sql.Statement.setMaxFieldSize(int).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                82,
                99,
                "LT-1"
            ],
            [
                103,
                104,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119437,
        "text": "if any of the parameters, i.e. prime, primeExponent, crtCoefficient, is null.",
        "meta": {
            "doc_index": 275625,
            "doc_name": "java.security.spec.RSAOtherPrimeInfo.RSAOtherPrimeInfo(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                67,
                "EQ-1"
            ],
            [
                72,
                76,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119438,
        "text": "if roundingMode is null",
        "meta": {
            "doc_index": 276836,
            "doc_name": "java.text.NumberFormat.setRoundingMode(java.math.RoundingMode).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119440,
        "text": "if the beginIndex is negative, or endIndex is larger than the length of this String object, or beginIndex is larger than endIndex.",
        "meta": {
            "doc_index": 273560,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.substring(int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "Negative"
            ],
            [
                34,
                42,
                "GT-1"
            ],
            [
                58,
                90,
                "GT-2"
            ],
            [
                95,
                105,
                "GT-1"
            ],
            [
                121,
                129,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119441,
        "text": "if index is less than 0",
        "meta": {
            "doc_index": 273705,
            "doc_name": "java.awt.Choice.insert(java.lang.String,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "LT-1"
            ],
            [
                22,
                23,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119442,
        "text": "if key or value is null.",
        "meta": {
            "doc_index": 274768,
            "doc_name": "java.lang.System.setProperty(java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119443,
        "text": "if time is null",
        "meta": {
            "doc_index": 276729,
            "doc_name": "java.sql.Time.valueOf(java.time.LocalTime).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119445,
        "text": "if the cmd argument is null.",
        "meta": {
            "doc_index": 274701,
            "doc_name": "java.lang.SecurityManager.checkExec(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119446,
        "text": "if the text has length 0 and the attributes parameter is not an empty Map (attributes cannot be applied to a 0-length range).",
        "meta": {
            "doc_index": 276739,
            "doc_name": "java.text.AttributedString.AttributedString(java.lang.String,java.util.Map<? extends java.text.AttributedCharacterIterator.Attribute,?>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                22,
                "EQ-1"
            ],
            [
                23,
                24,
                "EQ-2"
            ],
            [
                29,
                53,
                "NEQ-1"
            ],
            [
                61,
                73,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119447,
        "text": "if groupID is null",
        "meta": {
            "doc_index": 275093,
            "doc_name": "java.rmi.activation.ActivationDesc.ActivationDesc(java.rmi.activation.ActivationGroupID,java.lang.String,java.lang.String,java.rmi.MarshalledObject<?>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119448,
        "text": "if the permission argument is null.",
        "meta": {
            "doc_index": 274691,
            "doc_name": "java.lang.SecurityManager.checkPermission(java.security.Permission).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                26,
                "EQ-1"
            ],
            [
                30,
                34,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119449,
        "text": "if stdName is null.",
        "meta": {
            "doc_index": 275606,
            "doc_name": "java.security.spec.ECGenParameterSpec.ECGenParameterSpec(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119450,
        "text": "if s or params is null.",
        "meta": {
            "doc_index": 275610,
            "doc_name": "java.security.spec.ECPrivateKeySpec.ECPrivateKeySpec(java.math.BigInteger,java.security.spec.ECParameterSpec).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119451,
        "text": "if the argument is null.",
        "meta": {
            "doc_index": 274806,
            "doc_name": "java.net.DatagramPacket.setData(byte[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119452,
        "text": "if dest is null and this op was constructed using the constructor which takes only a RenderingHints argument, since the operation is ill defined.",
        "meta": {
            "doc_index": 273890,
            "doc_name": "java.awt.image.ColorConvertOp.filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119453,
        "text": "if the value supplied for rows is less than 0",
        "meta": {
            "doc_index": 274003,
            "doc_name": "java.awt.TextArea.setRows(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                30,
                "LT-1"
            ],
            [
                44,
                45,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119454,
        "text": "if out is null.",
        "meta": {
            "doc_index": 275330,
            "doc_name": "java.security.cert.Extension.encode(java.io.OutputStream).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119455,
        "text": "if serverName is null",
        "meta": {
            "doc_index": 275331,
            "doc_name": "java.security.cert.LDAPCertStoreParameters.LDAPCertStoreParameters(java.lang.String,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119456,
        "text": "if a or b is not null and not in field.",
        "meta": {
            "doc_index": 275614,
            "doc_name": "java.security.spec.EllipticCurve.EllipticCurve(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "NEQ-1"
            ],
            [
                17,
                21,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119457,
        "text": "if GraphicsEnvironment.isHeadless returns true",
        "meta": {
            "doc_index": 273879,
            "doc_name": "java.awt.im.spi.InputMethodContext.createInputMethodWindow(java.lang.String,boolean).HeadlessException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "Returns-1"
            ],
            [
                44,
                46,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119458,
        "text": "if ip is null",
        "meta": {
            "doc_index": 273908,
            "doc_name": "java.awt.image.ImageFilter.resendTopDownLeftRight(java.awt.image.ImageProducer).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "EQ-1"
            ],
            [
                9,
                13,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119459,
        "text": "if configuration or protectionParams is null",
        "meta": {
            "doc_index": 275371,
            "doc_name": "java.security.DomainLoadStoreParameter.DomainLoadStoreParameter(java.net.URI,java.util.Map<java.lang.String,java.security.KeyStore.ProtectionParameter>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                36,
                "EQ-1"
            ],
            [
                40,
                44,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119460,
        "text": "if privateKey, chain or attributes is null",
        "meta": {
            "doc_index": 275420,
            "doc_name": "java.security.KeyStore.PrivateKeyEntry.PrivateKeyEntry(java.security.PrivateKey,java.security.Certificate[],java.util.Set<java.security.KeyStore.Entry.Attribute>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                34,
                "EQ-1"
            ],
            [
                38,
                42,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119461,
        "text": "if any of the components in the specified dimensions argument is negative.",
        "meta": {
            "doc_index": 274545,
            "doc_name": "java.lang.reflect.Array.newInstance(java.lang.Class<?>,int...).java.lang.NegativeArraySizeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                61,
                "Negative"
            ]
        ]
    },
    {
        "id": 119464,
        "text": "if either primaryType, subType or representationClass is null",
        "meta": {
            "doc_index": 273762,
            "doc_name": "java.awt.datatransfer.DataFlavor.DataFlavor(java.lang.String,java.lang.String,java.awt.datatransfer.MimeTypeParameterList,java.lang.Class<?>,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                53,
                "EQ-1"
            ],
            [
                57,
                61,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119465,
        "text": "if listenerType is null",
        "meta": {
            "doc_index": 273758,
            "doc_name": "java.awt.Container.getListeners(java.lang.Class<T>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119466,
        "text": "if the capacity argument is less than 0.",
        "meta": {
            "doc_index": 274754,
            "doc_name": "java.lang.StringBuffer.StringBuffer(int).NegativeArraySizeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                24,
                "LT-1"
            ],
            [
                38,
                39,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119467,
        "text": "If the specified index argument is negative, or if it is greater than or equal to the length of the specified array",
        "meta": {
            "doc_index": 274549,
            "doc_name": "java.lang.reflect.Array.get(java.lang.Object,int).java.lang.ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                31,
                "Negative"
            ],
            [
                51,
                53,
                "GE-1"
            ],
            [
                82,
                115,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119468,
        "text": "if the beginIndex is negative, or endIndex is larger than the length of this sequence, or beginIndex is larger than endIndex.",
        "meta": {
            "doc_index": 274470,
            "doc_name": "java.lang.AbstractStringBuilder.codePointCount(int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "Negative"
            ],
            [
                34,
                42,
                "GT-1"
            ],
            [
                58,
                85,
                "GT-2"
            ],
            [
                90,
                100,
                "GT-1"
            ],
            [
                116,
                124,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119469,
        "text": "if no protocol is specified, or an unknown protocol is found, or spec is null.",
        "meta": {
            "doc_index": 275002,
            "doc_name": "java.net.URL.URL(java.lang.String).java.net.MalformedURLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                65,
                69,
                "EQ-1"
            ],
            [
                73,
                77,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119471,
        "text": "if the specified offset is less than the first text boundary or greater than the last text boundary.",
        "meta": {
            "doc_index": 276752,
            "doc_name": "java.text.BreakIterator.following(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "LT-1"
            ],
            [
                37,
                60,
                "LT-2"
            ],
            [
                77,
                99,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119472,
        "text": "if beginIndex is negative or larger than the length of this String object.",
        "meta": {
            "doc_index": 273559,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.substring(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "Negative"
            ],
            [
                41,
                73,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119473,
        "text": "if dateTime is null.",
        "meta": {
            "doc_index": 276734,
            "doc_name": "java.sql.Timestamp.valueOf(java.time.LocalDateTime).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119474,
        "text": "if the address argument is null.",
        "meta": {
            "doc_index": 274724,
            "doc_name": "java.lang.SecurityManager.checkMulticast(java.net.InetAddress).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119475,
        "text": "if profiles is null",
        "meta": {
            "doc_index": 273889,
            "doc_name": "java.awt.image.ColorConvertOp.ColorConvertOp(java.awt.color.ICC_Profile[],java.awt.RenderingHints).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119476,
        "text": "if the specified URI is null.",
        "meta": {
            "doc_index": 275627,
            "doc_name": "java.security.URIParameter.URIParameter(java.net.URI).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119477,
        "text": "if src is longer than dst or if for any element i of src, (src[i]&0xffff)-offset is either less than zero or greater than or equal to the length of the lookup table for any band.",
        "meta": {
            "doc_index": 273921,
            "doc_name": "java.awt.image.ShortLookupTable.lookupPixel(int[],int[]).ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                58,
                80,
                "LT-1"
            ],
            [
                101,
                105,
                "LT-2"
            ],
            [
                134,
                164,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119478,
        "text": "if the package name argument is null.",
        "meta": {
            "doc_index": 274736,
            "doc_name": "java.lang.SecurityManager.checkPackageAccess(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                28,
                "EQ-1"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119479,
        "text": "if the specified dst is null.",
        "meta": {
            "doc_index": 274489,
            "doc_name": "java.lang.Character.toChars(int,char[],int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119480,
        "text": "if source or target is null.",
        "meta": {
            "doc_index": 276839,
            "doc_name": "java.text.RuleBasedCollator.compare(java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119481,
        "text": "if offset or count is negative, or if offset + count is larger than the length of the given array.",
        "meta": {
            "doc_index": 274495,
            "doc_name": "java.lang.Character.codePointCount(char[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "Negative"
            ],
            [
                13,
                18,
                "Negative"
            ],
            [
                38,
                52,
                "GT-1"
            ],
            [
                68,
                97,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119482,
        "text": "if the value supplied for timeout is less then 0",
        "meta": {
            "doc_index": 275943,
            "doc_name": "java.sql.Connection.isValid(int).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                33,
                "LT-1"
            ],
            [
                47,
                48,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119483,
        "text": "if the specified security context is not an instance of AccessControlContext (e.g., is null), or does not have permission to open a socket connection to the specified host and port.",
        "meta": {
            "doc_index": 274718,
            "doc_name": "java.lang.SecurityManager.checkConnect(java.lang.String,int,java.lang.Object).SecurityException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "NotType-1"
            ],
            [
                56,
                76,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 119484,
        "text": "the Pageable passed in was null.",
        "meta": {
            "doc_index": 273972,
            "doc_name": "java.awt.print.PrinterJob.setPageable(java.awt.print.Pageable).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119485,
        "text": "if the port parameter or localPort parameter is outside the specified range of valid port values, which is between 0 and 65535, inclusive.",
        "meta": {
            "doc_index": 274930,
            "doc_name": "java.net.Socket.Socket(java.lang.String,int,java.net.InetAddress,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                44,
                "LT-1"
            ],
            [
                115,
                116,
                "LT-2"
            ],
            [
                121,
                126,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119488,
        "text": "if either src or dest is null.",
        "meta": {
            "doc_index": 274758,
            "doc_name": "java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119489,
        "text": "if the specified length is negative",
        "meta": {
            "doc_index": 274542,
            "doc_name": "java.lang.reflect.Array.newInstance(java.lang.Class<?>,int).java.lang.NegativeArraySizeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "Negative"
            ]
        ]
    },
    {
        "id": 119490,
        "text": "if the index argument is less than 1 or greater than the length of this string.",
        "meta": {
            "doc_index": 274746,
            "doc_name": "java.lang.String.codePointBefore(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "LT-1"
            ],
            [
                35,
                36,
                "LT-2"
            ],
            [
                53,
                78,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119491,
        "text": "when GraphicsEnvironment.isHeadless() returns true",
        "meta": {
            "doc_index": 273783,
            "doc_name": "java.awt.Dialog.Dialog(java.awt.Frame).HeadlessException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                5,
                37,
                "Returns-1"
            ],
            [
                46,
                50,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119492,
        "text": "if obj is null.",
        "meta": {
            "doc_index": 276785,
            "doc_name": "java.text.DecimalFormat.formatToCharacterIterator(java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119493,
        "text": "if collection is null",
        "meta": {
            "doc_index": 275328,
            "doc_name": "java.security.cert.CollectionCertStoreParameters.CollectionCertStoreParameters(java.util.Collection<?>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119495,
        "text": "If sz <= 0",
        "meta": {
            "doc_index": 274109,
            "doc_name": "java.io.BufferedReader.BufferedReader(java.io.Reader,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "LE-1"
            ],
            [
                9,
                10,
                "LE-2"
            ]
        ]
    },
    {
        "id": 119496,
        "text": "if the name is null.",
        "meta": {
            "doc_index": 273653,
            "doc_name": "com.sun.security.auth.NTDomainPrincipal.NTDomainPrincipal(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119497,
        "text": "if the width or height is less than or equal to zero.",
        "meta": {
            "doc_index": 273918,
            "doc_name": "java.awt.image.Raster.createCompatibleWritableRaster(int,int).RasterFormatException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "LE-1"
            ],
            [
                48,
                52,
                "LE-2"
            ]
        ]
    },
    {
        "id": 119498,
        "text": "if GraphicsEnvironment.isHeadless returns true",
        "meta": {
            "doc_index": 273684,
            "doc_name": "java.awt.Button.readObject(java.io.ObjectInputStream).java.awt.HeadlessException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "Returns-1"
            ],
            [
                42,
                46,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119499,
        "text": "if the specified object is null and the field is an instance field.",
        "meta": {
            "doc_index": 274608,
            "doc_name": "java.lang.reflect.Field.get(java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119500,
        "text": "if the index argument is negative or not less than the length of this string.",
        "meta": {
            "doc_index": 273545,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.charAt(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "Negative"
            ],
            [
                51,
                76,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119501,
        "text": "if the specified listenertype parameter is null",
        "meta": {
            "doc_index": 273674,
            "doc_name": "java.awt.AWTEventMulticaster.getListeners(java.util.EventListener,java.lang.Class<T>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                39,
                "EQ-1"
            ],
            [
                43,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119502,
        "text": "if numBuffers is less than 1.",
        "meta": {
            "doc_index": 273685,
            "doc_name": "java.awt.Canvas.createBufferStrategy(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                28,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119503,
        "text": "if a database access error occurs or the url is null",
        "meta": {
            "doc_index": 276124,
            "doc_name": "java.sql.Driver.connect(java.lang.String,java.util.Properties).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                44,
                "EQ-1"
            ],
            [
                48,
                52,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119504,
        "text": "if date is null",
        "meta": {
            "doc_index": 276122,
            "doc_name": "java.sql.Date.valueOf(java.time.LocalDate).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119505,
        "text": "if any of the given arguments is null",
        "meta": {
            "doc_index": 276772,
            "doc_name": "java.text.DecimalFormat.DecimalFormat(java.lang.String,java.text.DecimalFormatSymbols).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                29,
                "EQ-1"
            ],
            [
                33,
                37,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119506,
        "text": "if a group for the specified id is already active and that group is not equal to the specified group or that group has a different incarnation than the specified group",
        "meta": {
            "doc_index": 275139,
            "doc_name": "java.rmi.activation.ActivationSystem.activeGroup(java.rmi.activation.ActivationGroupID,java.rmi.activation.ActivationInstantiator,long).java.rmi.activation.ActivationException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                81,
                100,
                "NEQ-2"
            ],
            [
                54,
                64,
                "NEQ-1"
            ]
        ]
    },
    {
        "id": 119509,
        "text": "if driver is null",
        "meta": {
            "doc_index": 276132,
            "doc_name": "java.sql.DriverManager.registerDriver(java.sql.Driver).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119510,
        "text": "if a database access error occurs; this method is called on a closed result set or the condition rows >= 0 is not satisfied",
        "meta": {
            "doc_index": 276284,
            "doc_name": "java.sql.ResultSet.setFetchSize(int).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                83,
                101,
                "LT-1"
            ],
            [
                105,
                106,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119511,
        "text": "if formatElementIndex is equal to or larger than the number of format elements in the pattern string",
        "meta": {
            "doc_index": 276813,
            "doc_name": "java.text.MessageFormat.setFormat(int,java.text.Format).ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "GE-1"
            ],
            [
                49,
                100,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119512,
        "text": "if currency is null",
        "meta": {
            "doc_index": 276793,
            "doc_name": "java.text.DecimalFormat.setCurrency(java.util.Currency).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119513,
        "text": "if the provider is null.",
        "meta": {
            "doc_index": 275250,
            "doc_name": "java.security.AlgorithmParameters.getInstance(java.lang.String,java.security.Provider).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119514,
        "text": "if the specified componentType argument is null",
        "meta": {
            "doc_index": 274543,
            "doc_name": "java.lang.reflect.Array.newInstance(java.lang.Class<?>,int...).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                39,
                "EQ-1"
            ],
            [
                43,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119515,
        "text": "if secretKey is null",
        "meta": {
            "doc_index": 275422,
            "doc_name": "java.security.KeyStore.SecretKeyEntry.SecretKeyEntry(javax.crypto.SecretKey).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119516,
        "text": "if n or h is not positive.",
        "meta": {
            "doc_index": 275608,
            "doc_name": "java.security.spec.ECParameterSpec.ECParameterSpec(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "Nonpositive"
            ],
            [
                8,
                9,
                "Nonpositive"
            ]
        ]
    },
    {
        "id": 119517,
        "text": "if m is not positive.",
        "meta": {
            "doc_index": 275599,
            "doc_name": "java.security.spec.ECFieldF2m.ECFieldF2m(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "Nonpositive"
            ]
        ]
    },
    {
        "id": 119518,
        "text": "if the coordinates are not in bounds, or if obj is not null or not large enough to hold the pixel data",
        "meta": {
            "doc_index": 273914,
            "doc_name": "java.awt.image.MultiPixelPackedSampleModel.getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer).ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                47,
                "NEQ-1"
            ],
            [
                55,
                59,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119519,
        "text": "if the Transferable is null",
        "meta": {
            "doc_index": 273774,
            "doc_name": "java.awt.datatransfer.DataFlavor.getReaderForText(java.awt.datatransfer.Transferable).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119520,
        "text": "if the index argument is not greater than the start argument or is greater than the length of the char array, or if the start argument is negative or not less than the length of the char array.",
        "meta": {
            "doc_index": 274487,
            "doc_name": "java.lang.Character.codePointBefore(char[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "LE-1"
            ],
            [
                42,
                60,
                "LE-2"
            ],
            [
                80,
                108,
                "GT-2"
            ],
            [
                116,
                134,
                "Negative"
            ],
            [
                164,
                192,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119521,
        "text": "if the item's value is equal to null",
        "meta": {
            "doc_index": 273703,
            "doc_name": "java.awt.Choice.addItem(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119522,
        "text": "if obj is not a primitive array of type TransferType or is not null",
        "meta": {
            "doc_index": 273913,
            "doc_name": "java.awt.image.MultiPixelPackedSampleModel.getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer).ClassCastException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "NotType-1"
            ],
            [
                16,
                52,
                "NotType-2"
            ],
            [
                63,
                67,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119523,
        "text": "If the priority is not in the range MIN_PRIORITY to MAX_PRIORITY.",
        "meta": {
            "doc_index": 274784,
            "doc_name": "java.lang.Thread.setPriority(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "LT-1"
            ],
            [
                36,
                48,
                "LT-2"
            ],
            [
                52,
                64,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119524,
        "text": "if target is null.",
        "meta": {
            "doc_index": 274742,
            "doc_name": "java.lang.SecurityManager.checkSecurityAccess(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119525,
        "text": "if there is an error accessing the CLOB value; if pos is less than 1 or length is less than 0",
        "meta": {
            "doc_index": 275867,
            "doc_name": "java.sql.Clob.getSubString(long,int).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                53,
                "LT-1"
            ],
            [
                67,
                68,
                "LT-2"
            ],
            [
                72,
                78,
                "LT-1"
            ],
            [
                92,
                93,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119526,
        "text": "if this signature object is not initialized properly, if this signature algorithm is unable to process the input data provided, or if len is less than the actual signature length.",
        "meta": {
            "doc_index": 275557,
            "doc_name": "java.security.Signature.sign(byte[],int,int).java.security.SignatureException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                134,
                137,
                "LT-1"
            ],
            [
                151,
                178,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119527,
        "text": "- if the permission is not a BasicPermission, or if the permission is not of the same Class as the other permissions in this collection.",
        "meta": {
            "doc_index": 275268,
            "doc_name": "java.security.BasicPermissionCollection.add(java.security.Permission).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                5,
                19,
                "NotType-1"
            ],
            [
                29,
                44,
                "NotType-2"
            ],
            [
                52,
                66,
                "NotType-1"
            ],
            [
                77,
                135,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 119528,
        "text": "if name is null.",
        "meta": {
            "doc_index": 275026,
            "doc_name": "java.net.URLClassLoader.findClass(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119529,
        "text": "if p is not positive.",
        "meta": {
            "doc_index": 275605,
            "doc_name": "java.security.spec.ECFieldFp.ECFieldFp(java.math.BigInteger).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "Nonpositive"
            ]
        ]
    },
    {
        "id": 119530,
        "text": "if secretKey or attributes is null",
        "meta": {
            "doc_index": 275423,
            "doc_name": "java.security.KeyStore.SecretKeyEntry.SecretKeyEntry(javax.crypto.SecretKey,java.util.Set<java.security.KeyStore.Entry.Attribute>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                26,
                "EQ-1"
            ],
            [
                30,
                34,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119531,
        "text": "if either u or p is null, or p has the wrong type.",
        "meta": {
            "doc_index": 275051,
            "doc_name": "java.net.URLStreamHandler.openConnection(java.net.URL,java.net.Proxy).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119532,
        "text": "if any reference argument is null",
        "meta": {
            "doc_index": 274520,
            "doc_name": "java.lang.invoke.MethodHandleInfo.toString(int,java.lang.Class<?>,java.lang.String,java.lang.invoke.MethodType).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119533,
        "text": "if the window argument is null.",
        "meta": {
            "doc_index": 274731,
            "doc_name": "java.lang.SecurityManager.checkTopLevelWindow(java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119534,
        "text": "if source is null",
        "meta": {
            "doc_index": 276759,
            "doc_name": "java.text.CollationKey.CollationKey(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119535,
        "text": "if the index argument is negative or not less than the length of this sequence.",
        "meta": {
            "doc_index": 274468,
            "doc_name": "java.lang.AbstractStringBuilder.codePointAt(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "Negative"
            ],
            [
                51,
                78,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119536,
        "text": "if the specified componentType parameter is null",
        "meta": {
            "doc_index": 274540,
            "doc_name": "java.lang.reflect.Array.newInstance(java.lang.Class<?>,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119537,
        "text": "if the DisplayMode supplied is null, or is not available in the array returned by getDisplayModes",
        "meta": {
            "doc_index": 273860,
            "doc_name": "java.awt.GraphicsDevice.setDisplayMode(java.awt.DisplayMode).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119539,
        "text": "if str is null",
        "meta": {
            "doc_index": 273556,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.indexOf(java.lang.String,int).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119540,
        "text": "if privateKey or chain is null",
        "meta": {
            "doc_index": 275418,
            "doc_name": "java.security.KeyStore.PrivateKeyEntry.PrivateKeyEntry(java.security.PrivateKey,java.security.Certificate[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119542,
        "text": "if the specified type is null.",
        "meta": {
            "doc_index": 275519,
            "doc_name": "java.security.Policy.getInstance(java.lang.String,java.security.Policy.Parameters).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119543,
        "text": "if the target parameter is null",
        "meta": {
            "doc_index": 273679,
            "doc_name": "java.awt.BorderLayout.getLayoutComponent(java.awt.Container,java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119544,
        "text": "If readAheadLimit < 0",
        "meta": {
            "doc_index": 274117,
            "doc_name": "java.io.BufferedReader.mark(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "LT-1"
            ],
            [
                20,
                21,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119545,
        "text": "if there is an error accessing the BLOB value; if pos is less than 1 or length is less than 0",
        "meta": {
            "doc_index": 275651,
            "doc_name": "java.sql.Blob.getBytes(long,int).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                53,
                "LT-1"
            ],
            [
                67,
                68,
                "LT-2"
            ],
            [
                72,
                78,
                "LT-1"
            ],
            [
                92,
                93,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119546,
        "text": "if offset is negative, or count is negative, or offset+count is larger than data.length.",
        "meta": {
            "doc_index": 274752,
            "doc_name": "java.lang.String.valueOf(char[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "Negative"
            ],
            [
                26,
                31,
                "Negative"
            ],
            [
                48,
                60,
                "GT-1"
            ],
            [
                76,
                87,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119547,
        "text": "if current group is null (not active)",
        "meta": {
            "doc_index": 275118,
            "doc_name": "java.rmi.activation.ActivationGroup.currentGroup().java.rmi.activation.ActivationException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119548,
        "text": "if client is null",
        "meta": {
            "doc_index": 273872,
            "doc_name": "java.awt.im.InputContext.removeNotify(java.awt.Component).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119549,
        "text": "if the parent is null",
        "meta": {
            "doc_index": 273966,
            "doc_name": "java.awt.PopupMenu.show(java.awt.Component,int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119550,
        "text": "if the index argument is less than 1 or greater than the length of this sequence.",
        "meta": {
            "doc_index": 274469,
            "doc_name": "java.lang.AbstractStringBuilder.codePointBefore(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "LT-1"
            ],
            [
                35,
                36,
                "LT-2"
            ],
            [
                53,
                80,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119551,
        "text": "if encodedKey is null.",
        "meta": {
            "doc_index": 275617,
            "doc_name": "java.security.spec.EncodedKeySpec.EncodedKeySpec(byte[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119552,
        "text": "if there is an error accessing the CLOB value or if pos is less than 1",
        "meta": {
            "doc_index": 275873,
            "doc_name": "java.sql.Clob.position(java.lang.String,long).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                55,
                "LT-1"
            ],
            [
                69,
                70,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119553,
        "text": "if exp is null",
        "meta": {
            "doc_index": 276798,
            "doc_name": "java.text.DecimalFormatSymbols.setExponentSeparator(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119554,
        "text": "if there is an error accessing the BLOB value or if len is less than 0",
        "meta": {
            "doc_index": 275665,
            "doc_name": "java.sql.Blob.truncate(long).java.sql.SQLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                55,
                "LT-1"
            ],
            [
                69,
                70,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119256,
        "text": "if the length of the bands argument is greater than the number of bands in the sample model.",
        "meta": {
            "doc_index": 273923,
            "doc_name": "java.awt.image.SinglePixelPackedSampleModel.createSubsetSampleModel(int[]).RasterFormatException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": "lmw",
        "labels": [
            [
                3,
                35,
                "GT-1"
            ],
            [
                52,
                91,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119494,
        "text": "if m is not positive, or the length of ks is neither 1 nor 3, or values in ks are not between m-1 and 1 (inclusive) and in descending order.",
        "meta": {
            "doc_index": 275603,
            "doc_name": "java.security.spec.ECFieldF2m.ECFieldF2m(int,int[]).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "Nonpositive"
            ],
            [
                25,
                41,
                "EQ-1"
            ],
            [
                53,
                54,
                "EQ-2"
            ],
            [
                59,
                60,
                "EQ-2"
            ],
            [
                65,
                77,
                "LE-1"
            ],
            [
                94,
                97,
                "LE-2"
            ],
            [
                102,
                103,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119555,
        "text": "if b is true and GraphicsEnvironment.isHeadless() returns true",
        "meta": {
            "doc_index": 279214,
            "doc_name": "javax.swing.JColorChooser.setDragEnabled(boolean).HeadlessException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ],
            [
                17,
                49,
                "Returns-1"
            ],
            [
                58,
                62,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119556,
        "text": "if loginModuleName is null, if LoginModuleName has a length of 0, if controlFlag is not either REQUIRED, REQUISITE, SUFFICIENT or OPTIONAL, or if options is null.",
        "meta": {
            "doc_index": 278854,
            "doc_name": "javax.security.auth.login.AppConfigurationEntry.AppConfigurationEntry(java.lang.String,javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag,java.util.Map<java.lang.String,?>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ],
            [
                53,
                59,
                "EQ-1"
            ],
            [
                63,
                64,
                "EQ-2"
            ],
            [
                69,
                80,
                "NEQ-1"
            ],
            [
                95,
                103,
                "NEQ-2"
            ],
            [
                105,
                114,
                "NEQ-2"
            ],
            [
                116,
                126,
                "NEQ-2"
            ],
            [
                130,
                138,
                "NEQ-2"
            ],
            [
                146,
                153,
                "EQ-1"
            ],
            [
                157,
                161,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119557,
        "text": "if rowHeight is less than 1",
        "meta": {
            "doc_index": 279360,
            "doc_name": "javax.swing.JTable.setRowHeight(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "LT-1"
            ],
            [
                26,
                27,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119558,
        "text": "(Unchecked exception) Thrown if any element of members is not a length-one or length-two array or if any non-null range in members has a lower bound less than zero.",
        "meta": {
            "doc_index": 278707,
            "doc_name": "javax.print.attribute.SetOfIntegerSyntax.SetOfIntegerSyntax(int[][]).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                1,
                20,
                "Thrown"
            ],
            [
                32,
                54,
                "NEQ-1"
            ],
            [
                64,
                74,
                "NEQ-2"
            ],
            [
                78,
                94,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119559,
        "text": "if f is null.",
        "meta": {
            "doc_index": 277600,
            "doc_name": "javax.imageio.stream.FileImageInputStream.FileImageInputStream(java.io.File).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119561,
        "text": "if pos is negative.",
        "meta": {
            "doc_index": 277756,
            "doc_name": "javax.imageio.stream.MemoryCache.write(int,long).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ]
        ]
    },
    {
        "id": 119565,
        "text": "for illegal value for initNumFields (<= 0)",
        "meta": {
            "doc_index": 278005,
            "doc_name": "javax.management.modelmbean.DescriptorSupport.DescriptorSupport(int).javax.management.RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                22,
                35,
                "LE-1"
            ],
            [
                40,
                41,
                "LE-2"
            ]
        ]
    },
    {
        "id": 119567,
        "text": "if index < 0",
        "meta": {
            "doc_index": 279297,
            "doc_name": "javax.swing.JPopupMenu.insert(javax.swing.Action,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "LT-1"
            ],
            [
                11,
                12,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119569,
        "text": "if imageTypes is null or empty, or if an object not of type ImageTypeSpecifier is retrieved from it.",
        "meta": {
            "doc_index": 277324,
            "doc_name": "javax.imageio.ImageReader.getDestination(javax.imageio.ImageReadParam,java.util.Iterator<javax.imageio.ImageTypeSpecifier>,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ],
            [
                38,
                47,
                "NotType-1"
            ],
            [
                60,
                78,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 119571,
        "text": "if the model is null",
        "meta": {
            "doc_index": 279257,
            "doc_name": "javax.swing.JList.JList(javax.swing.ListModel<E>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119572,
        "text": "if the specified Class is null.",
        "meta": {
            "doc_index": 278907,
            "doc_name": "javax.security.auth.Subject.getPrincipals(java.lang.Class<T>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119575,
        "text": "If attr is null, or if mod_op is not one of the ones specified above.",
        "meta": {
            "doc_index": 278575,
            "doc_name": "javax.naming.directory.ModificationItem.ModificationItem(int,javax.naming.directory.Attribute).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ],
            [
                23,
                29,
                "NEQ-1"
            ],
            [
                37,
                68,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119576,
        "text": "The granularity period is less than or equal to zero.",
        "meta": {
            "doc_index": 278091,
            "doc_name": "javax.management.monitor.Monitor.setGranularityPeriod(long).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "LE-1"
            ],
            [
                48,
                52,
                "LE-2"
            ]
        ]
    },
    {
        "id": 119578,
        "text": "if baseName is null",
        "meta": {
            "doc_index": 277028,
            "doc_name": "java.util.ResourceBundle.getBundle(java.lang.String).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119579,
        "text": "if messageType is not either INFORMATION, WARNING or ERROR, if message is null, or if message has a length of 0.",
        "meta": {
            "doc_index": 278847,
            "doc_name": "javax.security.auth.callback.TextOutputCallback.TextOutputCallback(int,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "NEQ-1"
            ],
            [
                29,
                40,
                "NEQ-2"
            ],
            [
                42,
                49,
                "NEQ-2"
            ],
            [
                53,
                58,
                "NEQ-2"
            ],
            [
                63,
                70,
                "EQ-1"
            ],
            [
                74,
                78,
                "EQ-2"
            ],
            [
                100,
                106,
                "EQ-1"
            ],
            [
                110,
                111,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119581,
        "text": "Wrap a java.lang.IllegalArgumentException: The object name in parameter is null or attributes in parameter is null.",
        "meta": {
            "doc_index": 277940,
            "doc_name": "javax.management.MBeanServerConnection.getAttributes(javax.management.ObjectName,java.lang.String[]).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                43,
                58,
                "EQ-1"
            ],
            [
                75,
                79,
                "EQ-2"
            ],
            [
                83,
                93,
                "EQ-1"
            ],
            [
                110,
                114,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119582,
        "text": "if the initial capacity is less than zero.",
        "meta": {
            "doc_index": 276925,
            "doc_name": "java.util.Hashtable.Hashtable(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "LT-1"
            ],
            [
                37,
                41,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119583,
        "text": "WRONG_DOCUMENT_ERR: Raised if refNode was created from a different document than the one that created this range.",
        "meta": {
            "doc_index": 281073,
            "doc_name": "org.w3c.dom.ranges.Range.setStart(org.w3c.dom.Node,int).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119585,
        "text": "if the submitted task is null.",
        "meta": {
            "doc_index": 273147,
            "doc_name": "com.sun.jmx.snmp.tasks.ThreadService.submitTask(com.sun.jmx.snmp.tasks.Task).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119587,
        "text": "if prefix is null or startingRow is out of bounds",
        "meta": {
            "doc_index": 279395,
            "doc_name": "javax.swing.JTree.getNextMatch(java.lang.String,int,javax.swing.text.Position.Bias).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119589,
        "text": "if this object represents a null value box type",
        "meta": {
            "doc_index": 280098,
            "doc_name": "org.omg.DynamicAny.DynValueBoxOperations.get_boxed_value().org.omg.DynamicAny.DynAnyPackage.InvalidValue",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                26,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119591,
        "text": "if baseName, targetLocale, loader, or control is null",
        "meta": {
            "doc_index": 277040,
            "doc_name": "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                45,
                "EQ-1"
            ],
            [
                49,
                53,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119595,
        "text": "(unchecked exception) Thrown if userName is null.",
        "meta": {
            "doc_index": 278737,
            "doc_name": "javax.print.attribute.standard.JobOriginatingUserName.JobOriginatingUserName(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119597,
        "text": "If the argument is null.",
        "meta": {
            "doc_index": 281265,
            "doc_name": "org.xml.sax.helpers.XMLReaderAdapter.XMLReaderAdapter(org.xml.sax.XMLReader).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119598,
        "text": "NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly and if it is not defined to be null.",
        "meta": {
            "doc_index": 281056,
            "doc_name": "org.w3c.dom.Node.setNodeValue(java.lang.String).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Thrown"
            ],
            [
                69,
                71,
                "NEQ-1"
            ],
            [
                93,
                97,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119600,
        "text": "if the key or value is null",
        "meta": {
            "doc_index": 276927,
            "doc_name": "java.util.Hashtable.put(K,V).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119604,
        "text": "(unchecked exception) Thrown if members is null or any element of members is null.",
        "meta": {
            "doc_index": 278757,
            "doc_name": "javax.print.attribute.standard.NumberUpSupported.NumberUpSupported(int[][]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                39,
                "EQ-1"
            ],
            [
                43,
                47,
                "EQ-2"
            ],
            [
                51,
                73,
                "EQ-1"
            ],
            [
                77,
                81,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119606,
        "text": "if param is null or is not an instance of the correct class.",
        "meta": {
            "doc_index": 277188,
            "doc_name": "javax.imageio.IIOParamController.activate(javax.imageio.IIOParam).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ],
            [
                42,
                59,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 119607,
        "text": "The specified high/low threshold is null or the low threshold is greater than the high threshold or the high threshold and the low threshold are not of the same type.",
        "meta": {
            "doc_index": 278084,
            "doc_name": "javax.management.monitor.GaugeMonitor.setThresholds(java.lang.Number,java.lang.Number).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "EQ-1"
            ],
            [
                36,
                40,
                "EQ-2"
            ],
            [
                44,
                61,
                "GT-1"
            ],
            [
                78,
                96,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119608,
        "text": "Wrap an java.lang.IllegalArgumentException: The object name in parameter is null or attributes in parameter is null.",
        "meta": {
            "doc_index": 272687,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.getAttributes(javax.management.ObjectName,java.lang.String[]).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                59,
                "EQ-1"
            ],
            [
                76,
                80,
                "EQ-2"
            ],
            [
                84,
                94,
                "EQ-1"
            ],
            [
                111,
                115,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119610,
        "text": "NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of either boundary-point of the Range is read-only.",
        "meta": {
            "doc_index": 281095,
            "doc_name": "org.w3c.dom.ranges.Range.surroundContents(org.w3c.dom.Node).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119611,
        "text": "if one of the following is true: both jmx.remote.default.class.loader and jmx.remote.default.class.loader.name are specified, or jmx.remote.default.class.loader is not an instance of ClassLoader, or jmx.remote.default.class.loader.name is not an instance of ObjectName, or jmx.remote.default.class.loader.name is specified but mbs is null.",
        "meta": {
            "doc_index": 272776,
            "doc_name": "com.sun.jmx.remote.util.EnvHelp.resolveServerClassLoader(java.util.Map<java.lang.String,?>,javax.management.MBeanServer).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                129,
                160,
                "NotType-1"
            ],
            [
                183,
                194,
                "NotType-2"
            ],
            [
                199,
                235,
                "NotType-1"
            ],
            [
                258,
                268,
                "NotType-2"
            ],
            [
                327,
                330,
                "EQ-1"
            ],
            [
                334,
                338,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119612,
        "text": "if providers is null or contains a null entry.",
        "meta": {
            "doc_index": 277580,
            "doc_name": "javax.imageio.spi.ServiceRegistry.registerServiceProviders(java.util.Iterator<?>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119615,
        "text": "WRONG_DOCUMENT_ERR: Raised if newAttr was created from a different document than the one that created the element.",
        "meta": {
            "doc_index": 281018,
            "doc_name": "org.w3c.dom.Element.setAttributeNode(org.w3c.dom.Attr).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119617,
        "text": "(Unchecked exception) Thrown if value is less than 1.",
        "meta": {
            "doc_index": 278717,
            "doc_name": "javax.print.attribute.standard.Copies.Copies(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                1,
                20,
                "Thrown"
            ],
            [
                32,
                37,
                "LT-1"
            ],
            [
                51,
                52,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119618,
        "text": "(unchecked exception) Thrown if uri is null.",
        "meta": {
            "doc_index": 278723,
            "doc_name": "javax.print.attribute.standard.Destination.Destination(java.net.URI).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                35,
                "EQ-1"
            ],
            [
                39,
                43,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119619,
        "text": "if limit < 0, or count < 1.",
        "meta": {
            "doc_index": 276981,
            "doc_name": "java.util.logging.FileHandler.FileHandler(java.lang.String,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "LT-1"
            ],
            [
                11,
                12,
                "LT-2"
            ],
            [
                17,
                22,
                "LT-1"
            ],
            [
                25,
                26,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119621,
        "text": "if p_base is null and p_uriSpec is not an absolute URI or if p_uriSpec violates syntax rules",
        "meta": {
            "doc_index": 273432,
            "doc_name": "com.sun.org.apache.xerces.internal.util.URI.initialize(com.sun.org.apache.xerces.internal.util.URI,java.lang.String,boolean).com.sun.org.apache.xerces.internal.util.URI.MalformedURIException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119622,
        "text": "if the glass parameter is null",
        "meta": {
            "doc_index": 279302,
            "doc_name": "javax.swing.JRootPane.setGlassPane(java.awt.Component).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119623,
        "text": "if the name is null",
        "meta": {
            "doc_index": 278913,
            "doc_name": "javax.security.auth.x500.X500Principal.X500Principal(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119627,
        "text": "may be thrown if the contentType does not match the type of the content object, or if there was no DataContentHandler object for the given content object",
        "meta": {
            "doc_index": 279827,
            "doc_name": "javax.xml.soap.SOAPMessage.createAttachmentPart(java.lang.Object,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                32,
                "NEQ-1"
            ],
            [
                48,
                78,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119631,
        "text": "if either period is negative or 0, or if either grid offset is negative or greater than the corresponding period.",
        "meta": {
            "doc_index": 277183,
            "doc_name": "javax.imageio.IIOParam.setSourceSubsampling(int,int,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                16,
                "Negative"
            ],
            [
                32,
                33,
                "EQ-2"
            ],
            [
                48,
                59,
                "Negative"
            ],
            [
                88,
                112,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119632,
        "text": "if cacheDir is non-null but is not a directory.",
        "meta": {
            "doc_index": 277190,
            "doc_name": "javax.imageio.ImageIO.setCacheDirectory(java.io.File).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "NotNull"
            ]
        ]
    },
    {
        "id": 119634,
        "text": "If the parser parameter is null.",
        "meta": {
            "doc_index": 281202,
            "doc_name": "org.xml.sax.helpers.ParserAdapter.ParserAdapter(org.xml.sax.Parser).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119639,
        "text": "if src is null.",
        "meta": {
            "doc_index": 272627,
            "doc_name": "com.sun.imageio.plugins.common.PaletteBuilder.createIndexedImage(java.awt.image.RenderedImage).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119642,
        "text": "Also thrown if members is a zero-length array or if any member of the set is less than 1.",
        "meta": {
            "doc_index": 278758,
            "doc_name": "javax.print.attribute.standard.NumberUpSupported.NumberUpSupported(int[][]).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                22,
                "EQ-1"
            ],
            [
                26,
                45,
                "EQ-2"
            ],
            [
                52,
                73,
                "LT-1"
            ],
            [
                87,
                88,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119643,
        "text": "(Unchecked exception) Thrown if a null range is specified or if a non-null range is specified with lowerBound less than 1.",
        "meta": {
            "doc_index": 278719,
            "doc_name": "javax.print.attribute.standard.CopiesSupported.CopiesSupported(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                38,
                "EQ-1"
            ],
            [
                39,
                44,
                "EQ-2"
            ],
            [
                75,
                80,
                "NotNull"
            ],
            [
                99,
                109,
                "LT-1"
            ],
            [
                120,
                121,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119645,
        "text": "if any of the following are true: raster is null.",
        "meta": {
            "doc_index": 277475,
            "doc_name": "javax.imageio.ImageWriter.replacePixels(java.awt.image.Raster,javax.imageio.ImageWriteParam).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119646,
        "text": "if prefix is null or startIndex is out of bounds",
        "meta": {
            "doc_index": 279259,
            "doc_name": "javax.swing.JList.getNextMatch(java.lang.String,int,javax.swing.text.Position.Bias).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119651,
        "text": "(unchecked exception) Thrown if value is null.",
        "meta": {
            "doc_index": 278783,
            "doc_name": "javax.print.attribute.TextSyntax.TextSyntax(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                37,
                "EQ-1"
            ],
            [
                41,
                45,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119652,
        "text": "(Unchecked exception) Thrown if x < 0 or y < 0 or units < 1 or x > y.",
        "meta": {
            "doc_index": 278749,
            "doc_name": "javax.print.attribute.standard.MediaSize.MediaSize(float,float,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                33,
                "LT-1"
            ],
            [
                36,
                37,
                "LT-2"
            ],
            [
                41,
                42,
                "LT-1"
            ],
            [
                45,
                46,
                "LT-2"
            ],
            [
                50,
                55,
                "LT-1"
            ],
            [
                58,
                59,
                "LT-2"
            ],
            [
                63,
                64,
                "LT-1"
            ],
            [
                67,
                68,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119653,
        "text": "if a SecurityManager is set, config is null, and either the caller does not have AuthPermission(\"createLoginContext.name\"), or if a configuration entry for name does not exist and the caller does not additionally have AuthPermission(\"createLoginContext.other\")",
        "meta": {
            "doc_index": 278881,
            "doc_name": "javax.security.auth.login.LoginContext.LoginContext(java.lang.String,javax.security.auth.Subject,javax.security.auth.callback.CallbackHandler,javax.security.auth.login.Configuration).SecurityException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                35,
                "EQ-1"
            ],
            [
                39,
                43,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119654,
        "text": "if bufferedImageType is not one of the standard types, or is equal to TYPE_CUSTOM.",
        "meta": {
            "doc_index": 277339,
            "doc_name": "javax.imageio.ImageTypeSpecifier.createFromBufferedImageType(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "NotType-1"
            ],
            [
                28,
                53,
                "NotType-2"
            ],
            [
                70,
                81,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119655,
        "text": "(unchecked exception) Thrown if dateTime is null.",
        "meta": {
            "doc_index": 278720,
            "doc_name": "javax.print.attribute.standard.DateTimeAtCompleted.DateTimeAtCompleted(java.util.Date).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119656,
        "text": "if the unresolved role is null.",
        "meta": {
            "doc_index": 278404,
            "doc_name": "javax.management.relation.RoleUnresolvedList.add(javax.management.relation.RoleUnresolved).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119658,
        "text": "if the caller-specified name does not appear in the Configuration and there is no Configuration entry for \"other\", or if the caller-specified subject is null, or if the caller-specified callbackHandler is null.",
        "meta": {
            "doc_index": 278878,
            "doc_name": "javax.security.auth.login.LoginContext.LoginContext(java.lang.String,javax.security.auth.Subject,javax.security.auth.callback.CallbackHandler).javax.security.auth.login.LoginException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                121,
                149,
                "EQ-1"
            ],
            [
                153,
                157,
                "EQ-2"
            ],
            [
                165,
                201,
                "EQ-1"
            ],
            [
                205,
                209,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119660,
        "text": "if off is negative, len is negative, or off + len is greater than f.length.",
        "meta": {
            "doc_index": 277670,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(float[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                49,
                "GT-1"
            ],
            [
                66,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119661,
        "text": "if reader or writer is null.",
        "meta": {
            "doc_index": 277205,
            "doc_name": "javax.imageio.ImageIO.getImageTranscoders(javax.imageio.ImageReader,javax.imageio.ImageWriter).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119662,
        "text": "Thrown if the line is less than zero or greater or equal to the number of lines contained in the document (as reported by getLineCount).",
        "meta": {
            "doc_index": 279381,
            "doc_name": "javax.swing.JTextArea.getLineEndOffset(int).javax.swing.text.BadLocationException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                18,
                "LT-1"
            ],
            [
                32,
                36,
                "LT-2"
            ],
            [
                60,
                79,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119663,
        "text": "(unchecked exception) Thrown if location is null.",
        "meta": {
            "doc_index": 278771,
            "doc_name": "javax.print.attribute.standard.PrinterLocation.PrinterLocation(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119664,
        "text": "If buf is null.",
        "meta": {
            "doc_index": 277103,
            "doc_name": "java.util.zip.CheckedInputStream.read(byte[],int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119665,
        "text": "The length of the array is not equal to four.",
        "meta": {
            "doc_index": 273051,
            "doc_name": "com.sun.jmx.snmp.SnmpIpAddress.SnmpIpAddress(byte[]).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "NEQ-1"
            ],
            [
                40,
                44,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119666,
        "text": "INDEX_SIZE_ERR: Raised if the specified index is greater than or equal to the number of rows or if the index is negative.",
        "meta": {
            "doc_index": 281034,
            "doc_name": "org.w3c.dom.html.HTMLTableElement.deleteRow(int).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                26,
                45,
                "GE-1"
            ],
            [
                74,
                92,
                "GE-2"
            ],
            [
                99,
                108,
                "Negative"
            ]
        ]
    },
    {
        "id": 119668,
        "text": "if any of the required parameters (relation id, relation service ObjectName, or relation type name) is null.",
        "meta": {
            "doc_index": 278339,
            "doc_name": "javax.management.relation.RelationSupport.RelationSupport(java.lang.String,javax.management.ObjectName,java.lang.String,javax.management.relation.RoleList).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                98,
                "EQ-1"
            ],
            [
                103,
                107,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119669,
        "text": "if c is null.",
        "meta": {
            "doc_index": 277659,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(char[],int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119671,
        "text": "The specified value is negative or larger than SnmpUnsignedInt.MAX_VALUE.",
        "meta": {
            "doc_index": 273021,
            "doc_name": "com.sun.jmx.snmp.SnmpCounter.SnmpCounter(int).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Negative"
            ],
            [
                47,
                72,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119672,
        "text": "Wraps an IllegalArgumentException: The object name in parameter is null or attributes in parameter is null.",
        "meta": {
            "doc_index": 278065,
            "doc_name": "javax.management.modelmbean.RequiredModelMBean.getAttributes(java.lang.String[]).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                50,
                "EQ-1"
            ],
            [
                67,
                71,
                "EQ-2"
            ],
            [
                75,
                85,
                "EQ-1"
            ],
            [
                102,
                106,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119673,
        "text": "(Unchecked exception) Thrown if value is less than 0.",
        "meta": {
            "doc_index": 278726,
            "doc_name": "javax.print.attribute.standard.JobImpressions.JobImpressions(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                37,
                "LT-1"
            ],
            [
                51,
                52,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119674,
        "text": "if one of the parts is syntactically incorrect, or if host is null and it is not possible to find the local host name, or if port is negative.",
        "meta": {
            "doc_index": 278463,
            "doc_name": "javax.management.remote.JMXServiceURL.JMXServiceURL(java.lang.String,java.lang.String,int).java.net.MalformedURLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                54,
                58,
                "EQ-1"
            ],
            [
                62,
                66,
                "EQ-2"
            ],
            [
                125,
                129,
                "Negative"
            ]
        ]
    },
    {
        "id": 119676,
        "text": "if off is negative, len is negative, or off + len is greater than b.length.",
        "meta": {
            "doc_index": 277616,
            "doc_name": "javax.imageio.stream.ImageInputStream.read(byte[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                49,
                "GT-1"
            ],
            [
                66,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119677,
        "text": "if an there is an error in setting the content or content is null",
        "meta": {
            "doc_index": 279713,
            "doc_name": "javax.xml.soap.AttachmentPart.setRawContentBytes(byte[],int,int,java.lang.String).javax.xml.soap.SOAPException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                57,
                "EQ-1"
            ],
            [
                61,
                65,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119679,
        "text": "Wraps an java.lang.IllegalArgumentException: The object name in parameter is null or the MBean you are when trying to de-register is the MBeanServerDelegate MBean.",
        "meta": {
            "doc_index": 272677,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(javax.management.ObjectName).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                60,
                "EQ-1"
            ],
            [
                77,
                81,
                "EQ-2"
            ],
            [
                137,
                162,
                "Type-2"
            ],
            [
                89,
                94,
                "Type-1"
            ]
        ]
    },
    {
        "id": 119680,
        "text": "(unchecked exception) Thrown if documentName is null.",
        "meta": {
            "doc_index": 278724,
            "doc_name": "javax.print.attribute.standard.DocumentName.DocumentName(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                44,
                "EQ-1"
            ],
            [
                48,
                52,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119681,
        "text": "if either the width or the height is negative or 0.",
        "meta": {
            "doc_index": 277326,
            "doc_name": "javax.imageio.ImageReadParam.setSourceRenderSize(java.awt.Dimension).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "Negative"
            ],
            [
                49,
                50,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119683,
        "text": "if aChild is null",
        "meta": {
            "doc_index": 279684,
            "doc_name": "javax.swing.tree.DefaultMutableTreeNode.getIndex(javax.swing.tree.TreeNode).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119685,
        "text": "if either cert, key or alias is null",
        "meta": {
            "doc_index": 278919,
            "doc_name": "javax.security.auth.x500.X500PrivateCredential.X500PrivateCredential(java.security.cert.X509Certificate,java.security.PrivateKey,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                28,
                "EQ-1"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119687,
        "text": "if the entry name is null",
        "meta": {
            "doc_index": 276936,
            "doc_name": "java.util.jar.JarEntry.JarEntry(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                21,
                25,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119688,
        "text": "Wraps an java.lang.IllegalArgumentException: The className passed in parameter is null.",
        "meta": {
            "doc_index": 272707,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.instantiate(java.lang.String).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                58,
                "EQ-1"
            ],
            [
                82,
                86,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119689,
        "text": "if off is negative, len is negative, or len is greater than b.length - off",
        "meta": {
            "doc_index": 277154,
            "doc_name": "java.util.zip.ZipInputStream.read(byte[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                43,
                "GT-1"
            ],
            [
                60,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119690,
        "text": "(Unchecked exception) Thrown if value is less than 1 or greater than 100.",
        "meta": {
            "doc_index": 278738,
            "doc_name": "javax.print.attribute.standard.JobPriority.JobPriority(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                37,
                "LT-1"
            ],
            [
                51,
                52,
                "LT-2"
            ],
            [
                69,
                72,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119691,
        "text": "if b is null",
        "meta": {
            "doc_index": 277757,
            "doc_name": "javax.imageio.stream.MemoryCache.read(byte[],int,int,long).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119692,
        "text": "if: - the same name has been used for two different roles - no role info provided - one null role info provided - there is already a relation type with that name",
        "meta": {
            "doc_index": 278185,
            "doc_name": "javax.management.relation.RelationService.addRelationType(javax.management.relation.RelationType).javax.management.relation.InvalidRelationTypeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                93,
                102,
                "EQ-2"
            ],
            [
                88,
                92,
                "EQ-1"
            ]
        ]
    },
    {
        "id": 119693,
        "text": "if the property javax.management.builder.initial exists but the class it names cannot be instantiated through a public no-argument constructor; or if the instantiated builder returns null from its newMBeanServerDelegate or newMBeanServer methods.",
        "meta": {
            "doc_index": 277985,
            "doc_name": "javax.management.MBeanServerFactory.createMBeanServer().JMRuntimeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                150,
                174,
                "Returns-1"
            ],
            [
                183,
                187,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119694,
        "text": "if the specified location is < 0 or > 1.0",
        "meta": {
            "doc_index": 279325,
            "doc_name": "javax.swing.JSplitPane.setDividerLocation(double).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "LT-1"
            ],
            [
                31,
                32,
                "LT-2"
            ],
            [
                38,
                41,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119695,
        "text": "if loader is null",
        "meta": {
            "doc_index": 277043,
            "doc_name": "java.util.ResourceBundle.clearCache(java.lang.ClassLoader).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119696,
        "text": "if x <= 0, y <= 0, or units < 1.",
        "meta": {
            "doc_index": 278753,
            "doc_name": "javax.print.attribute.standard.MediaSize.findMedia(float,float,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "LE-1"
            ],
            [
                8,
                9,
                "LE-2"
            ],
            [
                11,
                12,
                "LE-1"
            ],
            [
                16,
                17,
                "LE-2"
            ],
            [
                22,
                27,
                "LT-1"
            ],
            [
                30,
                31,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119697,
        "text": "if index is out of range (index < 0 || index >= tab count)",
        "meta": {
            "doc_index": 279332,
            "doc_name": "javax.swing.JTabbedPane.removeTabAt(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                31,
                "LT-1"
            ],
            [
                34,
                35,
                "LT-2"
            ],
            [
                39,
                44,
                "GE-1"
            ],
            [
                48,
                57,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119701,
        "text": "Wraps an IllegalArgumentException: The attribute in parameter is null.",
        "meta": {
            "doc_index": 278070,
            "doc_name": "javax.management.modelmbean.RequiredModelMBean.setAttribute(javax.management.Attribute).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                48,
                "EQ-1"
            ],
            [
                65,
                69,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119703,
        "text": "if field is negative, equal to or greater then FIELD_COUNT.",
        "meta": {
            "doc_index": 276900,
            "doc_name": "java.util.Calendar.getFieldName(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "Negative"
            ],
            [
                47,
                58,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119704,
        "text": "if bundleName or suffix is null",
        "meta": {
            "doc_index": 277064,
            "doc_name": "java.util.ResourceBundle.Control.toResourceName(java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119705,
        "text": "INDEX_SIZE_ERR: Raised if the specified index is greater than or equal to the number of cells or if the index is negative.",
        "meta": {
            "doc_index": 281036,
            "doc_name": "org.w3c.dom.html.HTMLTableRowElement.deleteCell(int).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                26,
                45,
                "GE-1"
            ],
            [
                74,
                93,
                "GE-2"
            ],
            [
                100,
                109,
                "Negative"
            ]
        ]
    },
    {
        "id": 119708,
        "text": "if colorSpace is null.",
        "meta": {
            "doc_index": 277333,
            "doc_name": "javax.imageio.ImageTypeSpecifier.createPacked(java.awt.color.ColorSpace,int,int,int,int,int,boolean).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119709,
        "text": "if the given implementation is null, and null is not allowed.",
        "meta": {
            "doc_index": 278520,
            "doc_name": "javax.management.StandardMBean.construct(T,java.lang.Class<T>,boolean,boolean).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                27,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119713,
        "text": "if index is out of range (tabIndex < 0 || tabIndex >= tab count)",
        "meta": {
            "doc_index": 279342,
            "doc_name": "javax.swing.JTabbedPane.getMnemonicAt(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                34,
                "LT-1"
            ],
            [
                37,
                38,
                "LT-2"
            ],
            [
                42,
                50,
                "GE-1"
            ],
            [
                54,
                63,
                "GE-2"
            ]
        ]
    },
    {
        "id": 119714,
        "text": "if null parameter.",
        "meta": {
            "doc_index": 278371,
            "doc_name": "javax.management.relation.RelationTypeSupport.RelationTypeSupport(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                8,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119719,
        "text": "if mzl is < 1",
        "meta": {
            "doc_index": 279674,
            "doc_name": "javax.swing.text.ZoneView.setMaxZonesLoaded(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "LT-1"
            ],
            [
                12,
                13,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119722,
        "text": "Wraps an IllegalArgumentException: The attribute name in parameter is null.",
        "meta": {
            "doc_index": 278064,
            "doc_name": "javax.management.modelmbean.RequiredModelMBean.getAttribute(java.lang.String).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                53,
                "EQ-1"
            ],
            [
                70,
                74,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119727,
        "text": "(unchecked exception) Thrown if makeAndModel is null.",
        "meta": {
            "doc_index": 278772,
            "doc_name": "javax.print.attribute.standard.PrinterMakeAndModel.PrinterMakeAndModel(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                44,
                "EQ-1"
            ],
            [
                48,
                52,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119728,
        "text": "if null parameter, except the role list which can be null if no role initialization",
        "meta": {
            "doc_index": 278195,
            "doc_name": "javax.management.relation.RelationService.createRelation(java.lang.String,java.lang.String,javax.management.relation.RoleList).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                8,
                17,
                "EQ-2"
            ],
            [
                53,
                57,
                "EQ-2"
            ],
            [
                26,
                39,
                "EQ-1"
            ]
        ]
    },
    {
        "id": 119729,
        "text": "(unchecked exception) Thrown if deviceName is null.",
        "meta": {
            "doc_index": 278761,
            "doc_name": "javax.print.attribute.standard.OutputDeviceAssigned.OutputDeviceAssigned(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                42,
                "EQ-1"
            ],
            [
                46,
                50,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119733,
        "text": "if the DynValue represents a null value type.",
        "meta": {
            "doc_index": 280102,
            "doc_name": "org.omg.DynamicAny.DynValueOperations.current_member_name().org.omg.DynamicAny.DynAnyPackage.TypeMismatch",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                27,
                44,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119734,
        "text": "if the initial capacity is less than zero, or if the load factor is nonpositive.",
        "meta": {
            "doc_index": 276924,
            "doc_name": "java.util.Hashtable.Hashtable(int,float).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "LT-1"
            ],
            [
                37,
                41,
                "LT-2"
            ],
            [
                49,
                64,
                "Nonpositive"
            ]
        ]
    },
    {
        "id": 119735,
        "text": "if band is negative or greater than the largest band index.",
        "meta": {
            "doc_index": 277341,
            "doc_name": "javax.imageio.ImageTypeSpecifier.getBitsPerBand(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "Negative"
            ],
            [
                36,
                58,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119737,
        "text": "if newChild is null",
        "meta": {
            "doc_index": 279686,
            "doc_name": "javax.swing.tree.DefaultMutableTreeNode.add(javax.swing.tree.MutableTreeNode).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119738,
        "text": "Wraps a java.lang.IllegalArgumentException: The className passed in parameter is null, the ObjectName passed in parameter contains a pattern or no ObjectName is specified for the MBean.",
        "meta": {
            "doc_index": 277888,
            "doc_name": "javax.management.MBeanServerConnection.createMBean(java.lang.String,javax.management.ObjectName).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                57,
                "EQ-1"
            ],
            [
                81,
                85,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119741,
        "text": "INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property.",
        "meta": {
            "doc_index": 280998,
            "doc_name": "org.w3c.dom.css.CSSValue.setCssText(java.lang.String).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119743,
        "text": "INDEX_SIZE_ERR: Raised if the specified offset is negative or greater than the number of 16-bit units in data.",
        "meta": {
            "doc_index": 280855,
            "doc_name": "org.w3c.dom.CharacterData.insertData(int,java.lang.String).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                26,
                46,
                "Negative"
            ],
            [
                75,
                101,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119745,
        "text": "The descriptor is invalid, or descriptor field \"name\" is not equal to parameter name, or descriptor field \"descriptorType\" is not equal to \"notification\".",
        "meta": {
            "doc_index": 278040,
            "doc_name": "javax.management.modelmbean.ModelMBeanNotificationInfo.ModelMBeanNotificationInfo(java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                70,
                84,
                "NEQ-2"
            ],
            [
                30,
                53,
                "NEQ-1"
            ],
            [
                89,
                122,
                "NEQ-1"
            ],
            [
                139,
                153,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119748,
        "text": "if null role list",
        "meta": {
            "doc_index": 278169,
            "doc_name": "javax.management.relation.Relation.setRoles(javax.management.relation.RoleList).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                8,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119749,
        "text": "The prefix parameter is null.",
        "meta": {
            "doc_index": 278100,
            "doc_name": "javax.management.NotificationFilterSupport.enableType(java.lang.String).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119751,
        "text": "if interfaceName is null.",
        "meta": {
            "doc_index": 278679,
            "doc_name": "javax.print.attribute.HashAttributeSet.HashAttributeSet(java.lang.Class<?>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119756,
        "text": "thrown if any argument is null.",
        "meta": {
            "doc_index": 276961,
            "doc_name": "java.util.Locale.Locale(java.lang.String,java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119757,
        "text": "This includes the case where mbsf is null.",
        "meta": {
            "doc_index": 278454,
            "doc_name": "javax.management.remote.JMXConnectorServerMBean.setMBeanServerForwarder(javax.management.remote.MBeanServerForwarder).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                33,
                "EQ-1"
            ],
            [
                37,
                41,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119758,
        "text": "if scriptCode or locale is null",
        "meta": {
            "doc_index": 277081,
            "doc_name": "java.util.spi.LocaleNameProvider.getDisplayScript(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119762,
        "text": "if numEntries < 0",
        "meta": {
            "doc_index": 279429,
            "doc_name": "javax.swing.SizeSequence.SizeSequence(int).NegativeArraySizeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "LT-1"
            ],
            [
                16,
                17,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119763,
        "text": "if any portion of the requested data is not in the cache (including if pos is in a block already disposed), or if either pos or len is < 0.",
        "meta": {
            "doc_index": 277753,
            "doc_name": "javax.imageio.stream.MemoryCache.writeToStream(java.io.OutputStream,long,long).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                121,
                131,
                "LT-1"
            ],
            [
                137,
                138,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119764,
        "text": "if parentName is null, or is not a legal element name for this format.",
        "meta": {
            "doc_index": 277522,
            "doc_name": "javax.imageio.metadata.IIOMetadataFormatImpl.addElement(java.lang.String,java.lang.String,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119766,
        "text": "NAMESPACE_ERR: Raised if the qualifiedName is a malformed qualified name, if the qualifiedName has a prefix and the namespaceURI is null, or if the qualifiedName has a prefix that is \"xml\" and the namespaceURI is different from \" http://www.w3.org/XML/1998/namespace\" [XML Namespaces] .",
        "meta": {
            "doc_index": 281011,
            "doc_name": "org.w3c.dom.Document.renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119767,
        "text": "if currencyCode is null",
        "meta": {
            "doc_index": 276901,
            "doc_name": "java.util.Currency.getInstance(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119768,
        "text": "Wraps a java.lang.IllegalArgumentException: The object name in parameter is null or the attribute in parameter is null.",
        "meta": {
            "doc_index": 277936,
            "doc_name": "javax.management.MBeanServerConnection.getAttribute(javax.management.ObjectName,java.lang.String).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                59,
                "EQ-1"
            ],
            [
                76,
                80,
                "EQ-2"
            ],
            [
                84,
                97,
                "EQ-1"
            ],
            [
                114,
                118,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119769,
        "text": "when: octet string lower than 5 bytes.",
        "meta": {
            "doc_index": 273029,
            "doc_name": "com.sun.jmx.snmp.SnmpEngineId.createEngineId(byte[]).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                6,
                18,
                "LT-1"
            ],
            [
                30,
                37,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119770,
        "text": "if compressionType is non-null but is not one of the values returned by getCompressionTypes.",
        "meta": {
            "doc_index": 277370,
            "doc_name": "javax.imageio.ImageWriteParam.setCompressionType(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "NotNull"
            ],
            [
                42,
                91,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119773,
        "text": "Wraps an java.lang.IllegalArgumentException: The object passed in parameter is null or no object name is specified.",
        "meta": {
            "doc_index": 272674,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(java.lang.Object,javax.management.ObjectName).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                55,
                "EQ-1"
            ],
            [
                79,
                83,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119774,
        "text": "DOMSTRING_SIZE_ERR: Raised when it would return more characters than fit in a DOMString variable on the implementation platform.",
        "meta": {
            "doc_index": 280851,
            "doc_name": "org.w3c.dom.CharacterData.getData().org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119775,
        "text": "(a runtime exception) if the layered pane parameter is null",
        "meta": {
            "doc_index": 279210,
            "doc_name": "javax.swing.JApplet.getLayeredPane().java.awt.IllegalComponentStateException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                51,
                "EQ-1"
            ],
            [
                55,
                59,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119777,
        "text": "if rootName is null.",
        "meta": {
            "doc_index": 277519,
            "doc_name": "javax.imageio.metadata.IIOMetadataFormatImpl.IIOMetadataFormatImpl(java.lang.String,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119781,
        "text": "The listener cannot be null.",
        "meta": {
            "doc_index": 278037,
            "doc_name": "javax.management.modelmbean.ModelMBeanNotificationBroadcaster.addAttributeChangeNotificationListener(javax.management.NotificationListener,java.lang.String,java.lang.Object).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "NEQ-1"
            ],
            [
                23,
                27,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119784,
        "text": "INDEX_SIZE_ERR: Raised if the specified index is greater than the number of rows of if the index is neagative.",
        "meta": {
            "doc_index": 281037,
            "doc_name": "org.w3c.dom.html.HTMLTableSectionElement.insertRow(int).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                26,
                45,
                "GT-1"
            ],
            [
                62,
                80,
                "GT-2"
            ],
            [
                87,
                96,
                "Negative"
            ]
        ]
    },
    {
        "id": 119786,
        "text": "if raf is null.",
        "meta": {
            "doc_index": 277604,
            "doc_name": "javax.imageio.stream.FileImageInputStream.FileImageInputStream(java.io.RandomAccessFile).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119788,
        "text": "if url is null.",
        "meta": {
            "doc_index": 278467,
            "doc_name": "javax.management.remote.rmi.RMIConnector.RMIConnector(javax.management.remote.JMXServiceURL,java.util.Map<java.lang.String,?>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119791,
        "text": "if d is null.",
        "meta": {
            "doc_index": 277675,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(double[],int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119793,
        "text": "if port is negative.",
        "meta": {
            "doc_index": 278496,
            "doc_name": "javax.management.remote.rmi.RMIJRMPServerImpl.RMIJRMPServerImpl(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory,java.util.Map<java.lang.String,?>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "Negative"
            ]
        ]
    },
    {
        "id": 119794,
        "text": "if the specified Provider is null, or if the specified parameters are not understood by the ConfigurationSpi implementation from the specified Provider.",
        "meta": {
            "doc_index": 278868,
            "doc_name": "javax.security.auth.login.Configuration.getInstance(java.lang.String,javax.security.auth.login.Configuration.Parameters,java.security.Provider).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119795,
        "text": "Wraps an java.lang.IllegalArgumentException: The object name in parameter is null.",
        "meta": {
            "doc_index": 272679,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.isRegistered(javax.management.ObjectName).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                60,
                "EQ-1"
            ],
            [
                77,
                81,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119799,
        "text": "The supplied name is invalid (i.e., has length less than 1).",
        "meta": {
            "doc_index": 272451,
            "doc_name": "com.sun.corba.se.impl.naming.cosnaming.NamingContextImpl.bind(org.omg.CosNaming.NameComponent[],org.omg.CORBA.Object).org.omg.CosNaming.NamingContextPackage.InvalidName",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                46,
                "LT-1"
            ],
            [
                57,
                58,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119800,
        "text": "if the given newFormatSymbols is null",
        "meta": {
            "doc_index": 276857,
            "doc_name": "java.text.SimpleDateFormat.setDateFormatSymbols(java.text.DateFormatSymbols).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                29,
                "EQ-1"
            ],
            [
                33,
                37,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119802,
        "text": "if the value is null.",
        "meta": {
            "doc_index": 272602,
            "doc_name": "com.sun.corba.se.impl.util.IdentityHashtable.contains(java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119804,
        "text": "if the PropertyChangeListener is null.",
        "meta": {
            "doc_index": 276995,
            "doc_name": "java.util.logging.LogManager.addPropertyChangeListener(java.beans.PropertyChangeListener).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                29,
                "EQ-1"
            ],
            [
                33,
                37,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119808,
        "text": "if identifier is null, or if no TableColumn has this identifier",
        "meta": {
            "doc_index": 279438,
            "doc_name": "javax.swing.table.DefaultTableColumnModel.getColumnIndex(java.lang.Object).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119810,
        "text": "if off is negative, len is negative, or off + len is greater than i.length.",
        "meta": {
            "doc_index": 277662,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(int[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                49,
                "GT-1"
            ],
            [
                66,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119811,
        "text": "Wraps an java.lang.IllegalArgumentException: The className passed in parameter is null, the ObjectName passed in parameter contains a pattern or no ObjectName is specified for the MBean.",
        "meta": {
            "doc_index": 272652,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.createMBean(java.lang.String,javax.management.ObjectName).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                58,
                "EQ-1"
            ],
            [
                82,
                86,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119812,
        "text": "if zdt is null",
        "meta": {
            "doc_index": 276922,
            "doc_name": "java.util.GregorianCalendar.from(java.time.ZonedDateTime).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119813,
        "text": "if null parameter or if relationTypeObj.getRelationTypeName() returns null.",
        "meta": {
            "doc_index": 278184,
            "doc_name": "javax.management.relation.RelationService.addRelationType(javax.management.relation.RelationType).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                8,
                17,
                "EQ-2"
            ],
            [
                24,
                61,
                "Returns-1"
            ],
            [
                70,
                74,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 119815,
        "text": "(unchecked exception) Thrown if jobName is null.",
        "meta": {
            "doc_index": 278736,
            "doc_name": "javax.print.attribute.standard.JobName.JobName(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                39,
                "EQ-1"
            ],
            [
                43,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119816,
        "text": "if columnModel is null",
        "meta": {
            "doc_index": 279372,
            "doc_name": "javax.swing.JTable.setColumnModel(javax.swing.table.TableColumnModel).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119817,
        "text": "WRONG_DOCUMENT_ERR: Raised if the two Ranges are not in the same Document or DocumentFragment.",
        "meta": {
            "doc_index": 281089,
            "doc_name": "org.w3c.dom.ranges.Range.compareBoundaryPoints(short,org.w3c.dom.ranges.Range).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119818,
        "text": "HIERARCHY_REQUEST_ERR: Thrown if this action results in an invalid hierarchy (i.e. a Document with more than one document element).",
        "meta": {
            "doc_index": 273376,
            "doc_name": "com.sun.org.apache.xerces.internal.parsers.DOMParserImpl.parseWithContext(org.w3c.dom.ls.LSInput,org.w3c.dom.Node,short).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119820,
        "text": "if the node is not a Text node and either has more than one child node or has a child node that is not a Text node.",
        "meta": {
            "doc_index": 279737,
            "doc_name": "javax.xml.soap.Node.setValue(java.lang.String).IllegalStateException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "NotType-1"
            ],
            [
                21,
                30,
                "NotType-2"
            ],
            [
                80,
                90,
                "NotType-1"
            ],
            [
                105,
                114,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 119821,
        "text": "if rmiServer is null.",
        "meta": {
            "doc_index": 278468,
            "doc_name": "javax.management.remote.rmi.RMIConnector.RMIConnector(javax.management.remote.rmi.RMIServer,java.util.Map<java.lang.String,?>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119823,
        "text": "(unchecked exception) Thrown if message is null.",
        "meta": {
            "doc_index": 278735,
            "doc_name": "javax.print.attribute.standard.JobMessageFromOperator.JobMessageFromOperator(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                39,
                "EQ-1"
            ],
            [
                43,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119824,
        "text": "(unchecked exception) Thrown if collection is null or if any element in collection is null.",
        "meta": {
            "doc_index": 278740,
            "doc_name": "javax.print.attribute.standard.JobStateReasons.JobStateReasons(java.util.Collection<javax.print.attribute.standard.JobStateReason>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                42,
                "EQ-1"
            ],
            [
                46,
                50,
                "EQ-2"
            ],
            [
                57,
                82,
                "EQ-1"
            ],
            [
                86,
                90,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119825,
        "text": "INDEX_SIZE_ERR: if index is greater than or equal to the number of objects in the list or less than zero.",
        "meta": {
            "doc_index": 273479,
            "doc_name": "com.sun.org.apache.xerces.internal.xs.datatypes.ByteList.item(int).com.sun.org.apache.xerces.internal.xs.XSException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                19,
                24,
                "GE-1"
            ],
            [
                53,
                86,
                "GE-2"
            ],
            [
                100,
                104,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119827,
        "text": "if the value of index < 0",
        "meta": {
            "doc_index": 279266,
            "doc_name": "javax.swing.JMenu.insertSeparator(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "LT-1"
            ],
            [
                24,
                25,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119828,
        "text": "if imageIndex is less than 0 or greater than the largest available index.",
        "meta": {
            "doc_index": 277424,
            "doc_name": "javax.imageio.ImageWriter.replaceImageMetadata(int,javax.imageio.metadata.IIOMetadata).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                28,
                "LT-2"
            ],
            [
                45,
                72,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119829,
        "text": "if the type parameter is null",
        "meta": {
            "doc_index": 279225,
            "doc_name": "javax.swing.JEditorPane.JEditorPane(java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119830,
        "text": "if the writer supports image insertion in general, but imageIndex is less than -1 or greater than the largest available index.",
        "meta": {
            "doc_index": 277427,
            "doc_name": "javax.imageio.ImageWriter.canInsertImage(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                55,
                65,
                "LT-1"
            ],
            [
                79,
                81,
                "LT-2"
            ],
            [
                98,
                125,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119833,
        "text": "if listener is null.",
        "meta": {
            "doc_index": 278422,
            "doc_name": "javax.management.remote.JMXConnector.addConnectionNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119834,
        "text": "if anIndex < -1 or anIndex is greater than or equal to size",
        "meta": {
            "doc_index": 279216,
            "doc_name": "javax.swing.JComboBox.setSelectedIndex(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "LT-1"
            ],
            [
                13,
                15,
                "LT-2"
            ],
            [
                55,
                59,
                "GE-2"
            ],
            [
                19,
                26,
                "GE-1"
            ]
        ]
    },
    {
        "id": 119835,
        "text": "The attribute name parameter is null.",
        "meta": {
            "doc_index": 277766,
            "doc_name": "javax.management.AttributeChangeNotificationFilter.enableAttribute(java.lang.String).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "EQ-1"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119837,
        "text": "WRONG_DOCUMENT_ERR: Raised if arg was created from a different document than the one that created this map.",
        "meta": {
            "doc_index": 281050,
            "doc_name": "org.w3c.dom.NamedNodeMap.setNamedItem(org.w3c.dom.Node).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119838,
        "text": "Wraps a java.lang.IllegalArgumentException: The object name in parameter is null.",
        "meta": {
            "doc_index": 277929,
            "doc_name": "javax.management.MBeanServerConnection.isRegistered(javax.management.ObjectName).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                59,
                "EQ-1"
            ],
            [
                76,
                80,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119839,
        "text": "(unchecked exception) Thrown if severity is null.",
        "meta": {
            "doc_index": 278779,
            "doc_name": "javax.print.attribute.standard.PrinterStateReasons.printerStateReasonSet(javax.print.attribute.standard.Severity).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119841,
        "text": "The specified attribute is null.",
        "meta": {
            "doc_index": 278090,
            "doc_name": "javax.management.monitor.Monitor.setObservedAttribute(java.lang.String).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119842,
        "text": "Wraps an IllegalArgumentException when the descriptorType in parameter is not one of: \"mbean\", \"attribute\", \"operation\", \"constructor\", \"notification\", empty or null.",
        "meta": {
            "doc_index": 278023,
            "doc_name": "javax.management.modelmbean.ModelMBeanInfo.getDescriptors(java.lang.String).javax.management.RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                39,
                57,
                "NEQ-1"
            ],
            [
                86,
                93,
                "NEQ-2"
            ],
            [
                95,
                106,
                "NEQ-2"
            ],
            [
                108,
                119,
                "NEQ-2"
            ],
            [
                121,
                134,
                "NEQ-2"
            ],
            [
                136,
                150,
                "NEQ-2"
            ],
            [
                152,
                157,
                "NEQ-2"
            ],
            [
                161,
                165,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119844,
        "text": "if prompt is null, if prompt has a length of 0, if defaultName is null, or if defaultName has a length of 0.",
        "meta": {
            "doc_index": 278843,
            "doc_name": "javax.security.auth.callback.NameCallback.NameCallback(java.lang.String,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ],
            [
                35,
                41,
                "EQ-1"
            ],
            [
                45,
                46,
                "EQ-2"
            ],
            [
                51,
                62,
                "EQ-1"
            ],
            [
                66,
                70,
                "EQ-2"
            ],
            [
                96,
                102,
                "EQ-1"
            ],
            [
                106,
                107,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119845,
        "text": "(unchecked exception) Thrown if s is null.",
        "meta": {
            "doc_index": 278804,
            "doc_name": "javax.print.MimeType.MimeType(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                33,
                "EQ-1"
            ],
            [
                37,
                41,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119846,
        "text": "if d is less than 0",
        "meta": {
            "doc_index": 279262,
            "doc_name": "javax.swing.JMenu.setDelay(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "LT-1"
            ],
            [
                18,
                19,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119852,
        "text": "if input is not an instance of the correct class or is null.",
        "meta": {
            "doc_index": 277548,
            "doc_name": "javax.imageio.spi.ImageInputStreamSpi.createInputStreamInstance(java.lang.Object,boolean,java.io.File).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "NotType-1"
            ],
            [
                31,
                48,
                "NotType-2"
            ],
            [
                55,
                59,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119853,
        "text": "Wraps an java.lang.IllegalArgumentException: The object name in parameter is null or attributes in parameter is null.",
        "meta": {
            "doc_index": 272696,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.setAttributes(javax.management.ObjectName,javax.management.AttributeList).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                60,
                "EQ-1"
            ],
            [
                77,
                81,
                "EQ-2"
            ],
            [
                85,
                95,
                "EQ-1"
            ],
            [
                112,
                116,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119854,
        "text": "if targetedNotifications is null or if earliestSequenceNumber or nextSequenceNumber is negative.",
        "meta": {
            "doc_index": 278466,
            "doc_name": "javax.management.remote.NotificationResult.NotificationResult(long,long,javax.management.remote.TargetedNotification[]).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                24,
                "EQ-1"
            ],
            [
                28,
                32,
                "EQ-2"
            ],
            [
                39,
                61,
                "Negative"
            ],
            [
                65,
                83,
                "Negative"
            ]
        ]
    },
    {
        "id": 119860,
        "text": "(Unchecked exception) Thrown if member is less than zero.",
        "meta": {
            "doc_index": 278708,
            "doc_name": "javax.print.attribute.SetOfIntegerSyntax.SetOfIntegerSyntax(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                38,
                "LT-1"
            ],
            [
                52,
                56,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119861,
        "text": "if newModel is null",
        "meta": {
            "doc_index": 279371,
            "doc_name": "javax.swing.JTable.setModel(javax.swing.table.TableModel).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119862,
        "text": "Specification of the Event's type as null or an empty string will also trigger this exception.",
        "meta": {
            "doc_index": 281031,
            "doc_name": "org.w3c.dom.events.EventTarget.dispatchEvent(org.w3c.dom.events.Event).org.w3c.dom.events.EventException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                41,
                "EQ-2"
            ],
            [
                45,
                60,
                "EQ-2"
            ],
            [
                17,
                33,
                "EQ-1"
            ]
        ]
    },
    {
        "id": 119867,
        "text": "if identifier is null or no TableColumn has this identifier",
        "meta": {
            "doc_index": 279370,
            "doc_name": "javax.swing.JTable.getColumn(java.lang.Object).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119868,
        "text": "Wraps a java.lang.IllegalArgumentException: The object name in parameter is null or attributes in parameter is null.",
        "meta": {
            "doc_index": 277951,
            "doc_name": "javax.management.MBeanServerConnection.setAttributes(javax.management.ObjectName,javax.management.AttributeList).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                59,
                "EQ-1"
            ],
            [
                76,
                80,
                "EQ-2"
            ],
            [
                84,
                94,
                "EQ-1"
            ],
            [
                111,
                115,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119869,
        "text": "Listener parameter is null.",
        "meta": {
            "doc_index": 278096,
            "doc_name": "javax.management.NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119870,
        "text": "if the logger name is null.",
        "meta": {
            "doc_index": 276997,
            "doc_name": "java.util.logging.LogManager.addLogger(java.util.logging.Logger).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119872,
        "text": "if an error is encountered while creating the JAXBResult or if the context parameter is null.",
        "meta": {
            "doc_index": 279705,
            "doc_name": "javax.xml.bind.util.JAXBResult.JAXBResult(javax.xml.bind.JAXBContext).javax.xml.bind.JAXBException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                63,
                84,
                "EQ-1"
            ],
            [
                88,
                92,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119873,
        "text": "if the value of pos < 0, or if pos is greater than the number of menu items",
        "meta": {
            "doc_index": 279269,
            "doc_name": "javax.swing.JMenu.remove(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "LT-1"
            ],
            [
                22,
                23,
                "LT-2"
            ],
            [
                31,
                34,
                "GT-1"
            ],
            [
                51,
                75,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119874,
        "text": "if the writer supports image removal in general, but imageIndex is less than 0 or greater than the largest available index.",
        "meta": {
            "doc_index": 277435,
            "doc_name": "javax.imageio.ImageWriter.canRemoveImage(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                53,
                63,
                "LT-1"
            ],
            [
                77,
                78,
                "LT-2"
            ],
            [
                95,
                122,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119876,
        "text": "if the URL is null or cannot be accessed",
        "meta": {
            "doc_index": 279223,
            "doc_name": "javax.swing.JEditorPane.JEditorPane(java.net.URL).java.io.IOException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119877,
        "text": "(Unchecked exception) Thrown if the range is non-null and lowerBound is less than zero.",
        "meta": {
            "doc_index": 278709,
            "doc_name": "javax.print.attribute.SetOfIntegerSyntax.SetOfIntegerSyntax(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                41,
                "NotNull"
            ],
            [
                58,
                68,
                "LT-1"
            ],
            [
                82,
                86,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119878,
        "text": "if the value of pos < 0",
        "meta": {
            "doc_index": 279264,
            "doc_name": "javax.swing.JMenu.insert(javax.swing.JMenuItem,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                19,
                "LT-1"
            ],
            [
                22,
                23,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119879,
        "text": "NOT_SUPPORTED_ERR: Raised if an attempt is made to set currentNode to null.",
        "meta": {
            "doc_index": 281109,
            "doc_name": "org.w3c.dom.traversal.TreeWalker.setCurrentNode(org.w3c.dom.Node).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "Thrown"
            ]
        ]
    },
    {
        "id": 119880,
        "text": "If: - there is already a relation type with that name - the same name has been used for two different role infos - no role info provided - one null role info provided",
        "meta": {
            "doc_index": 278183,
            "doc_name": "javax.management.relation.RelationService.createRelationType(java.lang.String,javax.management.relation.RoleInfo[]).javax.management.relation.InvalidRelationTypeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                148,
                157,
                "EQ-2"
            ],
            [
                143,
                147,
                "EQ-1"
            ]
        ]
    },
    {
        "id": 119883,
        "text": "if region is null or has a width or height less than 1.",
        "meta": {
            "doc_index": 277467,
            "doc_name": "javax.imageio.ImageWriter.prepareReplacePixels(int,java.awt.Rectangle).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ],
            [
                27,
                47,
                "LT-1"
            ],
            [
                53,
                54,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119888,
        "text": "if locale or its country code is null",
        "meta": {
            "doc_index": 276903,
            "doc_name": "java.util.Currency.getInstance(java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                29,
                "EQ-1"
            ],
            [
                33,
                37,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119889,
        "text": "Wraps an IllegalArgumentException: The AttributeChangeNotification object passed in parameter is null.",
        "meta": {
            "doc_index": 278034,
            "doc_name": "javax.management.modelmbean.ModelMBeanNotificationBroadcaster.sendAttributeChangeNotification(javax.management.AttributeChangeNotification).javax.management.RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                73,
                "EQ-1"
            ],
            [
                97,
                101,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119891,
        "text": "(unchecked exception) Thrown if mimeType is null or className is null.",
        "meta": {
            "doc_index": 278788,
            "doc_name": "javax.print.DocFlavor.DocFlavor(java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ],
            [
                52,
                61,
                "EQ-1"
            ],
            [
                65,
                69,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119893,
        "text": "if the key or value is null.",
        "meta": {
            "doc_index": 276913,
            "doc_name": "java.util.Dictionary.put(K,V).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119894,
        "text": "ServiceNotFoundException: No ModelMBeanOperationInfo defined for the attribute's getter method or no descriptor associated with the ModelMBeanOperationInfo or the managed resource is null.",
        "meta": {
            "doc_index": 278062,
            "doc_name": "javax.management.modelmbean.RequiredModelMBean.getAttribute(java.lang.String).javax.management.MBeanException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Thrown"
            ],
            [
                159,
                179,
                "EQ-1"
            ],
            [
                183,
                187,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119897,
        "text": "if index is out of range (index < 0 || index > size()).",
        "meta": {
            "doc_index": 278406,
            "doc_name": "javax.management.relation.RoleUnresolvedList.add(int,javax.management.relation.RoleUnresolved).java.lang.IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                31,
                "LT-1"
            ],
            [
                34,
                35,
                "LT-2"
            ],
            [
                47,
                53,
                "GT-2"
            ],
            [
                39,
                44,
                "GT-1"
            ]
        ]
    },
    {
        "id": 119899,
        "text": "if model is null",
        "meta": {
            "doc_index": 279260,
            "doc_name": "javax.swing.JList.setModel(javax.swing.ListModel<E>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119900,
        "text": "if serviceURL is null.",
        "meta": {
            "doc_index": 278427,
            "doc_name": "javax.management.remote.JMXConnectorFactory.connect(javax.management.remote.JMXServiceURL).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119902,
        "text": "(unchecked exception) Thrown if className is null.",
        "meta": {
            "doc_index": 278802,
            "doc_name": "javax.print.DocFlavor.SERVICE_FORMATTED.SERVICE_FORMATTED(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                41,
                "EQ-1"
            ],
            [
                45,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119903,
        "text": "if resourceBaseName is null.",
        "meta": {
            "doc_index": 277521,
            "doc_name": "javax.imageio.metadata.IIOMetadataFormatImpl.setResourceBaseName(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119905,
        "text": "will be thrown if index is >= length of the text, or < -1",
        "meta": {
            "doc_index": 279184,
            "doc_name": "javax.swing.AbstractButton.setDisplayedMnemonicIndex(int).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                18,
                23,
                "GE-1"
            ],
            [
                30,
                48,
                "GE-2"
            ],
            [
                55,
                57,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119906,
        "text": "(Unchecked exception) Thrown if any element of members is null.",
        "meta": {
            "doc_index": 278706,
            "doc_name": "javax.print.attribute.SetOfIntegerSyntax.SetOfIntegerSyntax(int[][]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                54,
                "EQ-1"
            ],
            [
                58,
                62,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119911,
        "text": "if either of inData or imageType is null.",
        "meta": {
            "doc_index": 277330,
            "doc_name": "javax.imageio.ImageTranscoder.convertImageMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                32,
                "EQ-1"
            ],
            [
                36,
                40,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119912,
        "text": "if anotherDate is null.",
        "meta": {
            "doc_index": 276909,
            "doc_name": "java.util.Date.compareTo(java.util.Date).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119913,
        "text": "The descriptor is invalid, or descriptor field \"name\" is not equal to name parameter, or descriptor field \"descriptorType\" is not equal to \"attribute\".",
        "meta": {
            "doc_index": 278017,
            "doc_name": "javax.management.modelmbean.ModelMBeanAttributeInfo.ModelMBeanAttributeInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,javax.management.Descriptor).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                30,
                53,
                "NEQ-1"
            ],
            [
                70,
                84,
                "NEQ-2"
            ],
            [
                89,
                122,
                "NEQ-1"
            ],
            [
                139,
                150,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119914,
        "text": "The specified threshold is null or the threshold value is less than zero.",
        "meta": {
            "doc_index": 278076,
            "doc_name": "javax.management.monitor.CounterMonitor.setInitThreshold(java.lang.Number).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ],
            [
                35,
                54,
                "LT-1"
            ],
            [
                68,
                72,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119915,
        "text": "if oldChild is null.",
        "meta": {
            "doc_index": 277540,
            "doc_name": "javax.imageio.metadata.IIOMetadataNode.removeChild(org.w3c.dom.Node).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119917,
        "text": "if the list parameter is null or if the list parameter contains any non-Role objects.",
        "meta": {
            "doc_index": 278391,
            "doc_name": "javax.management.relation.RoleList.RoleList(java.util.List<javax.management.relation.Role>).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119918,
        "text": "(unchecked exception) Thrown if crossFeedResolution < 1 or feedResolution < 1 or units < 1.",
        "meta": {
            "doc_index": 278698,
            "doc_name": "javax.print.attribute.ResolutionSyntax.ResolutionSyntax(int,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                51,
                "LT-1"
            ],
            [
                54,
                55,
                "LT-2"
            ],
            [
                59,
                73,
                "LT-1"
            ],
            [
                76,
                77,
                "LT-2"
            ],
            [
                81,
                86,
                "LT-1"
            ],
            [
                89,
                90,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119922,
        "text": "if identifier is null, or no TableColumn has this identifier",
        "meta": {
            "doc_index": 279449,
            "doc_name": "javax.swing.table.TableColumnModel.getColumnIndex(java.lang.Object).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119923,
        "text": "if pos is smaller than the flushed position.",
        "meta": {
            "doc_index": 277597,
            "doc_name": "javax.imageio.stream.FileCacheImageOutputStream.seek(long).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "LT-1"
            ],
            [
                23,
                43,
                "LT-2"
            ]
        ]
    },
    {
        "id": 119924,
        "text": "Wraps a java.lang.IllegalArgumentException: The object name in parameter is null or the MBean you are when trying to unregister is the MBeanServerDelegate MBean.",
        "meta": {
            "doc_index": 277923,
            "doc_name": "javax.management.MBeanServerConnection.unregisterMBean(javax.management.ObjectName).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                59,
                "EQ-1"
            ],
            [
                76,
                80,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119926,
        "text": "If the handler argument is null.",
        "meta": {
            "doc_index": 273192,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl.setErrorHandler(com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119928,
        "text": "the specified object is null.",
        "meta": {
            "doc_index": 278092,
            "doc_name": "javax.management.monitor.MonitorMBean.addObservedObject(javax.management.ObjectName).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119929,
        "text": "if the value supplied for position is less than zero or greater than the component's text length",
        "meta": {
            "doc_index": 279615,
            "doc_name": "javax.swing.text.JTextComponent.moveCaretPosition(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                34,
                "LT-1"
            ],
            [
                48,
                52,
                "LT-2"
            ],
            [
                69,
                96,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119931,
        "text": "(unchecked exception) Thrown if any element of attributes is null.",
        "meta": {
            "doc_index": 278678,
            "doc_name": "javax.print.attribute.HashAttributeSet.HashAttributeSet(javax.print.attribute.Attribute[]).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                57,
                "EQ-1"
            ],
            [
                61,
                65,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119932,
        "text": "if this object represents a non-null value box type and the type of the parameter is not matching the current boxed value type.",
        "meta": {
            "doc_index": 280099,
            "doc_name": "org.omg.DynamicAny.DynValueBoxOperations.set_boxed_value(org.omg.CORBA.Any).org.omg.DynamicAny.DynAnyPackage.TypeMismatch",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                26,
                51,
                "EQ-2"
            ],
            [
                56,
                81,
                "NEQ-1"
            ],
            [
                98,
                126,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 119934,
        "text": "if value is < 0 or > 1",
        "meta": {
            "doc_index": 279324,
            "doc_name": "javax.swing.JSplitPane.setResizeWeight(double).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "LT-1"
            ],
            [
                14,
                15,
                "LT-2"
            ],
            [
                21,
                22,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119939,
        "text": "if: - the same name has been used for two different roles - no role info provided - one null role info provided",
        "meta": {
            "doc_index": 278370,
            "doc_name": "javax.management.relation.RelationTypeSupport.RelationTypeSupport(java.lang.String,javax.management.relation.RoleInfo[]).javax.management.relation.InvalidRelationTypeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                88,
                92,
                "EQ-1"
            ],
            [
                93,
                102,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119941,
        "text": "if this is a bounded sequence and len is larger than the bound",
        "meta": {
            "doc_index": 280079,
            "doc_name": "org.omg.DynamicAny.DynSequenceOperations.set_length(int).org.omg.DynamicAny.DynAnyPackage.InvalidValue",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                37,
                "GT-1"
            ],
            [
                53,
                62,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119942,
        "text": "octet string greater than 32 bytes.",
        "meta": {
            "doc_index": 273029,
            "doc_name": "com.sun.jmx.snmp.SnmpEngineId.createEngineId(byte[]).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "GT-1"
            ],
            [
                26,
                34,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119945,
        "text": "if any argument is null.",
        "meta": {
            "doc_index": 276964,
            "doc_name": "java.util.Locale.getInstance(java.lang.String,java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119950,
        "text": "(unchecked exception) Thrown if attribute is null.",
        "meta": {
            "doc_index": 278677,
            "doc_name": "javax.print.attribute.HashAttributeSet.HashAttributeSet(javax.print.attribute.Attribute).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                41,
                "EQ-1"
            ],
            [
                45,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119952,
        "text": "if there is a null listener",
        "meta": {
            "doc_index": 279270,
            "doc_name": "javax.swing.JMenu.fireMenuSelected().Error",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                18,
                "EQ-1"
            ],
            [
                19,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119954,
        "text": "if any of the arguments is null, has more than 4 elements, or if the numbers of DC and AC tables differ.",
        "meta": {
            "doc_index": 277542,
            "doc_name": "javax.imageio.plugins.jpeg.JPEGImageReadParam.setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[]).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119956,
        "text": "Wraps a java.lang.IllegalArgumentException: The object passed in parameter is null or no object name is specified.",
        "meta": {
            "doc_index": 277857,
            "doc_name": "javax.management.MBeanServer.registerMBean(java.lang.Object,javax.management.ObjectName).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                54,
                "EQ-1"
            ],
            [
                78,
                82,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119957,
        "text": "if output is null.",
        "meta": {
            "doc_index": 277193,
            "doc_name": "javax.imageio.ImageIO.createImageOutputStream(java.lang.Object).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119958,
        "text": "if prompt is null, if prompt has a length of 0, if defaultText is null or if defaultText has a length of 0.",
        "meta": {
            "doc_index": 278846,
            "doc_name": "javax.security.auth.callback.TextInputCallback.TextInputCallback(java.lang.String,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ],
            [
                35,
                41,
                "EQ-1"
            ],
            [
                45,
                46,
                "EQ-2"
            ],
            [
                51,
                62,
                "EQ-1"
            ],
            [
                66,
                70,
                "EQ-2"
            ],
            [
                95,
                101,
                "EQ-1"
            ],
            [
                105,
                106,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119962,
        "text": "if the specified value is negative.",
        "meta": {
            "doc_index": 273101,
            "doc_name": "com.sun.jmx.snmp.SnmpTimeticks.SnmpTimeticks(long).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "Negative"
            ]
        ]
    },
    {
        "id": 119963,
        "text": "if off, len, or pos are negative, or if off+len > b.length.",
        "meta": {
            "doc_index": 277755,
            "doc_name": "javax.imageio.stream.MemoryCache.write(byte[],int,int,long).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                8,
                11,
                "Negative"
            ],
            [
                16,
                19,
                "Negative"
            ],
            [
                40,
                47,
                "GT-1"
            ],
            [
                50,
                58,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119965,
        "text": "if key is null",
        "meta": {
            "doc_index": 277020,
            "doc_name": "java.util.ResourceBundle.getString(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119966,
        "text": "if the supplied index is negative or larger than the largest valid index.",
        "meta": {
            "doc_index": 277179,
            "doc_name": "javax.imageio.IIOImage.getThumbnail(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "Negative"
            ],
            [
                49,
                72,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119968,
        "text": "if newChild is null.",
        "meta": {
            "doc_index": 277538,
            "doc_name": "javax.imageio.metadata.IIOMetadataNode.insertBefore(org.w3c.dom.Node,org.w3c.dom.Node).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119970,
        "text": "if baseName is null.",
        "meta": {
            "doc_index": 277320,
            "doc_name": "javax.imageio.ImageReader.processWarningOccurred(java.lang.String,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119972,
        "text": "if off is negative, len is negative, or off + len is greater than d.length.",
        "meta": {
            "doc_index": 277674,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(double[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                49,
                "GT-1"
            ],
            [
                66,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119975,
        "text": "INDEX_SIZE_ERR: Raised if offset is negative or greater than the number of child units in refNode.",
        "meta": {
            "doc_index": 281073,
            "doc_name": "org.w3c.dom.ranges.Range.setStart(org.w3c.dom.Node,int).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                26,
                32,
                "Negative"
            ],
            [
                61,
                97,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119976,
        "text": "if any of the arguments is null or has more than 4 elements, or if the numbers of DC and AC tables differ.",
        "meta": {
            "doc_index": 277545,
            "doc_name": "javax.imageio.plugins.jpeg.JPEGImageWriteParam.setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[]).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119977,
        "text": "If property is null.",
        "meta": {
            "doc_index": 278127,
            "doc_name": "javax.management.ObjectName.isPropertyValuePattern(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119978,
        "text": "if either parameter is null.",
        "meta": {
            "doc_index": 277331,
            "doc_name": "javax.imageio.ImageTypeSpecifier.ImageTypeSpecifier(java.awt.image.ColorModel,java.awt.image.SampleModel).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119979,
        "text": "if null parameter",
        "meta": {
            "doc_index": 278154,
            "doc_name": "javax.management.relation.MBeanServerNotificationFilter.isNotificationEnabled(javax.management.Notification).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                8,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119980,
        "text": "(unchecked exception) Thrown if theValue is null.",
        "meta": {
            "doc_index": 278676,
            "doc_name": "javax.print.attribute.DateTimeSyntax.DateTimeSyntax(java.util.Date).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119981,
        "text": "The classloader of this stream object is non-null.",
        "meta": {
            "doc_index": 272425,
            "doc_name": "com.sun.corba.se.impl.io.IIOPInputStream.enableResolveObjectDelegate(boolean).SecurityException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                37,
                "NotNull"
            ]
        ]
    },
    {
        "id": 119986,
        "text": "(unchecked exception) Thrown if info is null.",
        "meta": {
            "doc_index": 278770,
            "doc_name": "javax.print.attribute.standard.PrinterInfo.PrinterInfo(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                36,
                "EQ-1"
            ],
            [
                40,
                44,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119987,
        "text": "Wraps an IllegalArgumentException: An Attribute object passed in parameter is null or the names of the two Attribute objects in parameter are not the same.",
        "meta": {
            "doc_index": 278036,
            "doc_name": "javax.management.modelmbean.ModelMBeanNotificationBroadcaster.sendAttributeChangeNotification(javax.management.Attribute,javax.management.Attribute).javax.management.RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                54,
                "EQ-1"
            ],
            [
                78,
                82,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119988,
        "text": "if countryCode or locale is null",
        "meta": {
            "doc_index": 277083,
            "doc_name": "java.util.spi.LocaleNameProvider.getDisplayCountry(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                24,
                "EQ-1"
            ],
            [
                28,
                32,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119992,
        "text": "thrown if the offset is less than zero or greater than the document length.",
        "meta": {
            "doc_index": 279379,
            "doc_name": "javax.swing.JTextArea.getLineOfOffset(int).javax.swing.text.BadLocationException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                20,
                "LT-1"
            ],
            [
                34,
                38,
                "LT-2"
            ],
            [
                55,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 119993,
        "text": "if the specified principals, pubCredentials, or privCredentials are null.",
        "meta": {
            "doc_index": 278893,
            "doc_name": "javax.security.auth.Subject.Subject(boolean,java.util.Set<? extends java.security.Principal>,java.util.Set<?>,java.util.Set<?>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                63,
                "EQ-1"
            ],
            [
                68,
                72,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119994,
        "text": "if raster is null.",
        "meta": {
            "doc_index": 277176,
            "doc_name": "javax.imageio.IIOImage.IIOImage(java.awt.image.Raster,java.util.List<? extends java.awt.image.BufferedImage>,javax.imageio.metadata.IIOMetadata).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119996,
        "text": "if formats is null",
        "meta": {
            "doc_index": 277046,
            "doc_name": "java.util.ResourceBundle.Control.getControl(java.util.List<java.lang.String>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 119997,
        "text": "when : octet string lower than 5 bytes.",
        "meta": {
            "doc_index": 273031,
            "doc_name": "com.sun.jmx.snmp.SnmpEngineId.createEngineId(java.lang.String).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                19,
                "LT-1"
            ],
            [
                31,
                38,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120000,
        "text": "if selectionModel is null",
        "meta": {
            "doc_index": 279261,
            "doc_name": "javax.swing.JList.setSelectionModel(javax.swing.ListSelectionModel).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                21,
                25,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120002,
        "text": "if reader is null.",
        "meta": {
            "doc_index": 277202,
            "doc_name": "javax.imageio.ImageIO.getImageWriter(javax.imageio.ImageReader).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120005,
        "text": "if srcRegion is null.",
        "meta": {
            "doc_index": 277321,
            "doc_name": "javax.imageio.ImageReader.computeRegions(javax.imageio.ImageReadParam,int,int,java.awt.image.BufferedImage,java.awt.Rectangle,java.awt.Rectangle).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120009,
        "text": "if sequenceNumber is negative.",
        "meta": {
            "doc_index": 278414,
            "doc_name": "javax.management.remote.JMXConnectionNotification.JMXConnectionNotification(java.lang.String,java.lang.Object,java.lang.String,long,java.lang.String,java.lang.Object).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "Negative"
            ]
        ]
    },
    {
        "id": 120011,
        "text": "if obj is null or not a LdapName.",
        "meta": {
            "doc_index": 278610,
            "doc_name": "javax.naming.ldap.LdapName.compareTo(java.lang.Object).ClassCastException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ],
            [
                24,
                32,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 120014,
        "text": "if any non-null element of params is not an ImageReadParam.",
        "meta": {
            "doc_index": 277267,
            "doc_name": "javax.imageio.ImageReader.readAll(java.util.Iterator<? extends javax.imageio.ImageReadParam>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "NotType-1"
            ],
            [
                44,
                58,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 120015,
        "text": "if any of the required parameters (relation id, relation service ObjectName, relation service MBeanServer, or relation type name) is null.",
        "meta": {
            "doc_index": 278341,
            "doc_name": "javax.management.relation.RelationSupport.RelationSupport(java.lang.String,javax.management.ObjectName,javax.management.MBeanServer,java.lang.String,javax.management.relation.RoleList).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                128,
                "EQ-1"
            ],
            [
                133,
                137,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120018,
        "text": "if either provider is null or they are the same object.",
        "meta": {
            "doc_index": 277588,
            "doc_name": "javax.imageio.spi.ServiceRegistry.setOrdering(java.lang.Class<T>,T,T).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120019,
        "text": "if l is null.",
        "meta": {
            "doc_index": 277667,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(long[],int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120020,
        "text": "for a null or invalid page specification, or exception from the stream being read",
        "meta": {
            "doc_index": 279226,
            "doc_name": "javax.swing.JEditorPane.setPage(java.net.URL).java.io.IOException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                22,
                40,
                "EQ-2"
            ],
            [
                6,
                10,
                "EQ-1"
            ]
        ]
    },
    {
        "id": 120021,
        "text": "if type is null.",
        "meta": {
            "doc_index": 277568,
            "doc_name": "javax.imageio.spi.ImageWriterSpi.canEncodeImage(javax.imageio.ImageTypeSpecifier).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120022,
        "text": "if ID or locale is null",
        "meta": {
            "doc_index": 277088,
            "doc_name": "java.util.spi.TimeZoneNameProvider.getDisplayName(java.lang.String,boolean,int,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120024,
        "text": "if baseName, locales or control is null",
        "meta": {
            "doc_index": 277035,
            "doc_name": "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale,java.util.ResourceBundle.Control).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                31,
                "EQ-1"
            ],
            [
                35,
                39,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120025,
        "text": "Wraps an {link java.lang.IllegalArgumentException}: The MBeanInfo passed in parameter is null.",
        "meta": {
            "doc_index": 278048,
            "doc_name": "javax.management.modelmbean.RequiredModelMBean.RequiredModelMBean(javax.management.modelmbean.ModelMBeanInfo).javax.management.RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                65,
                "EQ-1"
            ],
            [
                89,
                93,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120030,
        "text": "The specified string to compare is null.",
        "meta": {
            "doc_index": 278094,
            "doc_name": "javax.management.monitor.StringMonitor.setStringToCompare(java.lang.String).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "EQ-1"
            ],
            [
                35,
                39,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120031,
        "text": "The specified offset is null or the offset value is less than zero.",
        "meta": {
            "doc_index": 278078,
            "doc_name": "javax.management.monitor.CounterMonitor.setOffset(java.lang.Number).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ],
            [
                32,
                48,
                "LT-1"
            ],
            [
                62,
                66,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120033,
        "text": "if the initial capacity is less than or equal to zero, or if the load factor is less than or equal to zero.",
        "meta": {
            "doc_index": 272601,
            "doc_name": "com.sun.corba.se.impl.util.IdentityHashtable.IdentityHashtable(int,float).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                49,
                53,
                "LE-2"
            ],
            [
                3,
                23,
                "LE-1"
            ],
            [
                61,
                76,
                "LE-1"
            ],
            [
                102,
                106,
                "LE-2"
            ]
        ]
    },
    {
        "id": 120034,
        "text": "if null role",
        "meta": {
            "doc_index": 278163,
            "doc_name": "javax.management.relation.Relation.setRole(javax.management.relation.Role).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120035,
        "text": "if connectionId is null.",
        "meta": {
            "doc_index": 278442,
            "doc_name": "javax.management.remote.JMXConnectorServer.connectionOpened(java.lang.String,java.lang.String,java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120036,
        "text": "if languageCode or locale is null",
        "meta": {
            "doc_index": 277079,
            "doc_name": "java.util.spi.LocaleNameProvider.getDisplayLanguage(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120038,
        "text": "if serviceURL or environment is null.",
        "meta": {
            "doc_index": 278437,
            "doc_name": "javax.management.remote.JMXConnectorProvider.newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map<java.lang.String,?>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                28,
                "EQ-1"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120039,
        "text": "if imageIndex is less than -1 or greater than the largest available index.",
        "meta": {
            "doc_index": 277432,
            "doc_name": "javax.imageio.ImageWriter.writeInsert(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                29,
                "LT-2"
            ],
            [
                46,
                73,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120040,
        "text": "if metadata is null or is not an instance of the correct class.",
        "meta": {
            "doc_index": 277494,
            "doc_name": "javax.imageio.metadata.IIOMetadataController.activate(javax.imageio.metadata.IIOMetadata).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ],
            [
                45,
                62,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 120043,
        "text": "if q is null.",
        "meta": {
            "doc_index": 278132,
            "doc_name": "javax.management.ObjectName.unquote(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120044,
        "text": "if baseName or locale is null",
        "meta": {
            "doc_index": 277033,
            "doc_name": "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120045,
        "text": "if the writer supports image metadata replacement in general, but imageIndex is less than 0 or greater than the largest available index.",
        "meta": {
            "doc_index": 277420,
            "doc_name": "javax.imageio.ImageWriter.canReplaceImageMetadata(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                66,
                76,
                "LT-1"
            ],
            [
                90,
                91,
                "LT-2"
            ],
            [
                108,
                135,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120046,
        "text": "One of the parameters is null.",
        "meta": {
            "doc_index": 278113,
            "doc_name": "javax.management.ObjectName.ObjectName(java.lang.String,java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120047,
        "text": "if s is null.",
        "meta": {
            "doc_index": 277655,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(short[],int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120049,
        "text": "if any of the following are true: image is null.",
        "meta": {
            "doc_index": 277471,
            "doc_name": "javax.imageio.ImageWriter.replacePixels(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                39,
                "EQ-1"
            ],
            [
                43,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120050,
        "text": "if the rows or columns arguments are negative.",
        "meta": {
            "doc_index": 279376,
            "doc_name": "javax.swing.JTextArea.JTextArea(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "Negative"
            ],
            [
                15,
                32,
                "Negative"
            ]
        ]
    },
    {
        "id": 120051,
        "text": "This exception is always thrown when GraphicsEnvironment.isHeadless() returns true.",
        "meta": {
            "doc_index": 279236,
            "doc_name": "javax.swing.JFrame.JFrame(java.awt.GraphicsConfiguration).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                37,
                69,
                "Returns-1"
            ],
            [
                78,
                82,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 120052,
        "text": "if image is null.",
        "meta": {
            "doc_index": 277175,
            "doc_name": "javax.imageio.IIOImage.IIOImage(java.awt.image.RenderedImage,java.util.List<? extends java.awt.image.BufferedImage>,javax.imageio.metadata.IIOMetadata).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120057,
        "text": "Wraps a java.lang.IllegalArgumentException: The className passed in parameter is null.",
        "meta": {
            "doc_index": 277860,
            "doc_name": "javax.management.MBeanServer.instantiate(java.lang.String).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                57,
                "EQ-1"
            ],
            [
                81,
                85,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120058,
        "text": "if sourceRegion is non-null and either sourceRegion.x or sourceRegion.y is negative.",
        "meta": {
            "doc_index": 277181,
            "doc_name": "javax.imageio.IIOParam.setSourceRegion(java.awt.Rectangle).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "NotNull"
            ],
            [
                39,
                53,
                "Negative"
            ],
            [
                57,
                71,
                "Negative"
            ]
        ]
    },
    {
        "id": 120061,
        "text": "if imageType is null or thumbnails contains null references or objects other than BufferedImages.",
        "meta": {
            "doc_index": 277445,
            "doc_name": "javax.imageio.ImageWriter.prepareWriteEmpty(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageTypeSpecifier,int,int,javax.imageio.metadata.IIOMetadata,java.util.List<? extends java.awt.image.BufferedImage>,javax.imageio.ImageWriteParam).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120062,
        "text": "if im is null.",
        "meta": {
            "doc_index": 277569,
            "doc_name": "javax.imageio.spi.ImageWriterSpi.canEncodeImage(java.awt.image.RenderedImage).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "EQ-1"
            ],
            [
                9,
                13,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120064,
        "text": "if formatName is null or is not a supported name.",
        "meta": {
            "doc_index": 277565,
            "doc_name": "javax.imageio.spi.ImageReaderWriterSpi.getStreamMetadataFormat(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ],
            [
                32,
                48,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 120065,
        "text": "if threshhold < 0",
        "meta": {
            "doc_index": 279185,
            "doc_name": "javax.swing.AbstractButton.setMultiClickThreshhold(long).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                16,
                17,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120067,
        "text": "if gridColor is null",
        "meta": {
            "doc_index": 279362,
            "doc_name": "javax.swing.JTable.setGridColor(java.awt.Color).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120068,
        "text": "if the provided InetAddress is null.",
        "meta": {
            "doc_index": 273039,
            "doc_name": "com.sun.jmx.snmp.SnmpEngineId.createEngineId(java.net.InetAddress).UnknownHostException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                27,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120072,
        "text": "NOT_SUPPORTED_ERR: Raised if the specified root is null.",
        "meta": {
            "doc_index": 281105,
            "doc_name": "org.w3c.dom.traversal.DocumentTraversal.createNodeIterator(org.w3c.dom.Node,int,org.w3c.dom.traversal.NodeFilter,boolean).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "Thrown"
            ],
            [
                29,
                47,
                "EQ-1"
            ],
            [
                51,
                55,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120073,
        "text": "if locale is non-null but is not one of the values returned by getAvailableLocales.",
        "meta": {
            "doc_index": 277224,
            "doc_name": "javax.imageio.ImageReader.setLocale(java.util.Locale).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "NotNull"
            ],
            [
                33,
                82,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 120074,
        "text": "(unchecked exception) Thrown if mimeType is null.",
        "meta": {
            "doc_index": 278790,
            "doc_name": "javax.print.DocFlavor.BYTE_ARRAY.BYTE_ARRAY(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120075,
        "text": "if the provided address is null.",
        "meta": {
            "doc_index": 273035,
            "doc_name": "com.sun.jmx.snmp.SnmpEngineId.createEngineId(java.net.InetAddress,int).UnknownHostException.",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120077,
        "text": "if the given ObjectName is null",
        "meta": {
            "doc_index": 278152,
            "doc_name": "javax.management.relation.MBeanServerNotificationFilter.disableObjectName(javax.management.ObjectName).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120079,
        "text": "if buf is null.",
        "meta": {
            "doc_index": 277619,
            "doc_name": "javax.imageio.stream.ImageInputStream.readBytes(javax.imageio.stream.IIOByteBuffer,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120080,
        "text": "if the given implementation is null, or if the mbeanInterface does not follow JMX design patterns for Management Interfaces, or if the given implementation does not implement the specified interface.",
        "meta": {
            "doc_index": 278518,
            "doc_name": "javax.management.StandardMBean.StandardMBean(T,java.lang.Class<T>,boolean).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                27,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ],
            [
                131,
                155,
                "NotType-1"
            ],
            [
                175,
                198,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 120081,
        "text": "(unchecked exception) Thrown if printerName is null.",
        "meta": {
            "doc_index": 278776,
            "doc_name": "javax.print.attribute.standard.PrinterName.PrinterName(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                43,
                "EQ-1"
            ],
            [
                47,
                51,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120082,
        "text": "if aChild is null or is not a child of this node",
        "meta": {
            "doc_index": 279685,
            "doc_name": "javax.swing.tree.DefaultMutableTreeNode.remove(javax.swing.tree.MutableTreeNode).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120084,
        "text": "(unchecked exception) Thrown if other is null.",
        "meta": {
            "doc_index": 278704,
            "doc_name": "javax.print.attribute.ResolutionSyntax.lessThanOrEquals(javax.print.attribute.ResolutionSyntax).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                37,
                "EQ-1"
            ],
            [
                41,
                45,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120085,
        "text": "if the length of the specified ZIP file comment is greater than 0xFFFF bytes",
        "meta": {
            "doc_index": 277161,
            "doc_name": "java.util.zip.ZipOutputStream.setComment(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                47,
                "GT-1"
            ],
            [
                64,
                76,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120087,
        "text": "If the parameter is null.",
        "meta": {
            "doc_index": 272796,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpMibAgent.setSnmpAdaptor(com.sun.jmx.snmp.agent.SnmpMibHandler,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120088,
        "text": "(a runtime exception) if the content pane parameter is null",
        "meta": {
            "doc_index": 279209,
            "doc_name": "javax.swing.JApplet.setContentPane(java.awt.Container).java.awt.IllegalComponentStateException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                51,
                "EQ-1"
            ],
            [
                55,
                59,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120090,
        "text": "if locale is null.",
        "meta": {
            "doc_index": 277098,
            "doc_name": "java.util.TimeZone.getDisplayName(java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120091,
        "text": "if vendorName is null.",
        "meta": {
            "doc_index": 277546,
            "doc_name": "javax.imageio.spi.IIOServiceProvider.IIOServiceProvider(java.lang.String,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120092,
        "text": "if the provided AccessControlContext is null.",
        "meta": {
            "doc_index": 278896,
            "doc_name": "javax.security.auth.Subject.getSubject(java.security.AccessControlContext).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                36,
                "EQ-1"
            ],
            [
                40,
                44,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120095,
        "text": "if off, len or pos are negative or if off + len > b.length or if any portion of the requested data is not in the cache (including if pos is in a block that has already been disposed).",
        "meta": {
            "doc_index": 277758,
            "doc_name": "javax.imageio.stream.MemoryCache.read(byte[],int,int,long).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                8,
                11,
                "Negative"
            ],
            [
                15,
                18,
                "Negative"
            ],
            [
                38,
                47,
                "GT-1"
            ],
            [
                50,
                58,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120103,
        "text": "if the listenerID or notification is null.",
        "meta": {
            "doc_index": 278514,
            "doc_name": "javax.management.remote.TargetedNotification.TargetedNotification(javax.management.Notification,java.lang.Integer).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "EQ-1"
            ],
            [
                37,
                41,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120104,
        "text": "if the provided InetAddress  is null.",
        "meta": {
            "doc_index": 273037,
            "doc_name": "com.sun.jmx.snmp.SnmpEngineId.createEngineId(java.net.InetAddress,int,int).UnknownHostException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                27,
                "EQ-1"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120106,
        "text": "if the attribute name was null",
        "meta": {
            "doc_index": 276932,
            "doc_name": "java.util.jar.Attributes.Name.Name(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120109,
        "text": "One of the following errors has occurred: The m-let text file does not contain an MLET tag, the m-let text file is not found, a mandatory attribute of the MLET tag is not specified, the value of url is null.",
        "meta": {
            "doc_index": 277823,
            "doc_name": "javax.management.loading.MLet.getMBeansFromURL(java.net.URL).javax.management.ServiceNotFoundException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                195,
                198,
                "EQ-1"
            ],
            [
                202,
                206,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120113,
        "text": "if the value of pos < 0, or if the value of pos is greater than the number of items",
        "meta": {
            "doc_index": 279296,
            "doc_name": "javax.swing.JPopupMenu.remove(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "LT-1"
            ],
            [
                22,
                23,
                "LT-2"
            ],
            [
                31,
                47,
                "GT-1"
            ],
            [
                64,
                83,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120114,
        "text": "if the writer supports pixel replacement in general, but imageIndex is less than 0 or greater than the largest available index.",
        "meta": {
            "doc_index": 277462,
            "doc_name": "javax.imageio.ImageWriter.canReplacePixels(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                57,
                67,
                "LT-1"
            ],
            [
                81,
                82,
                "LT-2"
            ],
            [
                99,
                126,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120115,
        "text": "if provider is null.",
        "meta": {
            "doc_index": 277577,
            "doc_name": "javax.imageio.spi.ServiceRegistry.registerServiceProvider(T,java.lang.Class<T>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120117,
        "text": "HIERARCHY_REQUEST_ERR: Raised if the container of the start of the Range is of a type that does not allow children of the type of newNode or if newNode is an ancestor of the container.",
        "meta": {
            "doc_index": 281093,
            "doc_name": "org.w3c.dom.ranges.Range.insertNode(org.w3c.dom.Node).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Thrown"
            ]
        ]
    },
    {
        "id": 120118,
        "text": "if the length of lengths is greater than 17",
        "meta": {
            "doc_index": 272617,
            "doc_name": "com.sun.image.codec.jpeg.JPEGHuffmanTable.JPEGHuffmanTable(short[],short[]).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                24,
                "GT-1"
            ],
            [
                41,
                43,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120121,
        "text": "FieldName cannot be null. \"",
        "meta": {
            "doc_index": 278008,
            "doc_name": "javax.management.modelmbean.DescriptorSupport.DescriptorSupport(java.lang.String...).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "NEQ-1"
            ],
            [
                20,
                24,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 120124,
        "text": "if server is null.",
        "meta": {
            "doc_index": 277998,
            "doc_name": "javax.management.MBeanServerFactory.getClassLoaderRepository(javax.management.MBeanServer).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120126,
        "text": "if formatName is null or is not one of the names returned by getMetadataFormatNames.",
        "meta": {
            "doc_index": 277485,
            "doc_name": "javax.imageio.metadata.IIOMetadata.getAsTree(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ],
            [
                32,
                83,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 120127,
        "text": "if the given implementation is null.",
        "meta": {
            "doc_index": 278515,
            "doc_name": "javax.management.StandardMBean.StandardMBean(T,java.lang.Class<T>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                27,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120128,
        "text": "if the modified UTF-8 representation of s requires more than 65536 bytes.",
        "meta": {
            "doc_index": 277727,
            "doc_name": "javax.imageio.stream.ImageOutputStream.writeUTF(java.lang.String).java.io.UTFDataFormatException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                41,
                "GT-1"
            ],
            [
                61,
                72,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120131,
        "text": "if the specified initial capacity is negative",
        "meta": {
            "doc_index": 272426,
            "doc_name": "com.sun.corba.se.impl.ior.ByteBuffer.ByteBuffer(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                33,
                "Negative"
            ]
        ]
    },
    {
        "id": 120137,
        "text": "param is null.",
        "meta": {
            "doc_index": 277471,
            "doc_name": "javax.imageio.ImageWriter.replacePixels(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                5,
                "EQ-1"
            ],
            [
                9,
                13,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120138,
        "text": "(unchecked exception) Thrown if the category is null or if the attribute is null.",
        "meta": {
            "doc_index": 278674,
            "doc_name": "javax.print.attribute.AttributeSetUtilities.verifyCategoryForValue(java.lang.Class<?>,javax.print.attribute.Attribute).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                44,
                "EQ-1"
            ],
            [
                48,
                52,
                "EQ-2"
            ],
            [
                59,
                72,
                "EQ-1"
            ],
            [
                76,
                80,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120139,
        "text": "if img is null.",
        "meta": {
            "doc_index": 272629,
            "doc_name": "com.sun.imageio.plugins.common.PaletteBuilder.createIndexColorModel(java.awt.image.RenderedImage).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120140,
        "text": "if variant or locale is null",
        "meta": {
            "doc_index": 277085,
            "doc_name": "java.util.spi.LocaleNameProvider.getDisplayVariant(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120143,
        "text": "if baseName or control is null",
        "meta": {
            "doc_index": 277030,
            "doc_name": "java.util.ResourceBundle.getBundle(java.lang.String,java.util.ResourceBundle.Control).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120145,
        "text": "if elementName is null or is not a legal element name for this format.",
        "meta": {
            "doc_index": 277495,
            "doc_name": "javax.imageio.metadata.IIOMetadataFormat.getElementMinChildren(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ],
            [
                33,
                69,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 120148,
        "text": "if bundleName, locale, format, or loader is null, or if null is returned by Locale)",
        "meta": {
            "doc_index": 277053,
            "doc_name": "java.util.ResourceBundle.Control.newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ],
            [
                56,
                60,
                "ReturnsBy-1"
            ],
            [
                76,
                82,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 120149,
        "text": "if inData is null.",
        "meta": {
            "doc_index": 277329,
            "doc_name": "javax.imageio.ImageTranscoder.convertStreamMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageWriteParam).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120152,
        "text": "if when is null.",
        "meta": {
            "doc_index": 276907,
            "doc_name": "java.util.Date.before(java.util.Date).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120153,
        "text": "if index is out of range (index < -1 || index >= tab count)",
        "meta": {
            "doc_index": 279330,
            "doc_name": "javax.swing.JTabbedPane.setSelectedIndex(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                31,
                "LT-1"
            ],
            [
                34,
                36,
                "LT-2"
            ],
            [
                40,
                45,
                "GE-1"
            ],
            [
                49,
                58,
                "GE-2"
            ]
        ]
    },
    {
        "id": 120154,
        "text": "The specified object is null.",
        "meta": {
            "doc_index": 278088,
            "doc_name": "javax.management.monitor.Monitor.setObservedObject(javax.management.ObjectName).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120157,
        "text": "will be thrown if mnemonicIndex is >= length of the tab title , or < -1",
        "meta": {
            "doc_index": 279354,
            "doc_name": "javax.swing.JTabbedPane.setDisplayedMnemonicIndexAt(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                18,
                31,
                "GE-1"
            ],
            [
                38,
                61,
                "GE-2"
            ],
            [
                69,
                71,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120159,
        "text": "DOMSTRING_SIZE_ERR: Raised if the specified range of text does not fit into a DOMString.",
        "meta": {
            "doc_index": 280853,
            "doc_name": "org.w3c.dom.CharacterData.substringData(int,int).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Thrown"
            ]
        ]
    },
    {
        "id": 120161,
        "text": "Wraps an java.lang.IllegalArgumentException: The object name in parameter is null or the attribute in parameter is null.",
        "meta": {
            "doc_index": 272684,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(javax.management.ObjectName,java.lang.String).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                60,
                "EQ-1"
            ],
            [
                77,
                81,
                "EQ-2"
            ],
            [
                85,
                98,
                "EQ-1"
            ],
            [
                115,
                119,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120163,
        "text": "if getMBeanServer() is null.",
        "meta": {
            "doc_index": 278507,
            "doc_name": "javax.management.remote.rmi.RMIServerImpl.newClient(java.lang.Object).IllegalStateException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120165,
        "text": "Thrown if attributeSet is null.",
        "meta": {
            "doc_index": 278661,
            "doc_name": "javax.print.attribute.AttributeSetUtilities.unmodifiableView(javax.print.attribute.AttributeSet).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120167,
        "text": "if the InputStream is null",
        "meta": {
            "doc_index": 278917,
            "doc_name": "javax.security.auth.x500.X500Principal.X500Principal(java.io.InputStream).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120169,
        "text": "The specified value is negative.",
        "meta": {
            "doc_index": 273099,
            "doc_name": "com.sun.jmx.snmp.SnmpTimeticks.SnmpTimeticks(int).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Negative"
            ]
        ]
    },
    {
        "id": 120170,
        "text": "if paramName is null.",
        "meta": {
            "doc_index": 278803,
            "doc_name": "javax.print.DocFlavor.getParameter(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120171,
        "text": "The name parameter is null.",
        "meta": {
            "doc_index": 278111,
            "doc_name": "javax.management.ObjectName.ObjectName(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120173,
        "text": "if null role name",
        "meta": {
            "doc_index": 278155,
            "doc_name": "javax.management.relation.Relation.getRole(java.lang.String).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                8,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120174,
        "text": "Index must range in value from 0 - 3.",
        "meta": {
            "doc_index": 272615,
            "doc_name": "com.sun.image.codec.jpeg.JPEGEncodeParam.setDCHuffmanTable(int,com.sun.image.codec.jpeg.JPEGHuffmanTable).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                5,
                "GE-1"
            ],
            [
                31,
                32,
                "GE-2"
            ],
            [
                35,
                36,
                "LE-2"
            ]
        ]
    },
    {
        "id": 120175,
        "text": "if redLUT is null.",
        "meta": {
            "doc_index": 277338,
            "doc_name": "javax.imageio.ImageTypeSpecifier.createIndexed(byte[],byte[],byte[],byte[],int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120176,
        "text": "if writer is null.",
        "meta": {
            "doc_index": 277014,
            "doc_name": "java.util.Properties.store(java.io.Writer,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120177,
        "text": "if null parameter or incorrect problem type",
        "meta": {
            "doc_index": 278400,
            "doc_name": "javax.management.relation.RoleUnresolved.RoleUnresolved(java.lang.String,java.util.List<javax.management.ObjectName>,int).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                8,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120178,
        "text": "if the specified field is out of range (field < 0 || field >= FIELD_COUNT).",
        "meta": {
            "doc_index": 276891,
            "doc_name": "java.util.Calendar.isExternallySet(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                45,
                "LT-1"
            ],
            [
                48,
                49,
                "LT-2"
            ],
            [
                53,
                58,
                "GE-1"
            ],
            [
                62,
                73,
                "GE-2"
            ]
        ]
    },
    {
        "id": 120179,
        "text": "if accessFileProps is null or if any of the supplied access level values differs from \"readonly\" or \"readwrite\".",
        "meta": {
            "doc_index": 272772,
            "doc_name": "com.sun.jmx.remote.security.MBeanServerFileAccessController.MBeanServerFileAccessController(java.util.Properties).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ],
            [
                33,
                72,
                "NEQ-1"
            ],
            [
                86,
                96,
                "NEQ-2"
            ],
            [
                100,
                111,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 120182,
        "text": "Wraps an IllegalArgumentException: The managed resource type passed in parameter is null.",
        "meta": {
            "doc_index": 278014,
            "doc_name": "javax.management.modelmbean.ModelMBean.setManagedResource(java.lang.Object,java.lang.String).javax.management.RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                60,
                "EQ-1"
            ],
            [
                84,
                88,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120183,
        "text": "if rows is less than 0",
        "meta": {
            "doc_index": 279384,
            "doc_name": "javax.swing.JTextArea.setRows(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "LT-1"
            ],
            [
                21,
                22,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120184,
        "text": "if mbs or name is null.",
        "meta": {
            "doc_index": 278445,
            "doc_name": "javax.management.remote.JMXConnectorServer.preRegister(javax.management.MBeanServer,javax.management.ObjectName).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120185,
        "text": "thrown if argument is null.",
        "meta": {
            "doc_index": 276963,
            "doc_name": "java.util.Locale.Locale(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120186,
        "text": "if output is not an instance of the correct class or is null.",
        "meta": {
            "doc_index": 277553,
            "doc_name": "javax.imageio.spi.ImageOutputStreamSpi.createOutputStreamInstance(java.lang.Object,boolean,java.io.File).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "NotType-1"
            ],
            [
                32,
                49,
                "NotType-2"
            ],
            [
                56,
                60,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120188,
        "text": "if index is out of range (index < 0 || index >= size()).",
        "meta": {
            "doc_index": 278408,
            "doc_name": "javax.management.relation.RoleUnresolvedList.set(int,javax.management.relation.RoleUnresolved).java.lang.IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                31,
                "LT-1"
            ],
            [
                34,
                35,
                "LT-2"
            ],
            [
                39,
                44,
                "GE-1"
            ],
            [
                48,
                54,
                "GE-2"
            ]
        ]
    },
    {
        "id": 120190,
        "text": "if prompt is null or if prompt has a length of 0.",
        "meta": {
            "doc_index": 278842,
            "doc_name": "javax.security.auth.callback.NameCallback.NameCallback(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ],
            [
                37,
                43,
                "EQ-1"
            ],
            [
                47,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120192,
        "text": "if content is null",
        "meta": {
            "doc_index": 279712,
            "doc_name": "javax.xml.soap.AttachmentPart.setRawContent(java.io.InputStream,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120194,
        "text": "Also thrown if the constructed set-of-integer is a zero-length array or if any member of the set is less than 1.",
        "meta": {
            "doc_index": 278765,
            "doc_name": "javax.print.attribute.standard.PageRanges.PageRanges(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                75,
                96,
                "LT-1"
            ],
            [
                110,
                111,
                "LT-2"
            ],
            [
                15,
                45,
                "EQ-1"
            ],
            [
                49,
                68,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120195,
        "text": "if the value is null",
        "meta": {
            "doc_index": 276926,
            "doc_name": "java.util.Hashtable.contains(java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                20,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120197,
        "text": "(unchecked exception) Thrown if the category is not equal to the category of the attribute.",
        "meta": {
            "doc_index": 278675,
            "doc_name": "javax.print.attribute.AttributeSetUtilities.verifyCategoryForValue(java.lang.Class<?>,javax.print.attribute.Attribute).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                44,
                "NEQ-1"
            ],
            [
                61,
                90,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 120199,
        "text": "if the tile size is not within one of the allowable ranges returned by getPreferredTileSizes.",
        "meta": {
            "doc_index": 277350,
            "doc_name": "javax.imageio.ImageWriteParam.setTiling(int,int,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                38,
                58,
                "ReturnsBy-1"
            ],
            [
                71,
                92,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 120200,
        "text": "if MIMEType is null.",
        "meta": {
            "doc_index": 277198,
            "doc_name": "javax.imageio.ImageIO.getImageReadersByMIMEType(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120203,
        "text": "if i is null.",
        "meta": {
            "doc_index": 277663,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(int[],int,int).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120204,
        "text": "if elementName is null, or is not a legal element name for this format.",
        "meta": {
            "doc_index": 277497,
            "doc_name": "javax.imageio.metadata.IIOMetadataFormat.getElementDescription(java.lang.String,java.util.Locale).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120206,
        "text": "if tabIndex is out of range (tabIndex < 0 || tabIndex >= tab count)",
        "meta": {
            "doc_index": 279353,
            "doc_name": "javax.swing.JTabbedPane.setDisplayedMnemonicIndexAt(int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                37,
                "LT-1"
            ],
            [
                40,
                41,
                "LT-2"
            ],
            [
                57,
                66,
                "GE-2"
            ],
            [
                45,
                53,
                "GE-1"
            ]
        ]
    },
    {
        "id": 120207,
        "text": "Only \"rmi\" and \"iiop\" are recognized when rmiServerImpl is null.",
        "meta": {
            "doc_index": 278483,
            "doc_name": "javax.management.remote.rmi.RMIConnectorServer.RMIConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map<java.lang.String,?>,javax.management.remote.rmi.RMIServerImpl,javax.management.MBeanServer).MalformedURLException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                42,
                55,
                "EQ-1"
            ],
            [
                59,
                63,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120210,
        "text": "if off is negative, len is negative, or off + len is greater than s.length.",
        "meta": {
            "doc_index": 277654,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(short[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                49,
                "GT-1"
            ],
            [
                66,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120211,
        "text": "Thrown if x < 0 or y < 0 or w <= 0 or h <= 0 or units < 1.",
        "meta": {
            "doc_index": 278741,
            "doc_name": "javax.print.attribute.standard.MediaPrintableArea.MediaPrintableArea(float,float,float,float,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                11,
                "LT-1"
            ],
            [
                14,
                15,
                "LT-2"
            ],
            [
                19,
                20,
                "LT-1"
            ],
            [
                23,
                24,
                "LT-2"
            ],
            [
                28,
                29,
                "LE-1"
            ],
            [
                33,
                34,
                "LE-2"
            ],
            [
                38,
                39,
                "LE-1"
            ],
            [
                43,
                44,
                "LE-2"
            ],
            [
                48,
                53,
                "LT-1"
            ],
            [
                56,
                57,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120213,
        "text": "if the role is null.",
        "meta": {
            "doc_index": 278392,
            "doc_name": "javax.management.relation.RoleList.add(javax.management.relation.Role).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120215,
        "text": "if columns < 0",
        "meta": {
            "doc_index": 279387,
            "doc_name": "javax.swing.JTextField.JTextField(javax.swing.text.Document,java.lang.String,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "LT-1"
            ],
            [
                13,
                14,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120216,
        "text": "The name is null.",
        "meta": {
            "doc_index": 278126,
            "doc_name": "javax.management.ObjectName.getInstance(javax.management.ObjectName).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120217,
        "text": "if baseName, locale, or loader is null",
        "meta": {
            "doc_index": 277038,
            "doc_name": "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                30,
                "EQ-1"
            ],
            [
                34,
                38,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120218,
        "text": "if categories is null.",
        "meta": {
            "doc_index": 277574,
            "doc_name": "javax.imageio.spi.ServiceRegistry.ServiceRegistry(java.util.Iterator<java.lang.Class<?>>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120220,
        "text": "when the value of pos < 0",
        "meta": {
            "doc_index": 279263,
            "doc_name": "javax.swing.JMenu.insert(java.lang.String,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                18,
                21,
                "LT-1"
            ],
            [
                24,
                25,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120221,
        "text": "if off is negative, len is negative, or off + len is greater than c.length.",
        "meta": {
            "doc_index": 277658,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(char[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                49,
                "GT-1"
            ],
            [
                66,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120222,
        "text": "if warning is null.",
        "meta": {
            "doc_index": 277319,
            "doc_name": "javax.imageio.ImageReader.processWarningOccurred(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120223,
        "text": "The specified value is smaller than Integer.MIN_VALUE or larger than Integer.MAX_VALUE.",
        "meta": {
            "doc_index": 273044,
            "doc_name": "com.sun.jmx.snmp.SnmpInt.SnmpInt(int).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "LT-1"
            ],
            [
                36,
                53,
                "LT-2"
            ],
            [
                69,
                86,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120224,
        "text": "if there was an error in adding the Reason text or the locale passed was null.",
        "meta": {
            "doc_index": 279801,
            "doc_name": "javax.xml.soap.SOAPFault.addFaultReasonText(java.lang.String,java.util.Locale).javax.xml.soap.SOAPException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                51,
                61,
                "EQ-1"
            ],
            [
                73,
                77,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120225,
        "text": "(unchecked exception) Thrown if category is null.",
        "meta": {
            "doc_index": 278813,
            "doc_name": "javax.print.PrintService.isAttributeCategorySupported(java.lang.Class<? extends javax.print.attribute.Attribute>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120227,
        "text": "WRONG_DOCUMENT_ERR: Raised if newChild was created from a different document than the one that created this node.",
        "meta": {
            "doc_index": 281057,
            "doc_name": "org.w3c.dom.Node.insertBefore(org.w3c.dom.Node,org.w3c.dom.Node).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Thrown"
            ]
        ]
    },
    {
        "id": 120228,
        "text": "The specified modulus is null or the modulus value is less than zero.",
        "meta": {
            "doc_index": 278079,
            "doc_name": "javax.management.monitor.CounterMonitor.setModulus(java.lang.Number).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ],
            [
                33,
                50,
                "LT-1"
            ],
            [
                64,
                68,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120232,
        "text": "if name or keywordMap is null",
        "meta": {
            "doc_index": 278915,
            "doc_name": "javax.security.auth.x500.X500Principal.X500Principal(java.lang.String,java.util.Map<java.lang.String,java.lang.String>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120233,
        "text": "The listener is not registered in the MBean or is null.",
        "meta": {
            "doc_index": 278073,
            "doc_name": "javax.management.modelmbean.RequiredModelMBean.removeNotificationListener(javax.management.NotificationListener).javax.management.ListenerNotFoundException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "EQ-1"
            ],
            [
                50,
                54,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120234,
        "text": "INDEX_SIZE_ERR: Raised if the specified index is greater than the number of rows or if the index is negative.",
        "meta": {
            "doc_index": 281033,
            "doc_name": "org.w3c.dom.html.HTMLTableElement.insertRow(int).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                26,
                45,
                "GT-1"
            ],
            [
                62,
                80,
                "GT-2"
            ],
            [
                87,
                96,
                "Negative"
            ]
        ]
    },
    {
        "id": 120237,
        "text": "if minPass is negative, numPasses is negative or 0, or numPasses is smaller than Integer.MAX_VALUE but minPass + numPasses - 1 is greater than INTEGER.MAX_VALUE.",
        "meta": {
            "doc_index": 277328,
            "doc_name": "javax.imageio.ImageReadParam.setSourceProgressivePasses(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "Negative"
            ],
            [
                24,
                33,
                "Negative"
            ],
            [
                49,
                50,
                "EQ-2"
            ],
            [
                55,
                64,
                "LT-1"
            ],
            [
                81,
                98,
                "LT-2"
            ],
            [
                103,
                126,
                "GT-1"
            ],
            [
                143,
                160,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120241,
        "text": "if the index is negative or greater than the current size of this list",
        "meta": {
            "doc_index": 279201,
            "doc_name": "javax.swing.DefaultListModel.getElementAt(int).ArrayIndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "Negative"
            ],
            [
                41,
                70,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120242,
        "text": "if off is negative, len is negative, or off + len is greater than l.length.",
        "meta": {
            "doc_index": 277666,
            "doc_name": "javax.imageio.stream.ImageInputStream.readFully(long[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                49,
                "GT-1"
            ],
            [
                66,
                74,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120243,
        "text": "if the caller-specified name does not appear in the Configuration and there is no Configuration entry for \"other\", or if the caller-specified callbackHandler is null.",
        "meta": {
            "doc_index": 278876,
            "doc_name": "javax.security.auth.login.LoginContext.LoginContext(java.lang.String,javax.security.auth.callback.CallbackHandler).javax.security.auth.login.LoginException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                142,
                157,
                "EQ-1"
            ],
            [
                161,
                165,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120244,
        "text": "if the list parameter is null or if the list parameter contains any non-Attribute objects.",
        "meta": {
            "doc_index": 277767,
            "doc_name": "javax.management.AttributeList.AttributeList(java.util.List<javax.management.Attribute>).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120245,
        "text": "if delim is null",
        "meta": {
            "doc_index": 277096,
            "doc_name": "java.util.StringTokenizer.nextToken(java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120249,
        "text": "(unchecked exception) Thrown if flavor is null.",
        "meta": {
            "doc_index": 278812,
            "doc_name": "javax.print.PrintService.isDocFlavorSupported(javax.print.DocFlavor).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                38,
                "EQ-1"
            ],
            [
                42,
                46,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120252,
        "text": "if columns is less than 0",
        "meta": {
            "doc_index": 279385,
            "doc_name": "javax.swing.JTextArea.setColumns(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "LT-1"
            ],
            [
                24,
                25,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120254,
        "text": "if currencyCode or locale is null",
        "meta": {
            "doc_index": 277075,
            "doc_name": "java.util.spi.CurrencyNameProvider.getSymbol(java.lang.String,java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120258,
        "text": "if len is negative.",
        "meta": {
            "doc_index": 277618,
            "doc_name": "javax.imageio.stream.ImageInputStream.readBytes(javax.imageio.stream.IIOByteBuffer,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ]
        ]
    },
    {
        "id": 120259,
        "text": "(unchecked exception) Thrown if object is null.",
        "meta": {
            "doc_index": 278670,
            "doc_name": "javax.print.attribute.AttributeSetUtilities.verifyAttributeCategory(java.lang.Object,java.lang.Class<?>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                38,
                "EQ-1"
            ],
            [
                42,
                46,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120262,
        "text": "may be thrown if the contentType does not match the type of the content object, or if there was no DataContentHandler object for this content object",
        "meta": {
            "doc_index": 279710,
            "doc_name": "javax.xml.soap.AttachmentPart.setContent(java.lang.Object,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                32,
                "NEQ-1"
            ],
            [
                48,
                78,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 120263,
        "text": "if field is ZONE_OFFSET, DST_OFFSET, or unknown, or if any calendar fields have out-of-range values in non-lenient mode.",
        "meta": {
            "doc_index": 276917,
            "doc_name": "java.util.GregorianCalendar.add(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                35,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120265,
        "text": "(unchecked exception) Thrown if map is null or if any key or value in map is null.",
        "meta": {
            "doc_index": 278778,
            "doc_name": "javax.print.attribute.standard.PrinterStateReasons.PrinterStateReasons(java.util.Map<javax.print.attribute.standard.PrinterStateReason,javax.print.attribute.standard.Severity>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                35,
                "EQ-1"
            ],
            [
                39,
                43,
                "EQ-2"
            ],
            [
                50,
                73,
                "EQ-1"
            ],
            [
                77,
                81,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120266,
        "text": "if the document is null",
        "meta": {
            "doc_index": 279619,
            "doc_name": "javax.swing.text.JTextComponent.getText().NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120267,
        "text": "if start is out of range, or if increment is less than or equal to zero",
        "meta": {
            "doc_index": 279311,
            "doc_name": "javax.swing.JSlider.createStandardLabels(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                41,
                "LE-1"
            ],
            [
                67,
                71,
                "LE-2"
            ]
        ]
    },
    {
        "id": 120268,
        "text": "if type, source, or connectionId is null.",
        "meta": {
            "doc_index": 278413,
            "doc_name": "javax.management.remote.JMXConnectionNotification.JMXConnectionNotification(java.lang.String,java.lang.Object,java.lang.String,long,java.lang.String,java.lang.Object).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                32,
                "EQ-1"
            ],
            [
                36,
                40,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120269,
        "text": "(Unchecked exception) Thrown if member is less than 1.",
        "meta": {
            "doc_index": 278718,
            "doc_name": "javax.print.attribute.standard.CopiesSupported.CopiesSupported(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                38,
                "EQ-1"
            ],
            [
                52,
                53,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120271,
        "text": "if the given date is null.",
        "meta": {
            "doc_index": 276848,
            "doc_name": "java.text.SimpleDateFormat.format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                21,
                25,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120272,
        "text": "A value is outside of [0-255].",
        "meta": {
            "doc_index": 273053,
            "doc_name": "com.sun.jmx.snmp.SnmpIpAddress.SnmpIpAddress(long,long,long,long).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                7,
                "LT-1"
            ],
            [
                23,
                24,
                "LT-2"
            ],
            [
                25,
                28,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120273,
        "text": "if the instantiator is null.",
        "meta": {
            "doc_index": 272644,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.JmxMBeanServer(java.lang.String,javax.management.MBeanServer,javax.management.MBeanServerDelegate).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120274,
        "text": "if p_queryString is not null and this URI does not conform to the generic URI syntax or if the path is null",
        "meta": {
            "doc_index": 273443,
            "doc_name": "com.sun.org.apache.xerces.internal.util.URI.setQueryString(java.lang.String).com.sun.org.apache.xerces.internal.util.URI.MalformedURIException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "NEQ-1"
            ],
            [
                24,
                28,
                "NEQ-2"
            ],
            [
                91,
                99,
                "EQ-1"
            ],
            [
                103,
                107,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120275,
        "text": "thrown if either argument is null.",
        "meta": {
            "doc_index": 276962,
            "doc_name": "java.util.Locale.Locale(java.lang.String,java.lang.String).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120276,
        "text": "if aColumn is null",
        "meta": {
            "doc_index": 279436,
            "doc_name": "javax.swing.table.DefaultTableColumnModel.addColumn(javax.swing.table.TableColumn).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120277,
        "text": "if baseName, locale, format, loader, or bundle is null",
        "meta": {
            "doc_index": 277062,
            "doc_name": "java.util.ResourceBundle.Control.needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                46,
                "EQ-1"
            ],
            [
                50,
                54,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120282,
        "text": "(Unchecked exception) Thrown if value is less than lowerBound or greater than upperBound.",
        "meta": {
            "doc_index": 278697,
            "doc_name": "javax.print.attribute.IntegerSyntax.IntegerSyntax(int,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                37,
                "LT-1"
            ],
            [
                51,
                61,
                "LT-2"
            ],
            [
                78,
                88,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120284,
        "text": "if the specified PrivilegedExceptionAction is null.",
        "meta": {
            "doc_index": 278900,
            "doc_name": "javax.security.auth.Subject.doAs(javax.security.auth.Subject,java.security.PrivilegedExceptionAction<T>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                42,
                "EQ-1"
            ],
            [
                46,
                50,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120285,
        "text": "if either width or height are negative or zero.",
        "meta": {
            "doc_index": 277342,
            "doc_name": "javax.imageio.ImageTypeSpecifier.getSampleModel(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                2,
                25,
                "Negative"
            ],
            [
                42,
                46,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120288,
        "text": "if the minimum degree is greater than the maximum degree.",
        "meta": {
            "doc_index": 278381,
            "doc_name": "javax.management.relation.RoleInfo.RoleInfo(java.lang.String,java.lang.String,boolean,boolean,int,int,java.lang.String).javax.management.relation.InvalidRoleInfoException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "GT-1"
            ],
            [
                38,
                56,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120289,
        "text": "if the writer supports empty image insertion in general, but imageIndex is less than -1 or greater than the largest available index.",
        "meta": {
            "doc_index": 277451,
            "doc_name": "javax.imageio.ImageWriter.canInsertEmpty(int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                61,
                71,
                "LT-1"
            ],
            [
                85,
                87,
                "LT-2"
            ],
            [
                104,
                131,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120290,
        "text": "if destinationOffset is null.",
        "meta": {
            "doc_index": 277186,
            "doc_name": "javax.imageio.IIOParam.setDestinationOffset(java.awt.Point).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120291,
        "text": "Wraps a java.lang.IllegalArgumentException: the className passed in parameter is null.",
        "meta": {
            "doc_index": 272737,
            "doc_name": "com.sun.jmx.mbeanserver.MBeanInstantiator.instantiate(java.lang.String).RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                57,
                "EQ-1"
            ],
            [
                81,
                85,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120292,
        "text": "The specified value is negative or larger than Long.MAX_VALUE.",
        "meta": {
            "doc_index": 273025,
            "doc_name": "com.sun.jmx.snmp.SnmpCounter64.SnmpCounter64(long).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Negative"
            ],
            [
                47,
                61,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120293,
        "text": "if formatName is null.",
        "meta": {
            "doc_index": 277196,
            "doc_name": "javax.imageio.ImageIO.getImageReadersByFormatName(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120294,
        "text": "BAD_BOUNDARYPOINTS_ERR: Raised if the Range partially selects a non-text node.",
        "meta": {
            "doc_index": 281096,
            "doc_name": "org.w3c.dom.ranges.Range.surroundContents(org.w3c.dom.Node).org.w3c.dom.ranges.RangeException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Thrown"
            ]
        ]
    },
    {
        "id": 120295,
        "text": "if any parameter is null.",
        "meta": {
            "doc_index": 277204,
            "doc_name": "javax.imageio.ImageIO.getImageWriters(javax.imageio.ImageTypeSpecifier,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120296,
        "text": "if stream is null.",
        "meta": {
            "doc_index": 277212,
            "doc_name": "javax.imageio.ImageIO.read(javax.imageio.stream.ImageInputStream).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120300,
        "text": "if input is null.",
        "meta": {
            "doc_index": 277191,
            "doc_name": "javax.imageio.ImageIO.createImageInputStream(java.lang.Object).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120302,
        "text": "if bound is a negative value",
        "meta": {
            "doc_index": 279896,
            "doc_name": "org.omg.CORBA.ORB.create_wstring_tc(int).BAD_PARAM",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "Negative"
            ]
        ]
    },
    {
        "id": 120307,
        "text": "INDEX_SIZE_ERR: if index is greater than or equal to the number of objects in the list.",
        "meta": {
            "doc_index": 273231,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.dv.util.ByteListImpl.item(int).com.sun.org.apache.xerces.internal.xs.XSException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                19,
                24,
                "GE-1"
            ],
            [
                53,
                86,
                "GE-2"
            ]
        ]
    },
    {
        "id": 120309,
        "text": "if inLocale is null",
        "meta": {
            "doc_index": 276967,
            "doc_name": "java.util.Locale.getDisplayLanguage(java.util.Locale).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120310,
        "text": "if the category is null.",
        "meta": {
            "doc_index": 278810,
            "doc_name": "javax.print.PrintService.getAttribute(java.lang.Class<T>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120312,
        "text": "INDEX_SIZE_ERR: Raised if the specified offset is negative or greater than the number of 16-bit units in data, or if the specified count is negative.",
        "meta": {
            "doc_index": 280853,
            "doc_name": "org.w3c.dom.CharacterData.substringData(int,int).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                26,
                46,
                "Negative"
            ],
            [
                75,
                109,
                "GT-2"
            ],
            [
                117,
                136,
                "Negative"
            ]
        ]
    },
    {
        "id": 120314,
        "text": "if the given pattern or formatSymbols is null",
        "meta": {
            "doc_index": 276844,
            "doc_name": "java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.text.DateFormatSymbols).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                37,
                "EQ-1"
            ],
            [
                41,
                45,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120315,
        "text": "(Unchecked exception) Thrown if x < 0 or y < 0 or units < 1.",
        "meta": {
            "doc_index": 278710,
            "doc_name": "javax.print.attribute.Size2DSyntax.Size2DSyntax(float,float,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                33,
                "LT-1"
            ],
            [
                36,
                37,
                "LT-2"
            ],
            [
                41,
                42,
                "LT-1"
            ],
            [
                45,
                46,
                "LT-2"
            ],
            [
                50,
                55,
                "LT-1"
            ],
            [
                58,
                59,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120316,
        "text": "if newChild is null or is an ancestor of this node",
        "meta": {
            "doc_index": 279680,
            "doc_name": "javax.swing.tree.DefaultMutableTreeNode.insert(javax.swing.tree.MutableTreeNode,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120323,
        "text": "if this object represents a null value type",
        "meta": {
            "doc_index": 280106,
            "doc_name": "org.omg.DynamicAny.DynValueOperations.get_members().org.omg.DynamicAny.DynAnyPackage.InvalidValue",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                26,
                43,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120324,
        "text": "Wraps an IllegalArgumentException if the MBeanInfo passed in parameter is null.",
        "meta": {
            "doc_index": 278012,
            "doc_name": "javax.management.modelmbean.ModelMBean.setModelMBeanInfo(javax.management.modelmbean.ModelMBeanInfo).javax.management.RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                50,
                "EQ-1"
            ],
            [
                74,
                78,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120326,
        "text": "if this object is already forwarding to an MBeanServer object or if mbs is null or if mbs is identical to this object.",
        "meta": {
            "doc_index": 278465,
            "doc_name": "javax.management.remote.MBeanServerForwarder.setMBeanServer(javax.management.MBeanServer).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                68,
                71,
                "EQ-1"
            ],
            [
                75,
                79,
                "EQ-2"
            ],
            [
                86,
                89,
                "EQ-1"
            ],
            [
                106,
                117,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120328,
        "text": "if oldContext is null.",
        "meta": {
            "doc_index": 273153,
            "doc_name": "com.sun.jmx.snmp.ThreadContext.restore(com.sun.jmx.snmp.ThreadContext).java.lang.NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120329,
        "text": "if p_fragment is not null and this URI does not conform to the generic URI syntax or if the path is null",
        "meta": {
            "doc_index": 273444,
            "doc_name": "com.sun.org.apache.xerces.internal.util.URI.setFragment(java.lang.String).com.sun.org.apache.xerces.internal.util.URI.MalformedURIException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "NEQ-1"
            ],
            [
                21,
                25,
                "NEQ-2"
            ],
            [
                88,
                96,
                "EQ-1"
            ],
            [
                100,
                104,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120330,
        "text": "thrown if the line is less than zero or greater or equal to the number of lines contained in the document (as reported by getLineCount).",
        "meta": {
            "doc_index": 279380,
            "doc_name": "javax.swing.JTextArea.getLineStartOffset(int).javax.swing.text.BadLocationException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                18,
                "LT-1"
            ],
            [
                32,
                36,
                "LT-2"
            ],
            [
                60,
                105,
                "GE-2"
            ]
        ]
    },
    {
        "id": 120331,
        "text": "if the PrivilegedAction is null.",
        "meta": {
            "doc_index": 278897,
            "doc_name": "javax.security.auth.Subject.doAs(javax.security.auth.Subject,java.security.PrivilegedAction<T>).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120332,
        "text": "if n < 0",
        "meta": {
            "doc_index": 277144,
            "doc_name": "java.util.zip.InflaterInputStream.skip(long).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "LT-1"
            ],
            [
                7,
                8,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120333,
        "text": "if formatName is null or is not one of the names recognized by the plug-in.",
        "meta": {
            "doc_index": 277483,
            "doc_name": "javax.imageio.metadata.IIOMetadata.getMetadataFormat(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120335,
        "text": "INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of rule than the current one.",
        "meta": {
            "doc_index": 280991,
            "doc_name": "org.w3c.dom.css.CSSRule.setCssText(java.lang.String).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Thrown"
            ]
        ]
    },
    {
        "id": 120336,
        "text": "thrown if the listener is null.",
        "meta": {
            "doc_index": 278098,
            "doc_name": "javax.management.NotificationBroadcasterSupport.addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                22,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120337,
        "text": "if the list parameter is null or if the list parameter contains any non-RoleUnresolved objects.",
        "meta": {
            "doc_index": 278403,
            "doc_name": "javax.management.relation.RoleUnresolvedList.RoleUnresolvedList(java.util.List<javax.management.relation.RoleUnresolved>).java.lang.IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120338,
        "text": "if numComponents is less than 1.",
        "meta": {
            "doc_index": 272623,
            "doc_name": "com.sun.imageio.plugins.common.BogusColorSpace.BogusColorSpace(int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "LT-1"
            ],
            [
                30,
                31,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120340,
        "text": "if the specified Calendar is null.",
        "meta": {
            "doc_index": 276894,
            "doc_name": "java.util.Calendar.compareTo(java.util.Calendar).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120342,
        "text": "if providerClass is null.",
        "meta": {
            "doc_index": 277575,
            "doc_name": "javax.imageio.spi.ServiceRegistry.lookupProviders(java.lang.Class<T>,java.lang.ClassLoader).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120343,
        "text": "if contents is null",
        "meta": {
            "doc_index": 279420,
            "doc_name": "javax.swing.Popup.Popup(java.awt.Component,java.awt.Component,int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120344,
        "text": "if the specified provider is null or empty, or if the specified parameters are not understood by the ConfigurationSpi implementation from the specified provider.",
        "meta": {
            "doc_index": 278863,
            "doc_name": "javax.security.auth.login.Configuration.getInstance(java.lang.String,javax.security.auth.login.Configuration.Parameters,java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120346,
        "text": "if obj is null or not a Rdn.",
        "meta": {
            "doc_index": 278617,
            "doc_name": "javax.naming.ldap.Rdn.compareTo(java.lang.Object).ClassCastException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ],
            [
                24,
                27,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 120347,
        "text": "WRONG_DOCUMENT_ERR: Raised when the specified node was created from a different document than this document.",
        "meta": {
            "doc_index": 281011,
            "doc_name": "org.w3c.dom.Document.renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Thrown"
            ]
        ]
    },
    {
        "id": 120348,
        "text": "if client is null.",
        "meta": {
            "doc_index": 278511,
            "doc_name": "javax.management.remote.rmi.RMIServerImpl.clientClosed(javax.management.remote.rmi.RMIConnection).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120351,
        "text": "if factory is null",
        "meta": {
            "doc_index": 279421,
            "doc_name": "javax.swing.PopupFactory.setSharedInstance(javax.swing.PopupFactory).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120352,
        "text": "If off is negative, len is negative, or len is greater than buf.length - off",
        "meta": {
            "doc_index": 277104,
            "doc_name": "java.util.zip.CheckedInputStream.read(byte[],int,int).IndexOutOfBoundsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                20,
                23,
                "Negative"
            ],
            [
                40,
                43,
                "GT-1"
            ],
            [
                60,
                76,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120355,
        "text": "if fileSuffix is null.",
        "meta": {
            "doc_index": 277197,
            "doc_name": "javax.imageio.ImageIO.getImageReadersBySuffix(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120356,
        "text": "Wraps an IllegalArgumentException: The Notification text string passed in parameter is null.",
        "meta": {
            "doc_index": 278032,
            "doc_name": "javax.management.modelmbean.ModelMBeanNotificationBroadcaster.sendNotification(java.lang.String).javax.management.RuntimeOperationsException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                63,
                "EQ-1"
            ],
            [
                87,
                91,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120357,
        "text": "INDEX_SIZE_ERR: Raised if the specified index is greater than the number of cells or if the index is negative.",
        "meta": {
            "doc_index": 281035,
            "doc_name": "org.w3c.dom.html.HTMLTableRowElement.insertCell(int).org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                26,
                45,
                "GT-1"
            ],
            [
                62,
                81,
                "GT-2"
            ],
            [
                88,
                97,
                "Negative"
            ]
        ]
    },
    {
        "id": 120360,
        "text": "A ServiceNotFoundException if a setMethod field is defined in the descriptor for the attribute and the managed resource is null; or if no setMethod field is defined and caching is not enabled for the attribute.",
        "meta": {
            "doc_index": 278068,
            "doc_name": "javax.management.modelmbean.RequiredModelMBean.setAttribute(javax.management.Attribute).javax.management.MBeanException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                2,
                26,
                "Thrown"
            ],
            [
                99,
                119,
                "EQ-1"
            ],
            [
                123,
                127,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120361,
        "text": "if the entry name is longer than 0xFFFF bytes.",
        "meta": {
            "doc_index": 276937,
            "doc_name": "java.util.jar.JarEntry.JarEntry(java.lang.String).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "GT-1"
            ],
            [
                33,
                45,
                "GT-2"
            ]
        ]
    },
    {
        "id": 120362,
        "text": "If there is no element greater than value.",
        "meta": {
            "doc_index": 272841,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpMibNode.getNextIdentifier(int[],long).com.sun.jmx.snmp.SnmpStatusException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                22,
                "LE-1"
            ],
            [
                36,
                41,
                "LE-2"
            ]
        ]
    },
    {
        "id": 120363,
        "text": "(unchecked exception) if attrval is null.",
        "meta": {
            "doc_index": 278819,
            "doc_name": "javax.print.PrintService.isAttributeValueSupported(javax.print.attribute.Attribute,javax.print.DocFlavor,javax.print.attribute.AttributeSet).NullPointerException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                32,
                "EQ-1"
            ],
            [
                36,
                40,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120365,
        "text": "if the caller-specified name does not appear in the Configuration and there is no Configuration entry for \"other\", if the caller-specified subject is null, or if the auth.login.defaultCallbackHandler security property was set, but the implementation class could not be loaded.",
        "meta": {
            "doc_index": 278874,
            "doc_name": "javax.security.auth.login.LoginContext.LoginContext(java.lang.String,javax.security.auth.Subject).javax.security.auth.login.LoginException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                118,
                146,
                "EQ-1"
            ],
            [
                150,
                154,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 120369,
        "text": "(Unchecked exception) Thrown if a null range is specified or if a non-null range is specified with lowerBound less than 0.",
        "meta": {
            "doc_index": 278728,
            "doc_name": "javax.print.attribute.standard.JobImpressionsSupported.JobImpressionsSupported(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                38,
                "EQ-1"
            ],
            [
                39,
                44,
                "EQ-2"
            ],
            [
                99,
                109,
                "LT-1"
            ],
            [
                120,
                121,
                "LT-2"
            ],
            [
                75,
                80,
                "NotNull"
            ]
        ]
    },
    {
        "id": 120780,
        "text": "(unchecked exception) Thrown if units < 1.",
        "meta": {
            "doc_index": 278712,
            "doc_name": "javax.print.attribute.Size2DSyntax.convertFromMicrometers(int,int).IllegalArgumentException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                37,
                "LT-1"
            ],
            [
                40,
                41,
                "LT-2"
            ]
        ]
    },
    {
        "id": 120957,
        "text": "NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of the Range is read-only or any of the nodes which contain any of the content of the Range are read-only.",
        "meta": {
            "doc_index": 281091,
            "doc_name": "org.w3c.dom.ranges.Range.extractContents().org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Thrown"
            ]
        ]
    },
    {
        "id": 121035,
        "text": "NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of the Range is read-only or any of the nodes that contain any of the content of the Range are read-only.",
        "meta": {
            "doc_index": 281090,
            "doc_name": "org.w3c.dom.ranges.Range.deleteContents().org.w3c.dom.DOMException",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Thrown"
            ]
        ]
    },
    {
        "id": 122242,
        "text": "This may be null with the same effect as a zero-length array.",
        "meta": {
            "doc_index": 256736,
            "doc_name": "javax.management.MBeanConstructorInfo.MBeanConstructorInfo(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[],javax.management.Descriptor).<P>signature",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "CanEQ-1"
            ],
            [
                12,
                16,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 122243,
        "text": "The position within the file at which the transfer is to begin; must be non-negative",
        "meta": {
            "doc_index": 245534,
            "doc_name": "java.nio.channels.FileChannel.transferTo(long,long,java.nio.channels.WritableByteChannel).<P>position",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122247,
        "text": "the X and Y of the large cursor's hot spot; the hotSpot values must be less than the Dimension returned by getBestCursorSize",
        "meta": {
            "doc_index": 241712,
            "doc_name": "java.awt.Toolkit.createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String).<P>hotSpot",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                62,
                "LT-1"
            ],
            [
                81,
                124,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122249,
        "text": "the new SortKeys; null is a shorthand for specifying an empty list, indicating that the view should be unsorted",
        "meta": {
            "doc_index": 260980,
            "doc_name": "javax.swing.DefaultRowSorter.setSortKeys(java.util.List<? extends javax.swing.RowSorter.SortKey>).<P>sortKeys",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122251,
        "text": "the amount of the specified unit to add, may be negative",
        "meta": {
            "doc_index": 250269,
            "doc_name": "java.time.temporal.Temporal.plus(long,java.time.temporal.TemporalUnit).<P>amountToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122252,
        "text": "the starting position >= 0, < length()",
        "meta": {
            "doc_index": 267073,
            "doc_name": "javax.swing.text.GapContent.insertString(int,java.lang.String).<P>where",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                25,
                26,
                "GE-2"
            ],
            [
                30,
                38,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122253,
        "text": "Should be in scene coordinates if source == null or source is not a Node.",
        "meta": {
            "doc_index": 222761,
            "doc_name": "javafx.scene.input.MouseEvent.MouseEvent(java.lang.Object,javafx.event.EventTarget,javafx.event.EventType<? extends javafx.scene.input.MouseEvent>,double,double,double,double,javafx.scene.input.MouseButton,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,javafx.scene.input.PickResult).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                40,
                "EQ-1"
            ],
            [
                44,
                48,
                "EQ-2"
            ],
            [
                52,
                58,
                "NotType-1"
            ],
            [
                68,
                72,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 122256,
        "text": "the number of seconds, positive or negative",
        "meta": {
            "doc_index": 249447,
            "doc_name": "java.time.Duration.ofSeconds(long,long).<P>seconds",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122257,
        "text": "The offset of the subarray to be used; must be non-negative and no larger than array.length.",
        "meta": {
            "doc_index": 245624,
            "doc_name": "java.nio.CharBuffer.wrap(char[],int,int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                37,
                "Nonnegative"
            ],
            [
                79,
                91,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122259,
        "text": "An absolute, hierarchical URI with a scheme equal to \"file\", a non-empty path component, and undefined authority, query, and fragment components",
        "meta": {
            "doc_index": 242381,
            "doc_name": "java.io.File.File(java.net.URI).<P>uri",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                43,
                "EQ-1"
            ],
            [
                53,
                59,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122260,
        "text": "The location in the document to fetch the content from >=0.",
        "meta": {
            "doc_index": 266818,
            "doc_name": "javax.swing.text.DefaultEditorKit.write(java.io.Writer,javax.swing.text.Document,int,int).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                54,
                "GE-1"
            ],
            [
                57,
                58,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122263,
        "text": "milliseconds since January 1, 1970, 00:00:00 GMT; a negative number is milliseconds before January 1, 1970, 00:00:00 GMT",
        "meta": {
            "doc_index": 248595,
            "doc_name": "java.sql.Time.Time(long).<P>time",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                61,
                67,
                "Negative"
            ]
        ]
    },
    {
        "id": 122269,
        "text": "If the value of this parameter is less than the actual digest length, the method will throw a DigestException.",
        "meta": {
            "doc_index": 247090,
            "doc_name": "java.security.MessageDigestSpi.engineDigest(byte[],int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                30,
                "LT-1"
            ],
            [
                44,
                68,
                "LT-2"
            ],
            [
                70,
                80,
                "Throws-1"
            ],
            [
                94,
                109,
                "Throws-2"
            ]
        ]
    },
    {
        "id": 122270,
        "text": "a positive number such that b.bitLength() is even",
        "meta": {
            "doc_index": 244789,
            "doc_name": "java.math.MutableBigInteger.divide2n1n(java.math.MutableBigInteger,java.math.MutableBigInteger).<P>b",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                17,
                "Positive"
            ]
        ]
    },
    {
        "id": 122271,
        "text": "These items must be of the same type as the TreeTableColumn.",
        "meta": {
            "doc_index": 221722,
            "doc_name": "javafx.scene.control.cell.ChoiceBoxTreeTableCell.forTreeTableColumn(javafx.collections.ObservableList<T>).<P>items",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Type-1"
            ],
            [
                44,
                59,
                "Type-2"
            ]
        ]
    },
    {
        "id": 122272,
        "text": "The file position at which the transfer is to begin; must be non-negative",
        "meta": {
            "doc_index": 245541,
            "doc_name": "java.nio.channels.FileChannel.read(java.nio.ByteBuffer,long).<P>position",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122273,
        "text": "The maximum number of doubles to be written to the given array; must be non-negative and no larger than dst.length - offset",
        "meta": {
            "doc_index": 245731,
            "doc_name": "java.nio.DoubleBuffer.get(double[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                62,
                "Nonnegative"
            ],
            [
                104,
                123,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122275,
        "text": "Name of the factory to find, same as a property name",
        "meta": {
            "doc_index": 269926,
            "doc_name": "javax.xml.stream.FactoryFinder.find(java.lang.Class<T>,java.lang.String,java.lang.ClassLoader,java.lang.String).<P>factoryId",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "EQ-1"
            ],
            [
                37,
                52,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122276,
        "text": "the starting position >= 0 && < length()",
        "meta": {
            "doc_index": 268084,
            "doc_name": "javax.swing.text.StringContent.insertString(int,java.lang.String).<P>where",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                25,
                26,
                "GE-2"
            ],
            [
                32,
                40,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122278,
        "text": "A ContentHandler or a null value.",
        "meta": {
            "doc_index": 270303,
            "doc_name": "javax.xml.validation.ValidatorHandler.setContentHandler(org.xml.sax.ContentHandler).<P>receiver",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                32,
                "EQ-2"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122282,
        "text": "maximum degree for role, i.e. maximum number of MBeans to provide in corresponding role Must be greater than or equal to min (ROLE_CARDINALITY_INFINITY for unlimited)",
        "meta": {
            "doc_index": 257585,
            "doc_name": "javax.management.relation.RoleInfo.RoleInfo(java.lang.String,java.lang.String,boolean,boolean,int,int,java.lang.String).<P>max",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                121,
                125,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122283,
        "text": "the green component, in the range 0.0-1.0",
        "meta": {
            "doc_index": 223586,
            "doc_name": "javafx.scene.paint.Color.color(double,double,double,double).<P>green",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                34,
                37,
                "GE-2"
            ],
            [
                38,
                41,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122284,
        "text": "The number of items in the sequence to remove >= 0.",
        "meta": {
            "doc_index": 266465,
            "doc_name": "javax.swing.text.AbstractDocument.Content.remove(int,int).<P>nitems",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                45,
                "GE-1"
            ],
            [
                49,
                50,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122285,
        "text": "a boolean array in the same format as the boolean array returned by X509Certificate.getKeyUsage().",
        "meta": {
            "doc_index": 246784,
            "doc_name": "java.security.cert.X509CertSelector.setKeyUsage(boolean[]).<P>keyUsage",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                38,
                55,
                "ReturnsBy-1"
            ],
            [
                68,
                97,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 122287,
        "text": "where to start in the model >= 0",
        "meta": {
            "doc_index": 267950,
            "doc_name": "javax.swing.text.ParagraphView.findOffsetToCharactersInString(char[],int).<P>start",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                27,
                "GE-1"
            ],
            [
                31,
                32,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122289,
        "text": "an integer greater than 0",
        "meta": {
            "doc_index": 240851,
            "doc_name": "java.awt.JobAttributes.setCopies(int).<P>copies",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GT-1"
            ],
            [
                24,
                25,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122290,
        "text": "the value to multiply the duration by, positive or negative",
        "meta": {
            "doc_index": 249482,
            "doc_name": "java.time.Duration.multipliedBy(long).<P>multiplicand",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                34,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122292,
        "text": "true if this number should be regarded as positive",
        "meta": {
            "doc_index": 248867,
            "doc_name": "java.text.DigitList.fitsIntoLong(boolean,boolean).<P>isPositive",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 122293,
        "text": "The miterlimit must be greater than or equal to 1.0f.",
        "meta": {
            "doc_index": 236760,
            "doc_name": "java.awt.BasicStroke.BasicStroke(float,int,int,float,float[],float).<P>miterlimit",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "GE-1"
            ],
            [
                48,
                52,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122294,
        "text": "starting offset of the text in the document >= 0",
        "meta": {
            "doc_index": 268349,
            "doc_name": "javax.swing.text.Utilities.getTabbedTextWidth(javax.swing.text.Segment,java.awt.FontMetrics,int,javax.swing.text.TabExpander,int).<P>startOffset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                43,
                "GE-1"
            ],
            [
                47,
                48,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122295,
        "text": "Offset into the sequence to fetch >= 0.",
        "meta": {
            "doc_index": 266466,
            "doc_name": "javax.swing.text.AbstractDocument.Content.getString(int,int).<P>where",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                6,
                "GE-1"
            ],
            [
                37,
                38,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122297,
        "text": "the starting position >= 0",
        "meta": {
            "doc_index": 268086,
            "doc_name": "javax.swing.text.StringContent.remove(int,int).<P>where",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                25,
                26,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122298,
        "text": "This can be a fractional value, but must not be negative.",
        "meta": {
            "doc_index": 223868,
            "doc_name": "javafx.scene.text.Font.font(java.lang.String,javafx.scene.text.FontPosture,double).<P>size",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                12,
                30,
                "CanEQ-2"
            ],
            [
                0,
                4,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122299,
        "text": "The offset within the string of the first char to be read; must be non-negative and no larger than string.length()",
        "meta": {
            "doc_index": 245646,
            "doc_name": "java.nio.CharBuffer.put(java.lang.String,int,int).<P>start",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                46,
                "Nonnegative"
            ],
            [
                99,
                114,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122301,
        "text": "an array of shorts where lengths[k] is equal to the number of values with corresponding codes of length k + 1 bits.",
        "meta": {
            "doc_index": 255980,
            "doc_name": "javax.imageio.plugins.jpeg.JPEGHuffmanTable.JPEGHuffmanTable(short[],short[]).<P>lengths",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                35,
                "EQ-1"
            ],
            [
                48,
                114,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122302,
        "text": "The number of shorts to be read from the given array; must be non-negative and no larger than array.length - offset",
        "meta": {
            "doc_index": 246163,
            "doc_name": "java.nio.ShortBuffer.put(short[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "Nonnegative"
            ],
            [
                94,
                115,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122303,
        "text": "the delay in milliseconds >=0.",
        "meta": {
            "doc_index": 266674,
            "doc_name": "javax.swing.text.Caret.setBlinkRate(int).<P>rate",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "GE-1"
            ],
            [
                28,
                29,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122304,
        "text": "the days to subtract, positive or negative",
        "meta": {
            "doc_index": 249476,
            "doc_name": "java.time.Duration.minusDays(long).<P>daysToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122307,
        "text": "the position at which to insert >= 0",
        "meta": {
            "doc_index": 262713,
            "doc_name": "javax.swing.JTextArea.insert(java.lang.String,int).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "GE-1"
            ],
            [
                35,
                36,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122308,
        "text": "specifies the distance into the view where a potential break is desired >= 0",
        "meta": {
            "doc_index": 267104,
            "doc_name": "javax.swing.text.GlyphPainter1.getBoundedPosition(javax.swing.text.GlyphView,int,float,float).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                36,
                "GE-1"
            ],
            [
                75,
                76,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122309,
        "text": "the radius of the arc in the range {0.0-positive infinity}.",
        "meta": {
            "doc_index": 221334,
            "doc_name": "javafx.scene.canvas.GraphicsContext.arcTo(double,double,double,double,double).<P>radius",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GT-1"
            ],
            [
                36,
                39,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122310,
        "text": "specifies the distance along the axis where a potential break is desired >= 0",
        "meta": {
            "doc_index": 268440,
            "doc_name": "javax.swing.text.View.breakView(int,int,float,float).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                37,
                "GE-1"
            ],
            [
                76,
                77,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122311,
        "text": "the ending document location to use >= p1",
        "meta": {
            "doc_index": 268477,
            "doc_name": "javax.swing.text.WrappedPlainView.drawLine(int,int,java.awt.Graphics,int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "GE-1"
            ],
            [
                39,
                41,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122313,
        "text": "Y coordinate of second control point, in range [0,1]",
        "meta": {
            "doc_index": 218819,
            "doc_name": "com.sun.scenario.animation.SplineInterpolator.SplineInterpolator(double,double,double,double).<P>py2",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                36,
                "GE-1"
            ],
            [
                48,
                49,
                "GE-2"
            ],
            [
                50,
                51,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122314,
        "text": "The expression may contain variables of the form \"{i}\" where i is a nonnegative integer.",
        "meta": {
            "doc_index": 258113,
            "doc_name": "javax.naming.directory.DirContext.search(javax.naming.Name,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls).<P>filterExpr",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                61,
                62,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122316,
        "text": "the end of the range >= p0",
        "meta": {
            "doc_index": 266864,
            "doc_name": "javax.swing.text.DefaultHighlighter.changeHighlight(java.lang.Object,int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "GE-1"
            ],
            [
                24,
                26,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122317,
        "text": "This is the number of bytes the driver will send to the DBMS; lengths of 0 or less are are undefined but will cause an invalid length exception to be thrown in the underlying JDBC driver.",
        "meta": {
            "doc_index": 259756,
            "doc_name": "javax.sql.rowset.BaseRowSet.setAsciiStream(int,java.io.InputStream,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "EQ-1"
            ],
            [
                8,
                60,
                "EQ-2"
            ],
            [
                62,
                69,
                "LE-1"
            ],
            [
                73,
                74,
                "LE-2"
            ],
            [
                119,
                143,
                "Thrown"
            ]
        ]
    },
    {
        "id": 122319,
        "text": "X coordinate of first control point, in range [0,1]",
        "meta": {
            "doc_index": 218816,
            "doc_name": "com.sun.scenario.animation.SplineInterpolator.SplineInterpolator(double,double,double,double).<P>px1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "GE-1"
            ],
            [
                47,
                48,
                "GE-2"
            ],
            [
                49,
                50,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122320,
        "text": "The index of the character following the last character to be used; must be no smaller than start and no larger than csq.length().",
        "meta": {
            "doc_index": 245630,
            "doc_name": "java.nio.CharBuffer.wrap(java.lang.CharSequence,int,int).<P>end",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                55,
                "GE-1"
            ],
            [
                92,
                97,
                "GE-2"
            ],
            [
                117,
                129,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122322,
        "text": "the child index, >= 0 && < getElementCount()",
        "meta": {
            "doc_index": 266508,
            "doc_name": "javax.swing.text.AbstractDocument.LeafElement.getElement(int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "GE-1"
            ],
            [
                20,
                21,
                "GE-2"
            ],
            [
                27,
                44,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122324,
        "text": "the offset into the paragraph >= 0",
        "meta": {
            "doc_index": 266910,
            "doc_name": "javax.swing.text.DefaultStyledDocument.setParagraphAttributes(int,int,javax.swing.text.AttributeSet,boolean).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                29,
                "GE-1"
            ],
            [
                33,
                34,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122326,
        "text": "The offset within the buffer array of the first buffer from which bytes are to be retrieved; must be non-negative and no larger than srcs.length",
        "meta": {
            "doc_index": 245494,
            "doc_name": "java.nio.channels.AsynchronousSocketChannel.write(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler<java.lang.Long,? super A>).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                54,
                "Nonnegative"
            ],
            [
                133,
                144,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122328,
        "text": "the minutes to subtract, positive or negative",
        "meta": {
            "doc_index": 249478,
            "doc_name": "java.time.Duration.minusMinutes(long).<P>minutesToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122330,
        "text": "The number of floats to be read from the given array; must be non-negative and no larger than array.length - offset",
        "meta": {
            "doc_index": 246106,
            "doc_name": "java.nio.FloatBuffer.put(float[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "Nonnegative"
            ],
            [
                94,
                115,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122332,
        "text": "the number of weeks, positive or negative",
        "meta": {
            "doc_index": 250229,
            "doc_name": "java.time.Period.ofWeeks(int).<P>weeks",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122333,
        "text": "If top==DTM.NULL, run through end of document.",
        "meta": {
            "doc_index": 232169,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.DTMTreeWalker.traverse(int,int).<P>top",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                8,
                16,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122334,
        "text": "If location is not the same object as point, location will remain unmodified by this call.",
        "meta": {
            "doc_index": 237860,
            "doc_name": "java.awt.font.LayoutPath.pathToPoint(java.awt.geom.Point2D,boolean,java.awt.geom.Point2D).<P>location",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "NEQ-1"
            ],
            [
                38,
                43,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 122336,
        "text": "the dimension of arrays described by this ArrayType instance; must be greater than or equal to 1.",
        "meta": {
            "doc_index": 257172,
            "doc_name": "javax.management.openmbean.ArrayType.ArrayType(int,javax.management.openmbean.OpenType<?>).<P>dimension",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                95,
                96,
                "GE-2"
            ],
            [
                0,
                23,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122338,
        "text": "This should be > getStartOffset() and <= getEndOffset(). This value should also be > p0.",
        "meta": {
            "doc_index": 268526,
            "doc_name": "javax.swing.text.ZoneView.createZone(int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "GT-1"
            ],
            [
                17,
                33,
                "GT-2"
            ],
            [
                41,
                55,
                "LE-2"
            ],
            [
                57,
                67,
                "GT-1"
            ],
            [
                85,
                87,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122339,
        "text": "the red component, in the range 0.0-1.0",
        "meta": {
            "doc_index": 223589,
            "doc_name": "javafx.scene.paint.Color.color(double,double,double).<P>red",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                32,
                35,
                "GE-2"
            ],
            [
                36,
                39,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122345,
        "text": "The initial replacement; must not be null, must have non-zero length, must not be longer than maxCharsPerByte, and must be {@linkplain #isLegalReplacement legal}",
        "meta": {
            "doc_index": 245670,
            "doc_name": "java.nio.charset.CharsetDecoder.CharsetDecoder(java.nio.charset.Charset,float,float,java.lang.String).<P>replacement",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "NEQ-1"
            ],
            [
                37,
                41,
                "NEQ-2"
            ],
            [
                62,
                68,
                "Positive"
            ],
            [
                94,
                109,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122346,
        "text": "This should be a value >= 0 and <= getViewCount",
        "meta": {
            "doc_index": 268408,
            "doc_name": "javax.swing.text.View.replace(int,int,javax.swing.text.View[]).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "GE-1"
            ],
            [
                26,
                27,
                "GE-2"
            ],
            [
                35,
                47,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122347,
        "text": "The size of the locked region; must be non-negative, and the sum position + size must be non-negative",
        "meta": {
            "doc_index": 245555,
            "doc_name": "java.nio.channels.FileLock.FileLock(java.nio.channels.FileChannel,long,long,boolean).<P>size",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                29,
                "Nonnegative"
            ],
            [
                57,
                80,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122350,
        "text": "the index of the child, >= 0 && < getViewCount()",
        "meta": {
            "doc_index": 267070,
            "doc_name": "javax.swing.text.FlowView.LogicalView.childAllocation(int,java.awt.Rectangle).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ],
            [
                34,
                48,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122355,
        "text": "the number of characters >= 0",
        "meta": {
            "doc_index": 266469,
            "doc_name": "javax.swing.text.AbstractDocument.Content.getChars(int,int,javax.swing.text.Segment).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "GE-1"
            ],
            [
                28,
                29,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122356,
        "text": "the number of minutes, positive or negative",
        "meta": {
            "doc_index": 249445,
            "doc_name": "java.time.Duration.ofMinutes(long).<P>minutes",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122357,
        "text": "The index of the character to be read, relative to the position; must be non-negative and smaller than remaining()",
        "meta": {
            "doc_index": 245650,
            "doc_name": "java.nio.CharBuffer.charAt(int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                37,
                "Nonnegative"
            ],
            [
                103,
                114,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122362,
        "text": "the days to add, may be negative",
        "meta": {
            "doc_index": 249935,
            "doc_name": "java.time.LocalDateTime.plusDays(long).<P>days",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122363,
        "text": "The offset within the array of the first short to be read; must be non-negative and no larger than array.length",
        "meta": {
            "doc_index": 246162,
            "doc_name": "java.nio.ShortBuffer.put(short[],int,int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                57,
                "Nonnegative"
            ],
            [
                99,
                111,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122365,
        "text": "the position along the axis that the broken view would occupy >= 0.",
        "meta": {
            "doc_index": 267534,
            "doc_name": "javax.swing.text.html.InlineView.breakView(int,int,float,float).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "GE-1"
            ],
            [
                65,
                66,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122366,
        "text": "If the context node is a Text or a CDATASection, then the context is interpreted as the whole logical text node as seen by XPath, unless the node is empty in which case it may not serve as the XPath context.",
        "meta": {
            "doc_index": 235715,
            "doc_name": "com.sun.org.apache.xpath.internal.domapi.XPathEvaluatorImpl.evaluate(java.lang.String,org.w3c.dom.Node,org.w3c.dom.xpath.XPathNSResolver,short,java.lang.Object).<P>contextNode",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "Type-1"
            ],
            [
                25,
                29,
                "Type-2"
            ],
            [
                35,
                47,
                "Type-2"
            ]
        ]
    },
    {
        "id": 122367,
        "text": "the weeks to add, may be negative",
        "meta": {
            "doc_index": 249109,
            "doc_name": "java.time.chrono.ChronoLocalDateImpl.plusWeeks(long).<P>weeksToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122369,
        "text": "miter limit value between 0 and positive infinity with any other value being ignored and leaving the value unchanged.",
        "meta": {
            "doc_index": 221294,
            "doc_name": "javafx.scene.canvas.GraphicsContext.setMiterLimit(double).<P>ml",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                27,
                "GE-2"
            ],
            [
                0,
                17,
                "GE-1"
            ],
            [
                32,
                49,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122370,
        "text": "End of the field, will be >= start and <= buffer.length()",
        "meta": {
            "doc_index": 248920,
            "doc_name": "java.text.Format.FieldDelegate.formatted(java.text.Format.Field,java.lang.Object,int,int,java.lang.StringBuffer).<P>end",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                29,
                34,
                "GE-2"
            ],
            [
                42,
                57,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122371,
        "text": "If l<0 or l>=getLength(), this operation will not report an error but future operations will almost certainly fail.",
        "meta": {
            "doc_index": 234749,
            "doc_name": "com.sun.org.apache.xml.internal.utils.FastStringBuffer.setLength(int).<P>l",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                4,
                "LT-1"
            ],
            [
                5,
                6,
                "LT-2"
            ],
            [
                10,
                11,
                "GE-1"
            ],
            [
                13,
                24,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122372,
        "text": "the position in the document >= 0",
        "meta": {
            "doc_index": 266915,
            "doc_name": "javax.swing.text.DefaultStyledDocument.getCharacterElement(int).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "GE-1"
            ],
            [
                32,
                33,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122374,
        "text": "The size of the array equals the number of bands and should be considered to be read-only.",
        "meta": {
            "doc_index": 223429,
            "doc_name": "javafx.scene.media.AudioSpectrumListener.spectrumDataUpdate(double,double,float[],float[]).<P>phases",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "EQ-1"
            ],
            [
                29,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122376,
        "text": "value for the specified key, from 0 to 127 (127 = maximum pressure)",
        "meta": {
            "doc_index": 259251,
            "doc_name": "javax.sound.midi.MidiChannel.setPolyPressure(int,int).<P>pressure",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "GE-1"
            ],
            [
                34,
                35,
                "GE-2"
            ],
            [
                39,
                42,
                "LE-2"
            ],
            [
                44,
                47,
                "EQ-1"
            ],
            [
                50,
                66,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122379,
        "text": "the maximum size; one of DEFAULT_SIZE, PREFERRED_SIZE or a value >= 0",
        "meta": {
            "doc_index": 261218,
            "doc_name": "javax.swing.GroupLayout.SequentialGroup.addContainerGap(int,int).<P>max",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "EQ-1"
            ],
            [
                25,
                53,
                "EQ-2"
            ],
            [
                68,
                69,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122380,
        "text": "A value of zero indicates that the cursor will be positioned before the first row; a positive number indicates the row number counting from the beginning of the result set; a negative number indicates the row number counting from the end of the result set",
        "meta": {
            "doc_index": 248005,
            "doc_name": "java.sql.ResultSet.absolute(int).<P>row",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ],
            [
                94,
                100,
                "Positive"
            ],
            [
                184,
                190,
                "Negative"
            ]
        ]
    },
    {
        "id": 122383,
        "text": "the number of columns to use to calculate the preferred width >= 0; if columns is set to zero, the preferred width will be whatever naturally results from the component implementation",
        "meta": {
            "doc_index": 262730,
            "doc_name": "javax.swing.JTextField.JTextField(javax.swing.text.Document,java.lang.String,int).<P>columns",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                71,
                78,
                "EQ-1"
            ],
            [
                89,
                93,
                "EQ-2"
            ],
            [
                0,
                21,
                "GE-1"
            ],
            [
                65,
                66,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122384,
        "text": "an int in the range -1..N-1, where N is the number of components in the component's current layer",
        "meta": {
            "doc_index": 261789,
            "doc_name": "javax.swing.JLayeredPane.setPosition(java.awt.Component,int).<P>position",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                6,
                "GE-1"
            ],
            [
                20,
                22,
                "GE-2"
            ],
            [
                24,
                27,
                "LE-2"
            ],
            [
                35,
                36,
                "EQ-1"
            ],
            [
                40,
                97,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122385,
        "text": "if true the values will be clamped to the range [1 .. 255]",
        "meta": {
            "doc_index": 224811,
            "doc_name": "com.sun.image.codec.jpeg.JPEGQTable.getScaledInstance(float,boolean).<P>forceBaseline",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                18,
                "GE-1"
            ],
            [
                49,
                50,
                "GE-2"
            ],
            [
                54,
                57,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122387,
        "text": "when populating, the number of rows interval on which the CachedRowSet populated should fire; the default value is zero; cannot be less than fetchSize or zero",
        "meta": {
            "doc_index": 259938,
            "doc_name": "javax.sql.rowset.CachedRowSet.rowSetPopulated(javax.sql.RowSetEvent,int).<P>numRows",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                44,
                "CanEQ-1"
            ],
            [
                115,
                119,
                "CanEQ-2"
            ],
            [
                141,
                150,
                "GE-2"
            ],
            [
                154,
                158,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122388,
        "text": "This cannot be negative.",
        "meta": {
            "doc_index": 223096,
            "doc_name": "javafx.scene.layout.BorderWidths.BorderWidths(double).<P>width",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122389,
        "text": "the position >= 0",
        "meta": {
            "doc_index": 268411,
            "doc_name": "javax.swing.text.View.getViewIndex(int,javax.swing.text.Position.Bias).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "GE-1"
            ],
            [
                16,
                17,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122390,
        "text": "For the first traversal step, context should be set equal to current.",
        "meta": {
            "doc_index": 231511,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser.next(int,int,int).<P>current",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                30,
                37,
                "EQ-1"
            ],
            [
                61,
                68,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122396,
        "text": "an array of int indicating the columns that form a primary key for this CachedRowSet object; every element in the array must be greater than 0 and less than or equal to the number of columns in this rowset",
        "meta": {
            "doc_index": 259934,
            "doc_name": "javax.sql.rowset.CachedRowSet.setKeyColumns(int[]).<P>keys",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                93,
                119,
                "GT-1"
            ],
            [
                141,
                142,
                "GT-2"
            ],
            [
                169,
                205,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122399,
        "text": "If the size is < 0 the default size will be used.",
        "meta": {
            "doc_index": 223868,
            "doc_name": "javafx.scene.text.Font.font(java.lang.String,javafx.scene.text.FontPosture,double).<P>size",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "LT-1"
            ],
            [
                17,
                18,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122402,
        "text": "the X coordinate >= 0",
        "meta": {
            "doc_index": 266721,
            "doc_name": "javax.swing.text.CompositeView.isAfter(int,int,java.awt.Rectangle).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                20,
                21,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122403,
        "text": "an integer greater than zero and less than or equal to toPage and greater than or equal to minPage and less than or equal to maxPage.",
        "meta": {
            "doc_index": 240856,
            "doc_name": "java.awt.JobAttributes.setFromPage(int).<P>fromPage",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GT-1"
            ],
            [
                24,
                28,
                "GT-2"
            ],
            [
                55,
                61,
                "LE-2"
            ],
            [
                91,
                98,
                "GE-2"
            ],
            [
                125,
                132,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122404,
        "text": "the ending location in the text document >= p0",
        "meta": {
            "doc_index": 268277,
            "doc_name": "javax.swing.text.TabableView.getPartialSpan(int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                40,
                "GE-1"
            ],
            [
                44,
                46,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122405,
        "text": "length of second run to be merged (must be > 0)",
        "meta": {
            "doc_index": 251430,
            "doc_name": "java.util.ComparableTimSort.mergeHi(int,int,int,int).<P>len2",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                33,
                "GT-1"
            ],
            [
                45,
                46,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122406,
        "text": "Otherwise, only MBeanServers whose id is equal to agentId are returned.",
        "meta": {
            "doc_index": 256892,
            "doc_name": "javax.management.MBeanServerFactory.findMBeanServer(java.lang.String).<P>agentId",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                28,
                "Returned"
            ],
            [
                35,
                37,
                "EQ-1"
            ],
            [
                50,
                57,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122407,
        "text": "The number of chars to be read from the given array; must be non-negative and no larger than array.length - offset",
        "meta": {
            "doc_index": 245643,
            "doc_name": "java.nio.CharBuffer.put(char[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                51,
                "Nonnegative"
            ],
            [
                93,
                114,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122408,
        "text": "the amount of the unit to subtract from the result, may be negative",
        "meta": {
            "doc_index": 250616,
            "doc_name": "java.time.ZonedDateTime.minus(long,java.time.temporal.TemporalUnit).<P>amountToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                50,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122409,
        "text": "This parameter is ignored if its value is greater than or equal to the actual signature length.",
        "meta": {
            "doc_index": 247240,
            "doc_name": "java.security.SignatureSpi.engineSign(byte[],int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "GE-1"
            ],
            [
                67,
                94,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122410,
        "text": "The new position value; must be non-negative and no larger than the current limit",
        "meta": {
            "doc_index": 245355,
            "doc_name": "java.nio.Buffer.position(int).<P>newPosition",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Nonnegative"
            ],
            [
                64,
                81,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122411,
        "text": "the blue component, in the range 0-255",
        "meta": {
            "doc_index": 223594,
            "doc_name": "javafx.scene.paint.Color.rgb(int,int,int,double).<P>blue",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "GE-1"
            ],
            [
                33,
                34,
                "GE-2"
            ],
            [
                35,
                38,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122413,
        "text": "the right inset >= 0",
        "meta": {
            "doc_index": 266737,
            "doc_name": "javax.swing.text.CompositeView.setInsets(short,short,short,short).<P>right",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "GE-1"
            ],
            [
                19,
                20,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122414,
        "text": "If the number of elements in this array is less than the number of flags used by the Kerberos protocol, then the missing flags will be filled in with false.",
        "meta": {
            "doc_index": 259053,
            "doc_name": "javax.security.auth.kerberos.KerberosTicket.KerberosTicket(byte[],javax.security.auth.kerberos.KerberosPrincipal,javax.security.auth.kerberos.KerberosPrincipal,byte[],int,boolean[],java.util.Date,java.util.Date,java.util.Date,java.util.Date,java.net.InetAddress[]).<P>flags",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                39,
                "LT-1"
            ],
            [
                53,
                72,
                "LT-2"
            ],
            [
                109,
                126,
                "EQ-1"
            ],
            [
                150,
                155,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122417,
        "text": "must be a value less than 255.",
        "meta": {
            "doc_index": 234322,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.ToHTMLStream.makeHHString(int).<P>i",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                15,
                "LT-1"
            ],
            [
                26,
                29,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122418,
        "text": "the years to add, may be negative",
        "meta": {
            "doc_index": 249107,
            "doc_name": "java.time.chrono.ChronoLocalDateImpl.plusYears(long).<P>yearsToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122419,
        "text": "the offset from the beginning >= 0",
        "meta": {
            "doc_index": 266962,
            "doc_name": "javax.swing.text.DocumentFilter.remove(javax.swing.text.DocumentFilter.FilterBypass,int,int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                29,
                "GE-1"
            ],
            [
                33,
                34,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122421,
        "text": "the scope of interest; use same values as SCOPE",
        "meta": {
            "doc_index": 247726,
            "doc_name": "java.sql.DatabaseMetaData.getBestRowIdentifier(java.lang.String,java.lang.String,java.lang.String,int,boolean).<P>scope",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "EQ-1"
            ],
            [
                42,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122422,
        "text": "the offset in the document >= 0",
        "meta": {
            "doc_index": 268379,
            "doc_name": "javax.swing.text.Utilities.getPreviousWord(javax.swing.text.JTextComponent,int).<P>offs",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "GE-1"
            ],
            [
                30,
                31,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122425,
        "text": "the amount to subtract, measured in terms of the unit, positive or negative",
        "meta": {
            "doc_index": 249474,
            "doc_name": "java.time.Duration.minus(long,java.time.temporal.TemporalUnit).<P>amountToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122426,
        "text": "the opacity component, in the range 0.0-1.0",
        "meta": {
            "doc_index": 223595,
            "doc_name": "javafx.scene.paint.Color.rgb(int,int,int,double).<P>opacity",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                36,
                39,
                "GE-2"
            ],
            [
                40,
                43,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122427,
        "text": "the power of ten to be returned (>=0)",
        "meta": {
            "doc_index": 244706,
            "doc_name": "java.math.BigDecimal.bigTenToThe(int).<P>n",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                35,
                36,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122428,
        "text": "specifies the distance into the view where a potential break is desired >= 0.",
        "meta": {
            "doc_index": 267112,
            "doc_name": "javax.swing.text.GlyphPainter2.getBoundedPosition(javax.swing.text.GlyphView,int,float,float).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                36,
                "GE-1"
            ],
            [
                75,
                76,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122430,
        "text": "the width (inside of the insets) >= 0",
        "meta": {
            "doc_index": 266639,
            "doc_name": "javax.swing.text.BoxView.layout(int,int).<P>width",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "GE-1"
            ],
            [
                36,
                37,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122431,
        "text": "the green component, in the range 0-255",
        "meta": {
            "doc_index": 223593,
            "doc_name": "javafx.scene.paint.Color.rgb(int,int,int,double).<P>green",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                34,
                35,
                "GE-2"
            ],
            [
                36,
                39,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122434,
        "text": "the number of existing child views to remove; This should be a value >= 0 and <= (getViewCount() - offset)",
        "meta": {
            "doc_index": 266597,
            "doc_name": "javax.swing.text.BoxView.replace(int,int,javax.swing.text.View[]).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                44,
                "GE-1"
            ],
            [
                72,
                73,
                "GE-2"
            ],
            [
                82,
                105,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122435,
        "text": "the nanoseconds to subtract, positive or negative",
        "meta": {
            "doc_index": 249481,
            "doc_name": "java.time.Duration.minusNanos(long).<P>nanosToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122437,
        "text": "If the returned value is cd, then cd.getCompositeType().equals(ct) should be true.",
        "meta": {
            "doc_index": 257196,
            "doc_name": "javax.management.openmbean.CompositeDataView.toCompositeData(javax.management.openmbean.CompositeType).<P>ct",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                27,
                "EQ-2"
            ],
            [
                34,
                66,
                "EQ-1"
            ],
            [
                77,
                81,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122439,
        "text": "The index that should be made visible to the user, assuming of course that it is greater than, or equal to 0, and less than the size of the items list contained within the given ListView.",
        "meta": {
            "doc_index": 221877,
            "doc_name": "javafx.scene.control.ListView.scrollTo(int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "GE-1"
            ],
            [
                107,
                108,
                "GE-2"
            ],
            [
                124,
                186,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122440,
        "text": "a float array with length equal to the number of HSL components",
        "meta": {
            "doc_index": 260871,
            "doc_name": "javax.swing.colorchooser.ColorModelHSL.HSLtoRGB(float[],float[]).<P>hsl",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                19,
                25,
                "EQ-1"
            ],
            [
                35,
                63,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122443,
        "text": "The index of the first character to be used; must be non-negative and no larger than csq.length().",
        "meta": {
            "doc_index": 245629,
            "doc_name": "java.nio.CharBuffer.wrap(java.lang.CharSequence,int,int).<P>start",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                43,
                "Nonnegative"
            ],
            [
                85,
                97,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122444,
        "text": "a value in the range [0..1f] (transparent..fully-opaque)",
        "meta": {
            "doc_index": 216733,
            "doc_name": "com.sun.glass.ui.Window.setAlpha(float).<P>alpha",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                7,
                "GE-1"
            ],
            [
                22,
                23,
                "GE-2"
            ],
            [
                25,
                27,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122446,
        "text": "If the specified index is equal to the length of the media blocks's rule collection, the rule will be added to the end of the media block.",
        "meta": {
            "doc_index": 271727,
            "doc_name": "org.w3c.dom.css.CSSMediaRule.insertRule(java.lang.String,int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                35,
                83,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122447,
        "text": "the opacity component in range from 0.0 (transparent) to 1.0 (opaque)",
        "meta": {
            "doc_index": 223610,
            "doc_name": "javafx.scene.paint.Color.web(java.lang.String,double).<P>opacity",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                36,
                39,
                "GE-2"
            ],
            [
                57,
                60,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122448,
        "text": "These items must be of the same type as the TableColumn.",
        "meta": {
            "doc_index": 221688,
            "doc_name": "javafx.scene.control.cell.ChoiceBoxTableCell.forTableColumn(javafx.util.StringConverter<T>,T...).<P>items",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Type-1"
            ],
            [
                44,
                55,
                "Type-2"
            ]
        ]
    },
    {
        "id": 122449,
        "text": "the offset into the document representing the desired start of the text >= 0",
        "meta": {
            "doc_index": 266954,
            "doc_name": "javax.swing.text.Document.getText(int,int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "GE-1"
            ],
            [
                75,
                76,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122450,
        "text": "the number of columns >= 0",
        "meta": {
            "doc_index": 262697,
            "doc_name": "javax.swing.JTextArea.JTextArea(int,int).<P>columns",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                25,
                26,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122451,
        "text": "an int specifying the number of rows to move from the current row; a positive number moves the cursor forward; a negative number moves the cursor backward",
        "meta": {
            "doc_index": 248006,
            "doc_name": "java.sql.ResultSet.relative(int).<P>rows",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                78,
                84,
                "Positive"
            ],
            [
                122,
                128,
                "Negative"
            ]
        ]
    },
    {
        "id": 122453,
        "text": "A non-null reference to a ContentHandler.",
        "meta": {
            "doc_index": 232366,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM2.dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean).<P>ch",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                40,
                "NotNull"
            ]
        ]
    },
    {
        "id": 122454,
        "text": "Passing negative or zero value is not recommended",
        "meta": {
            "doc_index": 237634,
            "doc_name": "java.awt.event.MouseEvent.MouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int).<P>when",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                30,
                "Positive"
            ]
        ]
    },
    {
        "id": 122455,
        "text": "the height >= 0",
        "meta": {
            "doc_index": 268032,
            "doc_name": "javax.swing.text.PlainView.setSize(float,float).<P>height",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GE-1"
            ],
            [
                14,
                15,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122457,
        "text": "the amount of years, may be negative",
        "meta": {
            "doc_index": 250231,
            "doc_name": "java.time.Period.of(int,int,int).<P>years",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122461,
        "text": "the top inset >= 0",
        "meta": {
            "doc_index": 266734,
            "doc_name": "javax.swing.text.CompositeView.setInsets(short,short,short,short).<P>top",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "GE-1"
            ],
            [
                17,
                18,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121464,
        "text": "A node identity, which must not be equal to DTM.NULL",
        "meta": {
            "doc_index": 232334,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM2._parent2(int).<P>identity",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "NEQ-1"
            ],
            [
                44,
                52,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121469,
        "text": "the value, in milliseconds, since the epoch (1970-01-01T00:00:00Z); can be negative",
        "meta": {
            "doc_index": 245765,
            "doc_name": "java.nio.file.attribute.FileTime.fromMillis(long).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121470,
        "text": "If the specified index is equal to the length of the style sheet's rule collection, the rule will be added to the end of the style sheet.",
        "meta": {
            "doc_index": 271744,
            "doc_name": "org.w3c.dom.css.CSSStyleSheet.insertRule(java.lang.String,int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                22,
                "EQ-1"
            ],
            [
                35,
                82,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121471,
        "text": "The index that should be made visible to the user, assuming of course that it is greater than, or equal to 0, and less than the number of the visible items in the TreeView.",
        "meta": {
            "doc_index": 222284,
            "doc_name": "javafx.scene.control.TreeView.scrollTo(int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                75,
                77,
                "GE-1"
            ],
            [
                107,
                108,
                "GE-2"
            ],
            [
                124,
                171,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121472,
        "text": "the preferred size >= 0",
        "meta": {
            "doc_index": 266047,
            "doc_name": "javax.swing.SizeRequirements.SizeRequirements(int,int,int,float).<P>pref",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "GE-1"
            ],
            [
                22,
                23,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121474,
        "text": "the ending offset >= p0",
        "meta": {
            "doc_index": 263354,
            "doc_name": "javax.swing.plaf.basic.BasicTextUI.create(javax.swing.text.Element,int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                21,
                23,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121475,
        "text": "the months to add, may be negative",
        "meta": {
            "doc_index": 249933,
            "doc_name": "java.time.LocalDateTime.plusMonths(long).<P>months",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121476,
        "text": "the days to subtract, may be negative",
        "meta": {
            "doc_index": 249946,
            "doc_name": "java.time.LocalDateTime.minusDays(long).<P>days",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121477,
        "text": "the length of the duration in seconds, positive or negative",
        "meta": {
            "doc_index": 249441,
            "doc_name": "java.time.Duration.Duration(long,int).<P>seconds",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                37,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121478,
        "text": "Beginning location of the field, will be >= 0",
        "meta": {
            "doc_index": 248925,
            "doc_name": "java.text.Format.FieldDelegate.formatted(int,java.text.Format.Field,java.lang.Object,int,int,java.lang.StringBuffer).<P>start",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "GE-1"
            ],
            [
                44,
                45,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121480,
        "text": "Passing negative value is not recommended.",
        "meta": {
            "doc_index": 237609,
            "doc_name": "java.awt.event.KeyEvent.KeyEvent(java.awt.Component,int,long,int,int,char).<P>modifiers",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                22,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121481,
        "text": "the number of years, may be negative",
        "meta": {
            "doc_index": 249307,
            "doc_name": "java.time.chrono.IsoChronology.period(int,int,int).<P>days",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121482,
        "text": "The offset within the array of the first double to be written; must be non-negative and no larger than dst.length",
        "meta": {
            "doc_index": 245730,
            "doc_name": "java.nio.DoubleBuffer.get(double[],int,int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Nonnegative"
            ],
            [
                103,
                113,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121483,
        "text": "If it is a text media type, it is assumed to contain a \"charset=utf-16\" parameter.",
        "meta": {
            "doc_index": 258747,
            "doc_name": "javax.print.DocFlavor.STRING.STRING(java.lang.String).<P>mimeType",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "Type-1"
            ],
            [
                9,
                26,
                "Type-2"
            ]
        ]
    },
    {
        "id": 121485,
        "text": "The characteristics must be equal to supplier.get().characteristics(), otherwise undefined behavior may occur when terminal operation commences.",
        "meta": {
            "doc_index": 254907,
            "doc_name": "java.util.stream.StreamSupport.longStream(java.util.function.Supplier<? extends java.util.Spliterator.OfLong>,int,boolean).<P>characteristics",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "EQ-1"
            ],
            [
                37,
                69,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121486,
        "text": "The new position, a non-negative integer counting the number of bytes from the beginning of the file",
        "meta": {
            "doc_index": 245531,
            "doc_name": "java.nio.channels.FileChannel.position(long).<P>newPosition",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121487,
        "text": "the row >= 0",
        "meta": {
            "doc_index": 268308,
            "doc_name": "javax.swing.text.TableView.GridCell.setGridLocation(int,int).<P>row",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                7,
                "GE-1"
            ],
            [
                11,
                12,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121488,
        "text": "The location in the document to place the content >=0.",
        "meta": {
            "doc_index": 266815,
            "doc_name": "javax.swing.text.DefaultEditorKit.read(java.io.Reader,javax.swing.text.Document,int).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "GE-1"
            ],
            [
                52,
                53,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121489,
        "text": "the starting Y position >= 0",
        "meta": {
            "doc_index": 268003,
            "doc_name": "javax.swing.text.PlainView.drawLine(int,java.awt.Graphics,int,int).<P>y",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121490,
        "text": "an integer greater than 0.",
        "meta": {
            "doc_index": 241143,
            "doc_name": "java.awt.PageAttributes.setPrinterResolution(int).<P>printerResolution",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GT-1"
            ],
            [
                24,
                25,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121492,
        "text": "the offset to track >= 0",
        "meta": {
            "doc_index": 267082,
            "doc_name": "javax.swing.text.GapContent.createPosition(int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                23,
                24,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121496,
        "text": "the location in the model where the fragment should start it's representation >= 0.",
        "meta": {
            "doc_index": 267167,
            "doc_name": "javax.swing.text.GlyphView.GlyphPainter.getBoundedPosition(javax.swing.text.GlyphView,int,float,float).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "GE-1"
            ],
            [
                81,
                82,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121497,
        "text": "This index starts from 0 and is relative to all the rows contained inside the table, regardless of section parentage.",
        "meta": {
            "doc_index": 271875,
            "doc_name": "org.w3c.dom.html.HTMLTableElement.insertRow(int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GE-1"
            ],
            [
                23,
                24,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121499,
        "text": "The type of stroke, whether rendered OUTSIDE, INSIDE, or CENTERED on the border line.",
        "meta": {
            "doc_index": 223090,
            "doc_name": "javafx.scene.layout.BorderStrokeStyle.BorderStrokeStyle(javafx.scene.shape.StrokeType,javafx.scene.shape.StrokeLineJoin,javafx.scene.shape.StrokeLineCap,double,double,java.util.List<java.lang.Double>).<P>type",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "EQ-1"
            ],
            [
                37,
                44,
                "EQ-2"
            ],
            [
                46,
                52,
                "EQ-2"
            ],
            [
                57,
                65,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121500,
        "text": "A value in the range [0, 1.0].",
        "meta": {
            "doc_index": 218450,
            "doc_name": "com.sun.media.jfxmedia.MediaPlayer.setVolume(float).<P>volume",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                7,
                "GE-1"
            ],
            [
                22,
                23,
                "GE-2"
            ],
            [
                25,
                28,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121501,
        "text": "time, but normalized to the range [0.0..1.0], where 0.0 is the start of the current interval, while 1.0 is the end of the current interval.",
        "meta": {
            "doc_index": 219289,
            "doc_name": "javafx.animation.Interpolator.curve(double).<P>t",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "GE-1"
            ],
            [
                35,
                38,
                "GE-2"
            ],
            [
                40,
                43,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121503,
        "text": "A negative number indicates the number of milliseconds before January 1, 1970, 00:00:00 GMT.",
        "meta": {
            "doc_index": 247805,
            "doc_name": "java.sql.Date.Date(long).<P>date",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                17,
                "Negative"
            ]
        ]
    },
    {
        "id": 121506,
        "text": "the composite data value to be added as a new row to this TabularData instance; must be of the same composite type as this instance's row type; must not be null.",
        "meta": {
            "doc_index": 257327,
            "doc_name": "javax.management.openmbean.TabularData.put(javax.management.openmbean.CompositeData).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                118,
                142,
                "Type-2"
            ],
            [
                0,
                36,
                "Type-1"
            ],
            [
                156,
                160,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121509,
        "text": "the length of the range; must be > 0",
        "meta": {
            "doc_index": 251421,
            "doc_name": "java.util.ComparableTimSort.gallopRight(java.lang.Comparable<java.lang.Object>,java.lang.Object[],int,int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GT-1"
            ],
            [
                35,
                36,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121510,
        "text": "the length of the desired string >= 0",
        "meta": {
            "doc_index": 266957,
            "doc_name": "javax.swing.text.Document.getText(int,int,javax.swing.text.Segment).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "GE-1"
            ],
            [
                36,
                37,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121511,
        "text": "the positive/negative sign style, not null",
        "meta": {
            "doc_index": 249537,
            "doc_name": "java.time.format.DateTimeFormatterBuilder.NumberPrinterParser.NumberPrinterParser(java.time.temporal.TemporalField,int,int,java.time.format.SignStyle).<P>signStyle",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                22,
                32,
                "Negativeable"
            ],
            [
                38,
                42,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121512,
        "text": "the amount of days, may be negative",
        "meta": {
            "doc_index": 250233,
            "doc_name": "java.time.Period.of(int,int,int).<P>days",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121513,
        "text": "This should be a value >= 0 and < getViewCount().",
        "meta": {
            "doc_index": 266538,
            "doc_name": "javax.swing.text.AsyncBoxView.getChildState(int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "GE-1"
            ],
            [
                26,
                27,
                "GE-2"
            ],
            [
                34,
                48,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121515,
        "text": "an index, where n>=0.",
        "meta": {
            "doc_index": 244952,
            "doc_name": "java.net.HttpURLConnection.getHeaderField(int).<P>n",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                17,
                "GE-1"
            ],
            [
                19,
                20,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121519,
        "text": "the bottom inset >= 0",
        "meta": {
            "doc_index": 266736,
            "doc_name": "javax.swing.text.CompositeView.setInsets(short,short,short,short).<P>bottom",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                20,
                21,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121522,
        "text": "Any value greater than 1 is interpreted as 1.",
        "meta": {
            "doc_index": 219366,
            "doc_name": "javafx.application.Preloader.ProgressNotification.ProgressNotification(double).<P>progress",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "GT-1"
            ],
            [
                23,
                24,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121524,
        "text": "Output-buffer size, a positive integer",
        "meta": {
            "doc_index": 242267,
            "doc_name": "java.io.BufferedWriter.BufferedWriter(java.io.Writer,int).<P>sz",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Positive"
            ]
        ]
    },
    {
        "id": 121525,
        "text": "the location in the document model that a broken fragment would occupy >= 0.",
        "meta": {
            "doc_index": 267533,
            "doc_name": "javax.swing.text.html.InlineView.breakView(int,int,float,float).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                34,
                "GE-1"
            ],
            [
                74,
                75,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121526,
        "text": "the GraphicsConfiguration that is used to construct the new window with; if gc is null, the system default GraphicsConfiguration is assumed, unless owner is also null, in which case the GraphicsConfiguration from the shared owner frame will be used.",
        "meta": {
            "doc_index": 262985,
            "doc_name": "javax.swing.JWindow.JWindow(java.awt.Window,java.awt.GraphicsConfiguration).<P>gc",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                76,
                78,
                "EQ-1"
            ],
            [
                82,
                86,
                "EQ-2"
            ],
            [
                148,
                153,
                "EQ-1"
            ],
            [
                162,
                166,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121528,
        "text": "the potential location of the start of the broken view >= 0.",
        "meta": {
            "doc_index": 267137,
            "doc_name": "javax.swing.text.GlyphView.getBreakWeight(int,float,float).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                54,
                "GE-1"
            ],
            [
                58,
                59,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121530,
        "text": "the numerator; must be negative",
        "meta": {
            "doc_index": 244716,
            "doc_name": "java.math.BigDecimal.divRemNegativeLong(long,long).<P>n",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121531,
        "text": "the starting X coordinate >= 0",
        "meta": {
            "doc_index": 267978,
            "doc_name": "javax.swing.text.PasswordView.drawSelectedText(java.awt.Graphics,int,int,int,int).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "GE-1"
            ],
            [
                29,
                30,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121532,
        "text": "alpha must be a floating point number in the inclusive range [0.0, 1.0].",
        "meta": {
            "doc_index": 236623,
            "doc_name": "java.awt.AlphaComposite.derive(float).<P>alpha",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                5,
                "Type-1"
            ],
            [
                16,
                37,
                "Type-2"
            ],
            [
                62,
                65,
                "GE-2"
            ],
            [
                67,
                70,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121535,
        "text": "If timeout is positive, wait for at most the specified time.",
        "meta": {
            "doc_index": 225648,
            "doc_name": "com.sun.jmx.snmp.daemon.CommunicatorServer.start(long).<P>timeout",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "Positive"
            ]
        ]
    },
    {
        "id": 121536,
        "text": "the index of the child view to allocate, >= 0 && < getViewCount()",
        "meta": {
            "doc_index": 266637,
            "doc_name": "javax.swing.text.BoxView.childAllocation(int,java.awt.Rectangle).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "GE-1"
            ],
            [
                44,
                45,
                "GE-2"
            ],
            [
                51,
                65,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121538,
        "text": "the bank index (in the range from 0 to 16383)",
        "meta": {
            "doc_index": 259337,
            "doc_name": "javax.sound.midi.Patch.Patch(int,int).<P>bank",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "GE-1"
            ],
            [
                34,
                35,
                "GE-2"
            ],
            [
                39,
                44,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121539,
        "text": "the offset from the start of the document >= 0",
        "meta": {
            "doc_index": 266959,
            "doc_name": "javax.swing.text.Document.createPosition(int).<P>offs",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                41,
                "GE-1"
            ],
            [
                45,
                46,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121543,
        "text": "the desired length of the domain parameter seed in bits, shall be equal to or greater than subprimeQLen.",
        "meta": {
            "doc_index": 247262,
            "doc_name": "java.security.spec.DSAGenParameterSpec.DSAGenParameterSpec(int,int,int).<P>seedLen",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                55,
                "GE-1"
            ],
            [
                91,
                103,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121544,
        "text": "the recurring last rules, size 15 or less, not null",
        "meta": {
            "doc_index": 250505,
            "doc_name": "java.time.zone.ZoneRules.ZoneRules(long[],java.time.ZoneOffset[],long[],java.time.ZoneOffset[],java.time.zone.ZoneOffsetTransitionRule[]).<P>lastRules",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "LE-1"
            ],
            [
                31,
                33,
                "LE-2"
            ],
            [
                47,
                51,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121546,
        "text": "The maximum number of buffers to be accessed; must be non-negative and no larger than srcs.length - offset",
        "meta": {
            "doc_index": 245565,
            "doc_name": "java.nio.channels.GatheringByteChannel.write(java.nio.ByteBuffer[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                44,
                "Nonnegative"
            ],
            [
                86,
                106,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121547,
        "text": "an integer greater than zero and greater than or equal to minPage",
        "meta": {
            "doc_index": 240857,
            "doc_name": "java.awt.JobAttributes.setMaxPage(int).<P>maxPage",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GT-1"
            ],
            [
                24,
                28,
                "GT-2"
            ],
            [
                58,
                65,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121548,
        "text": "int length of wrapped lines; No wrapping if less than 4.",
        "meta": {
            "doc_index": 233671,
            "doc_name": "com.sun.org.apache.xml.internal.security.utils.Base64.encode(byte[],int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "LT-1"
            ],
            [
                54,
                55,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121549,
        "text": "The position at which the locked region is to start; must be non-negative",
        "meta": {
            "doc_index": 245437,
            "doc_name": "java.nio.channels.AsynchronousFileChannel.lock(long,long,boolean).<P>position",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121551,
        "text": "If it is negative, it has the same effect as if it were -1: -1 is returned.",
        "meta": {
            "doc_index": 235303,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLStringDefault.lastIndexOf(java.lang.String,int).<P>fromIndex",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "Negative"
            ],
            [
                60,
                62,
                "Returned"
            ],
            [
                48,
                50,
                "EQ-1"
            ],
            [
                56,
                58,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121553,
        "text": "the starting location in the text document >= 0",
        "meta": {
            "doc_index": 268276,
            "doc_name": "javax.swing.text.TabableView.getPartialSpan(int,int).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                42,
                "GE-1"
            ],
            [
                46,
                47,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121554,
        "text": "array containing the non-positive spectrum magnitude in decibels (dB) for each band.",
        "meta": {
            "doc_index": 223428,
            "doc_name": "javafx.scene.media.AudioSpectrumListener.spectrumDataUpdate(double,double,float[],float[]).<P>magnitudes",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                83,
                "Nonpositive"
            ]
        ]
    },
    {
        "id": 121556,
        "text": "the object to be compared for equality with this TabularType instance; if obj is null, equals returns false.",
        "meta": {
            "doc_index": 257353,
            "doc_name": "javax.management.openmbean.TabularType.equals(java.lang.Object).<P>obj",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                74,
                77,
                "EQ-1"
            ],
            [
                81,
                85,
                "EQ-2"
            ],
            [
                87,
                93,
                "Returns-1"
            ],
            [
                102,
                107,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 121557,
        "text": "A positive float value indicating the expected number of characters that will be produced for each input byte",
        "meta": {
            "doc_index": 245668,
            "doc_name": "java.nio.charset.CharsetDecoder.CharsetDecoder(java.nio.charset.Charset,float,float,java.lang.String).<P>averageCharsPerByte",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                22,
                "Positive"
            ]
        ]
    },
    {
        "id": 121558,
        "text": "a positive value specifying the center frequency of the band in Hertz.",
        "meta": {
            "doc_index": 223430,
            "doc_name": "javafx.scene.media.EqualizerBand.EqualizerBand(double,double,double).<P>centerFrequency",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                16,
                "Positive"
            ]
        ]
    },
    {
        "id": 121559,
        "text": "the duration of each visible tick, not negative, not null",
        "meta": {
            "doc_index": 249418,
            "doc_name": "java.time.Clock.tick(java.time.Clock,java.time.Duration).<P>tickDuration",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                33,
                "Nonnegative"
            ],
            [
                53,
                57,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121561,
        "text": "the bound for the wstring; cannot be negative",
        "meta": {
            "doc_index": 271173,
            "doc_name": "org.omg.CORBA.ORB.create_wstring_tc(int).<P>bound",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121562,
        "text": "the nanos to add, positive or negative",
        "meta": {
            "doc_index": 249472,
            "doc_name": "java.time.Duration.plus(long,long).<P>nanosToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121564,
        "text": "the position of the first character (>=0)",
        "meta": {
            "doc_index": 268420,
            "doc_name": "javax.swing.text.View.modelToView(int,javax.swing.text.Position.Bias,int,javax.swing.text.Position.Bias,java.awt.Shape).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "GE-1"
            ],
            [
                39,
                40,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121565,
        "text": "the field to query the range for, not null",
        "meta": {
            "doc_index": 249433,
            "doc_name": "java.time.DayOfWeek.range(java.time.temporal.TemporalField).<P>field",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "NEQ-1"
            ],
            [
                38,
                42,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121568,
        "text": "In some cases we begin by drawing the center tile, and working to the left & right (for example), so this value is not always the same as regionX.",
        "meta": {
            "doc_index": 218241,
            "doc_name": "com.sun.javafx.sg.prism.NGRegion.paintTiles(com.sun.prism.Graphics,com.sun.prism.Image,javafx.scene.layout.BackgroundRepeat,javafx.scene.layout.BackgroundRepeat,javafx.geometry.Side,javafx.geometry.Side,float,float,float,float,int,int,int,int,float,float,float,float).<P>tileX",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                101,
                111,
                "CanNEQ-1"
            ],
            [
                138,
                145,
                "CanNEQ-2"
            ]
        ]
    },
    {
        "id": 121569,
        "text": "the column index where the desired cell is located in the display; this is not necessarily the same as the column index in the data model for the table; the convertColumnIndexToView(int) method may be used to convert a data model column index to a display column index",
        "meta": {
            "doc_index": 262556,
            "doc_name": "javax.swing.JTable.getCellRect(int,int,boolean).<P>column",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "CanNEQ-1"
            ],
            [
                103,
                151,
                "CanNEQ-2"
            ]
        ]
    },
    {
        "id": 121570,
        "text": "the number of milliseconds, positive or negative",
        "meta": {
            "doc_index": 249449,
            "doc_name": "java.time.Duration.ofMillis(long).<P>millis",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121572,
        "text": "the width >= 0",
        "meta": {
            "doc_index": 267517,
            "doc_name": "javax.swing.text.html.ImageView.setSize(float,float).<P>width",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "GE-1"
            ],
            [
                13,
                14,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121575,
        "text": "the number of elements to skip, assumed to be >= 0",
        "meta": {
            "doc_index": 254795,
            "doc_name": "java.util.stream.SliceOps.calcSize(long,long,long).<P>skip",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "GE-1"
            ],
            [
                49,
                50,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121579,
        "text": "the preferred size; one of DEFAULT_SIZE or a value >= 0",
        "meta": {
            "doc_index": 261217,
            "doc_name": "javax.swing.GroupLayout.SequentialGroup.addContainerGap(int,int).<P>pref",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "EQ-1"
            ],
            [
                27,
                39,
                "EQ-2"
            ],
            [
                54,
                55,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121580,
        "text": "The amount to write out >=0.",
        "meta": {
            "doc_index": 266812,
            "doc_name": "javax.swing.text.DefaultEditorKit.write(java.io.OutputStream,javax.swing.text.Document,int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                26,
                27,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121581,
        "text": "the index of the child, >= 0 && > getViewCount()",
        "meta": {
            "doc_index": 266617,
            "doc_name": "javax.swing.text.BoxView.getChildAllocation(int,java.awt.Shape).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ],
            [
                34,
                48,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121583,
        "text": "The end offset >= offs0",
        "meta": {
            "doc_index": 266410,
            "doc_name": "javax.swing.text.AbstractDocument.LeafElement.LeafElement(javax.swing.text.Element,javax.swing.text.AttributeSet,int,int).<P>offs1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "GE-1"
            ],
            [
                18,
                23,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121584,
        "text": "position of child component (must be <= 0)",
        "meta": {
            "doc_index": 241545,
            "doc_name": "java.awt.ScrollPane.addImpl(java.awt.Component,java.lang.Object,int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "LE-1"
            ],
            [
                40,
                41,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121586,
        "text": "the string used to identify the MIME type for this flavor; if the class specified by \"class=\" parameter is not successfully loaded, then an ClassNotFoundException is thrown",
        "meta": {
            "doc_index": 237273,
            "doc_name": "java.awt.datatransfer.DataFlavor.DataFlavor(java.lang.String).<P>mimeType",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                140,
                162,
                "Thrown"
            ]
        ]
    },
    {
        "id": 121587,
        "text": "The amount to write out >= 0.",
        "meta": {
            "doc_index": 266997,
            "doc_name": "javax.swing.text.EditorKit.write(java.io.Writer,javax.swing.text.Document,int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121589,
        "text": "Flag precising if d is negative.",
        "meta": {
            "doc_index": 248821,
            "doc_name": "java.text.DecimalFormat.fastDoubleFormat(double,boolean).<P>negative",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                18,
                19,
                "Negative"
            ]
        ]
    },
    {
        "id": 121590,
        "text": "the number of rows >= 0",
        "meta": {
            "doc_index": 262704,
            "doc_name": "javax.swing.JTextArea.JTextArea(javax.swing.text.Document,java.lang.String,int,int).<P>rows",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "GE-1"
            ],
            [
                22,
                23,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121593,
        "text": "the number of the view to get, >= 0 && < getViewCount()",
        "meta": {
            "doc_index": 268404,
            "doc_name": "javax.swing.text.View.getView(int).<P>n",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "GE-1"
            ],
            [
                34,
                35,
                "GE-2"
            ],
            [
                41,
                55,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121594,
        "text": "true if negative values are to be represented.",
        "meta": {
            "doc_index": 255736,
            "doc_name": "javax.imageio.ImageTypeSpecifier.createGrayscale(int,int,boolean).<P>isSigned",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                23,
                "Negative"
            ],
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 121595,
        "text": "the position in points >= 0",
        "meta": {
            "doc_index": 268278,
            "doc_name": "javax.swing.text.TabExpander.nextTabStop(float,int).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "GE-1"
            ],
            [
                26,
                27,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121598,
        "text": "This is ignored unless the type is one of the palette types.",
        "meta": {
            "doc_index": 217820,
            "doc_name": "com.sun.javafx.iio.ImageFrame.ImageFrame(com.sun.javafx.iio.ImageStorage.ImageType,java.nio.ByteBuffer,int,int,int,byte[][],float,com.sun.javafx.iio.ImageMetadata).<P>palette",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                31,
                "EQ-1"
            ],
            [
                35,
                59,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121599,
        "text": "An infinite timeout can be specified by passing a timeout value equals Long.MAX_VALUE.",
        "meta": {
            "doc_index": 225648,
            "doc_name": "com.sun.jmx.snmp.daemon.CommunicatorServer.start(long).<P>timeout",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                48,
                63,
                "EQ-1"
            ],
            [
                71,
                85,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121601,
        "text": "The absolute vertical y coordinate for the mouse location It is allowed to pass negative values",
        "meta": {
            "doc_index": 237639,
            "doc_name": "java.awt.event.MouseEvent.MouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int).<P>yAbs",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                57,
                "Negative"
            ]
        ]
    },
    {
        "id": 121603,
        "text": "If the value passed is negative, or Infinity, or NaN, then the resulting percentDone will be -1 (thus, indeterminate).",
        "meta": {
            "doc_index": 220560,
            "doc_name": "javafx.concurrent.Task.updateProgress(double,double).<P>workDone",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "Negative"
            ],
            [
                36,
                44,
                "EQ-2"
            ],
            [
                49,
                52,
                "EQ-2"
            ],
            [
                59,
                84,
                "EQ-1"
            ],
            [
                93,
                95,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121605,
        "text": "The height of the backing store, must be > 0 (typically > 512)",
        "meta": {
            "doc_index": 218615,
            "doc_name": "com.sun.prism.impl.packrect.RectanglePacker.RectanglePacker(com.sun.prism.Texture,int,int).<P>height",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "GT-1"
            ],
            [
                43,
                44,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121606,
        "text": "the seconds to add, positive or negative",
        "meta": {
            "doc_index": 249764,
            "doc_name": "java.time.Instant.plus(long,long).<P>secondsToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121607,
        "text": "the alignment >= 0",
        "meta": {
            "doc_index": 268255,
            "doc_name": "javax.swing.text.StyledEditorKit.AlignmentAction.AlignmentAction(java.lang.String,int).<P>a",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "GE-1"
            ],
            [
                17,
                18,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121608,
        "text": "The index that should be made visible to the user, assuming of course that it is greater than, or equal to 0, and less than the number of the visible items in the TreeTableView.",
        "meta": {
            "doc_index": 222267,
            "doc_name": "javafx.scene.control.TreeTableView.scrollTo(int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "GE-1"
            ],
            [
                107,
                108,
                "GE-2"
            ],
            [
                128,
                176,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121609,
        "text": "the minimum size >= 0",
        "meta": {
            "doc_index": 266046,
            "doc_name": "javax.swing.SizeRequirements.SizeRequirements(int,int,int,float).<P>min",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                20,
                21,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121610,
        "text": "the first index in the range, <= lastIndex",
        "meta": {
            "doc_index": 261830,
            "doc_name": "javax.swing.JList.fireSelectionValueChanged(int,int,boolean).<P>firstIndex",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "LE-1"
            ],
            [
                33,
                42,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121612,
        "text": "If the value is greater than max, then it will be clamped at max.",
        "meta": {
            "doc_index": 220560,
            "doc_name": "javafx.concurrent.Task.updateProgress(double,double).<P>workDone",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "GT-1"
            ],
            [
                29,
                32,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121613,
        "text": "the minimum number of integer digits to be shown; if less than zero, then zero is used.",
        "meta": {
            "doc_index": 248987,
            "doc_name": "java.text.NumberFormat.setMinimumIntegerDigits(int).<P>newValue",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                63,
                67,
                "LT-2"
            ],
            [
                0,
                36,
                "LT-2"
            ],
            [
                74,
                78,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121614,
        "text": "the starting model offset >= 0",
        "meta": {
            "doc_index": 224977,
            "doc_name": "com.sun.java.swing.plaf.windows.WindowsTextUI.WindowsHighlightPainter.paint(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent).<P>offs0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "GE-1"
            ],
            [
                29,
                30,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121615,
        "text": "The number of ints to be read from the given array; must be non-negative and no larger than array.length - offset",
        "meta": {
            "doc_index": 246125,
            "doc_name": "java.nio.IntBuffer.put(int[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                50,
                "Nonnegative"
            ],
            [
                92,
                113,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121616,
        "text": "the pad width, 1 or greater",
        "meta": {
            "doc_index": 249616,
            "doc_name": "java.time.format.DateTimeFormatterBuilder.padNext(int,char).<P>padWidth",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "GE-1"
            ],
            [
                15,
                16,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121618,
        "text": "A value >=0 or a negative value for implementation specific default",
        "meta": {
            "doc_index": 245617,
            "doc_name": "java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int).<P>initialSize",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                7,
                "GE-1"
            ],
            [
                10,
                11,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121620,
        "text": "the Y coordinate >=0",
        "meta": {
            "doc_index": 266688,
            "doc_name": "javax.swing.text.ComponentView.viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias[]).<P>y",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                19,
                20,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121621,
        "text": "If it is not the same object as location, point will remain unmodified by this call.",
        "meta": {
            "doc_index": 237858,
            "doc_name": "java.awt.font.LayoutPath.pointToPath(java.awt.geom.Point2D,java.awt.geom.Point2D).<P>point",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "NEQ-1"
            ],
            [
                13,
                40,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121624,
        "text": "Set to false to create a negative duration.",
        "meta": {
            "doc_index": 269574,
            "doc_name": "javax.xml.datatype.DatatypeFactory.newDurationYearMonth(boolean,java.math.BigInteger,java.math.BigInteger).<P>isPositive",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                42,
                "Negative"
            ]
        ]
    },
    {
        "id": 121627,
        "text": "The location in the document to fetch the content >=0.",
        "meta": {
            "doc_index": 266811,
            "doc_name": "javax.swing.text.DefaultEditorKit.write(java.io.OutputStream,javax.swing.text.Document,int,int).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                49,
                "GE-1"
            ],
            [
                52,
                53,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121628,
        "text": "the hours to subtract, may be negative",
        "meta": {
            "doc_index": 250622,
            "doc_name": "java.time.ZonedDateTime.minusHours(long).<P>hours",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121629,
        "text": "the duration to subtract, positive or negative, not null",
        "meta": {
            "doc_index": 249473,
            "doc_name": "java.time.Duration.minus(java.time.Duration).<P>duration",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Negativeable"
            ],
            [
                52,
                56,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121630,
        "text": "A positive float value indicating the maximum number of characters that will be produced for each input byte",
        "meta": {
            "doc_index": 245673,
            "doc_name": "java.nio.charset.CharsetDecoder.CharsetDecoder(java.nio.charset.Charset,float,float).<P>maxCharsPerByte",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                22,
                "Positive"
            ]
        ]
    },
    {
        "id": 121631,
        "text": "If the value of this parameter is less than the actual signature length, this method will throw a SignatureException.",
        "meta": {
            "doc_index": 247240,
            "doc_name": "java.security.SignatureSpi.engineSign(byte[],int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                30,
                "LT-1"
            ],
            [
                44,
                71,
                "LT-2"
            ],
            [
                73,
                84,
                "Throws-1"
            ],
            [
                98,
                116,
                "Throws-2"
            ]
        ]
    },
    {
        "id": 121632,
        "text": "the child index, >= 0 && < getViewCount()",
        "meta": {
            "doc_index": 266595,
            "doc_name": "javax.swing.text.BoxView.paintChild(java.awt.Graphics,java.awt.Rectangle,int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "GE-1"
            ],
            [
                20,
                21,
                "GE-2"
            ],
            [
                27,
                41,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121633,
        "text": "If flags == IGNORE_ALL_BEANINFO then we ignore all BeanInfo associated with the specified beanClass or any of its parent classes.",
        "meta": {
            "doc_index": 242070,
            "doc_name": "java.beans.Introspector.getBeanInfo(java.lang.Class<?>,int).<P>flags",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                31,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121635,
        "text": "If dst is null, a new array will be allocated having the same length as src.",
        "meta": {
            "doc_index": 240651,
            "doc_name": "java.awt.image.ShortLookupTable.lookupPixel(short[],short[]).<P>dst",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121636,
        "text": "the seconds to subtract, positive or negative",
        "meta": {
            "doc_index": 249479,
            "doc_name": "java.time.Duration.minusSeconds(long).<P>secondsToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121637,
        "text": "the X coordinate >= 0.0f",
        "meta": {
            "doc_index": 267988,
            "doc_name": "javax.swing.text.PasswordView.viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias[]).<P>fx",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                20,
                24,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121638,
        "text": "the nanos to subtract, may be negative",
        "meta": {
            "doc_index": 250625,
            "doc_name": "java.time.ZonedDateTime.minusNanos(long).<P>nanos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121639,
        "text": "the months to add, positive or negative",
        "meta": {
            "doc_index": 250247,
            "doc_name": "java.time.Period.plusMonths(long).<P>monthsToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121642,
        "text": "offset within the document that was requested >= 0",
        "meta": {
            "doc_index": 266587,
            "doc_name": "javax.swing.text.BadLocationException.BadLocationException(java.lang.String,int).<P>offs",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "GE-1"
            ],
            [
                49,
                50,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121643,
        "text": "the years to subtract, may be negative",
        "meta": {
            "doc_index": 249111,
            "doc_name": "java.time.chrono.ChronoLocalDateImpl.minusYears(long).<P>yearsToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121644,
        "text": "Negative values are not allowed.",
        "meta": {
            "doc_index": 223110,
            "doc_name": "javafx.scene.layout.CornerRadii.CornerRadii(double).<P>radius",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                15,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121646,
        "text": "the number of existing child views to remove This should be a value >= 0 and <= (getViewCount() - offset).",
        "meta": {
            "doc_index": 268409,
            "doc_name": "javax.swing.text.View.replace(int,int,javax.swing.text.View[]).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                49,
                "GE-1"
            ],
            [
                71,
                72,
                "GE-2"
            ],
            [
                81,
                104,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121647,
        "text": "the array of parsed data, 0=pos,1=hours,2=mins,3=secs, not null",
        "meta": {
            "doc_index": 249641,
            "doc_name": "java.time.format.DateTimeFormatterBuilder.OffsetIdPrinterParser.parseNumber(int[],int,java.lang.CharSequence,boolean).<P>array",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "NEQ-1"
            ],
            [
                59,
                63,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121649,
        "text": "the weeks to subtract, may be negative",
        "meta": {
            "doc_index": 249113,
            "doc_name": "java.time.chrono.ChronoLocalDateImpl.minusWeeks(long).<P>weeksToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121650,
        "text": "the amount to add, measured in terms of the unit, positive or negative",
        "meta": {
            "doc_index": 249463,
            "doc_name": "java.time.Duration.plus(long,java.time.temporal.TemporalUnit).<P>amountToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121652,
        "text": "the years to subtract, positive or negative",
        "meta": {
            "doc_index": 250251,
            "doc_name": "java.time.Period.minusMonths(long).<P>monthsToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121653,
        "text": "is 2nd control point coordinate in range [0,1]",
        "meta": {
            "doc_index": 218826,
            "doc_name": "com.sun.scenario.animation.SplineInterpolator.evalDerivative(double,double,double).<P>p2",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                31,
                "GE-1"
            ],
            [
                42,
                43,
                "GE-2"
            ],
            [
                44,
                45,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121655,
        "text": "an index within the text >= 0",
        "meta": {
            "doc_index": 241636,
            "doc_name": "java.awt.TextComponent.AccessibleAWTTextComponent.getBeforeIndex(int,int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "GE-1"
            ],
            [
                28,
                29,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121656,
        "text": "the target view location to translate to an offset into the text >= 0.",
        "meta": {
            "doc_index": 268353,
            "doc_name": "javax.swing.text.Utilities.getTabbedTextOffset(javax.swing.text.Segment,java.awt.FontMetrics,int,int,javax.swing.text.TabExpander,int).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "GE-1"
            ],
            [
                68,
                69,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121657,
        "text": "The first element must be greater than 0.",
        "meta": {
            "doc_index": 241142,
            "doc_name": "java.awt.PageAttributes.setPrinterResolution(int[]).<P>printerResolution",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GT-1"
            ],
            [
                39,
                40,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121659,
        "text": "the offset in the content >= 0",
        "meta": {
            "doc_index": 266461,
            "doc_name": "javax.swing.text.AbstractDocument.Content.createPosition(int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "GE-1"
            ],
            [
                29,
                30,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121664,
        "text": "the search position >= 0",
        "meta": {
            "doc_index": 268293,
            "doc_name": "javax.swing.text.TableView.getViewAtPosition(int,java.awt.Rectangle).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                23,
                24,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121665,
        "text": "if {@literal >=0}, then a node builder will be created that has a fixed capacity of at most sizeIfKnown elements.",
        "meta": {
            "doc_index": 254362,
            "doc_name": "java.util.stream.AbstractPipeline.makeNodeBuilder(long,java.util.function.IntFunction<E_OUT[]>).<P>exactSizeIfKnown",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                5,
                12,
                "GE-1"
            ],
            [
                15,
                16,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121667,
        "text": "Each OID is represented by a set of nonnegative integers separated by periods.",
        "meta": {
            "doc_index": 246785,
            "doc_name": "java.security.cert.X509CertSelector.setExtendedKeyUsage(java.util.Set<java.lang.String>).<P>keyPurposeSet",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                77,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121668,
        "text": "the number of the desired view, >= 0 && < getViewCount()",
        "meta": {
            "doc_index": 266694,
            "doc_name": "javax.swing.text.CompositeView.getView(int).<P>n",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "GE-1"
            ],
            [
                35,
                36,
                "GE-2"
            ],
            [
                42,
                56,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121669,
        "text": "the new capacity, MUST be a power of two; must be greater than current capacity unless current capacity is MAXIMUM_CAPACITY (in which case value is irrelevant).",
        "meta": {
            "doc_index": 255109,
            "doc_name": "java.util.WeakHashMap.resize(int).<P>newCapacity",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "EQ-1"
            ],
            [
                26,
                40,
                "EQ-2"
            ],
            [
                63,
                79,
                "GT-2"
            ],
            [
                87,
                103,
                "EQ-1"
            ],
            [
                107,
                123,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121670,
        "text": "the minutes to subtract, may be negative",
        "meta": {
            "doc_index": 250623,
            "doc_name": "java.time.ZonedDateTime.minusMinutes(long).<P>minutes",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121671,
        "text": "the number of consecutive bytes to be copied; the value for length must be 0 or greater",
        "meta": {
            "doc_index": 247398,
            "doc_name": "java.sql.Blob.getBytes(long,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                46,
                66,
                "GE-1"
            ],
            [
                75,
                76,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121674,
        "text": "The offset within the string of the last char to be read, plus one; must be non-negative and no larger than string.length()",
        "meta": {
            "doc_index": 245647,
            "doc_name": "java.nio.CharBuffer.put(java.lang.String,int,int).<P>end",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                56,
                "Nonnegative"
            ],
            [
                108,
                123,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121675,
        "text": "the desired height of the image; if non-positive, the original image height will be used.",
        "meta": {
            "doc_index": 217849,
            "doc_name": "com.sun.javafx.iio.ImageStorage.loadAll(java.io.InputStream,com.sun.javafx.iio.ImageLoadListener,int,int,boolean,float,boolean).<P>height",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "Nonpositive"
            ]
        ]
    },
    {
        "id": 121677,
        "text": "Valid values range from getBeginIndex() to getEndIndex().",
        "meta": {
            "doc_index": 248686,
            "doc_name": "java.text.CharacterIterator.setIndex(int).<P>position",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "GE-1"
            ],
            [
                24,
                39,
                "GE-2"
            ],
            [
                43,
                56,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121678,
        "text": "the number of months, positive or negative",
        "meta": {
            "doc_index": 250228,
            "doc_name": "java.time.Period.ofMonths(int).<P>months",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121679,
        "text": "the indentation level >= 0",
        "meta": {
            "doc_index": 266484,
            "doc_name": "javax.swing.text.AbstractDocument.AbstractElement.dump(java.io.PrintStream,int).<P>indentAmount",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                25,
                26,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121680,
        "text": "the length of the valid message data in the array; it should be non-negative and less than or equal to data.length",
        "meta": {
            "doc_index": 259433,
            "doc_name": "javax.sound.midi.SysexMessage.SysexMessage(int,byte[],int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                49,
                "Nonnegative"
            ],
            [
                103,
                114,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121687,
        "text": "the hours to add, may be negative",
        "meta": {
            "doc_index": 249936,
            "doc_name": "java.time.LocalDateTime.plusHours(long).<P>hours",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121688,
        "text": "The new fixed cell size value, or a value less than or equal to zero (or Region.USE_COMPUTED_SIZE) to disable.",
        "meta": {
            "doc_index": 222145,
            "doc_name": "javafx.scene.control.TableView.setFixedCellSize(double).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                41,
                "LE-1"
            ],
            [
                64,
                68,
                "LE-2"
            ],
            [
                73,
                97,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121690,
        "text": "the starting index into the child views to insert the new views; >= 0 and <= getViewCount",
        "meta": {
            "doc_index": 266695,
            "doc_name": "javax.swing.text.CompositeView.replace(int,int,javax.swing.text.View[]).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "GE-1"
            ],
            [
                68,
                69,
                "GE-2"
            ],
            [
                77,
                89,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121691,
        "text": "Only positive values above zero are allowed.",
        "meta": {
            "doc_index": 218348,
            "doc_name": "com.sun.media.jfxmedia.AudioClip.setPlaybackRate(double).<P>rate",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                20,
                "Positive"
            ]
        ]
    },
    {
        "id": 121692,
        "text": "if true, the current position that is returned if the entire next word does not fit within wrappingWidth; if false, the offset returned is at least one greater than the current position",
        "meta": {
            "doc_index": 237871,
            "doc_name": "java.awt.font.LineBreakMeasurer.nextOffset(float,int,boolean).<P>requireNextWord",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                29,
                "Returned"
            ],
            [
                116,
                126,
                "Returned"
            ],
            [
                165,
                185,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121693,
        "text": "The offset within the array of the first byte to be read; must be non-negative and no larger than array.length",
        "meta": {
            "doc_index": 268996,
            "doc_name": "javax.xml.bind.attachment.AttachmentMarshaller.addMtomAttachment(byte[],int,int,java.lang.String,java.lang.String,java.lang.String).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Nonnegative"
            ],
            [
                98,
                110,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121694,
        "text": "The index is the table cell offset from row == 0 and column == 0.",
        "meta": {
            "doc_index": 255335,
            "doc_name": "javax.accessibility.AccessibleExtendedTable.getAccessibleRow(int).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                13,
                34,
                "EQ-2"
            ],
            [
                47,
                48,
                "GE-2"
            ],
            [
                63,
                64,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121696,
        "text": "an integer greater than zero and greater than or equal to fromPage and greater than or equal to minPage and less than or equal to maxPage.",
        "meta": {
            "doc_index": 240863,
            "doc_name": "java.awt.JobAttributes.setToPage(int).<P>toPage",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GT-1"
            ],
            [
                24,
                28,
                "GT-2"
            ],
            [
                58,
                66,
                "GE-2"
            ],
            [
                96,
                103,
                "GE-2"
            ],
            [
                130,
                137,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121699,
        "text": "the object to be compared for equality with this ArrayType instance; if obj is null or is not an instance of the class ArrayType this method returns false.",
        "meta": {
            "doc_index": 257180,
            "doc_name": "javax.management.openmbean.ArrayType.equals(java.lang.Object).<P>obj",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                72,
                75,
                "EQ-1"
            ],
            [
                79,
                83,
                "EQ-2"
            ],
            [
                109,
                128,
                "NotType-2"
            ],
            [
                129,
                140,
                "Returns-1"
            ],
            [
                149,
                154,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 121701,
        "text": "The first position is 1; must not be less than 1 nor greater than the length of this SerialBlob object.",
        "meta": {
            "doc_index": 260060,
            "doc_name": "javax.sql.rowset.serial.SerialBlob.setBytes(long,byte[]).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "EQ-1"
            ],
            [
                22,
                23,
                "EQ-2"
            ],
            [
                47,
                48,
                "GE-2"
            ],
            [
                66,
                102,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121702,
        "text": "The new size, a non-negative byte count",
        "meta": {
            "doc_index": 245588,
            "doc_name": "java.nio.channels.SeekableByteChannel.truncate(long).<P>size",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121704,
        "text": "the value since the epoch (1970-01-01T00:00:00Z); can be negative",
        "meta": {
            "doc_index": 245763,
            "doc_name": "java.nio.file.attribute.FileTime.from(long,java.util.concurrent.TimeUnit).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121706,
        "text": "the width to pad to, 1 or greater",
        "meta": {
            "doc_index": 249532,
            "doc_name": "java.time.format.DateTimeFormatterBuilder.PadPrinterParserDecorator.PadPrinterParserDecorator(java.time.format.DateTimeFormatterBuilder.DateTimePrinterParser,int,char).<P>padWidth",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                21,
                22,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121707,
        "text": "the starting document location to use >= 0",
        "meta": {
            "doc_index": 268476,
            "doc_name": "javax.swing.text.WrappedPlainView.drawLine(int,int,java.awt.Graphics,int,int).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "GE-1"
            ],
            [
                41,
                42,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121708,
        "text": "the number of characters to retrieve >= 0",
        "meta": {
            "doc_index": 267080,
            "doc_name": "javax.swing.text.GapContent.getChars(int,int,javax.swing.text.Segment).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                36,
                "GE-1"
            ],
            [
                40,
                41,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121710,
        "text": "a boolean value indicating the item's selected-state, where true=selected",
        "meta": {
            "doc_index": 261296,
            "doc_name": "javax.swing.JCheckBoxMenuItem.setState(boolean).<P>b",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                60,
                64,
                "EQ-1"
            ],
            [
                65,
                73,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121712,
        "text": "the starting offset in the model >= 0",
        "meta": {
            "doc_index": 267975,
            "doc_name": "javax.swing.text.PasswordView.drawUnselectedText(java.awt.Graphics,int,int,int,int).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "GE-1"
            ],
            [
                36,
                37,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121713,
        "text": "Generally should be fulfilled this formula rgba.length == fractions.length",
        "meta": {
            "doc_index": 218529,
            "doc_name": "com.sun.pisces.PiscesRenderer.setLinearGradient(int,int,int,int,int[],int[],int,com.sun.pisces.Transform6).<P>rgba",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                43,
                54,
                "EQ-1"
            ],
            [
                57,
                74,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121715,
        "text": "Because the stream's input comes from a string, there is no actual limit, so this argument must not be negative, but is otherwise ignored.",
        "meta": {
            "doc_index": 242893,
            "doc_name": "java.io.StringReader.mark(int).<P>readAheadLimit",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                77,
                90,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121718,
        "text": "If <0, requests that we find, reserve, and return an available ID number.",
        "meta": {
            "doc_index": 231567,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager.co_joinCoroutineSet(int).<P>coroutineID",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                72,
                "Returned"
            ]
        ]
    },
    {
        "id": 121720,
        "text": "is x-value of cubic bezier curve, in range [0,1]",
        "meta": {
            "doc_index": 218827,
            "doc_name": "com.sun.scenario.animation.SplineInterpolator.getInitialGuessForT(double).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                32,
                "GE-1"
            ],
            [
                44,
                45,
                "GE-2"
            ],
            [
                46,
                47,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121722,
        "text": "Boolean value indicating whether the number is negative.",
        "meta": {
            "doc_index": 248869,
            "doc_name": "java.text.DigitList.set(boolean,double,int).<P>isNegative",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                43,
                "Negative"
            ]
        ]
    },
    {
        "id": 121723,
        "text": "the last index in the range, >= firstIndex",
        "meta": {
            "doc_index": 261042,
            "doc_name": "javax.swing.event.ListSelectionEvent.ListSelectionEvent(java.lang.Object,int,int,boolean).<P>lastIndex",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "GE-1"
            ],
            [
                32,
                42,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121724,
        "text": "incoming ctl value, with total count negative and no idle workers.",
        "meta": {
            "doc_index": 252233,
            "doc_name": "java.util.concurrent.ForkJoinPool.tryAddWorker(long).<P>c",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                36,
                "Negative"
            ]
        ]
    },
    {
        "id": 121726,
        "text": "positive opcode position for this step.",
        "meta": {
            "doc_index": 235384,
            "doc_name": "com.sun.org.apache.xpath.internal.axes.FilterExprWalker.init(com.sun.org.apache.xpath.internal.compiler.Compiler,int,int).<P>opPos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                24,
                "Positive"
            ]
        ]
    },
    {
        "id": 121729,
        "text": "Value to be converted; must not be a value <= 0.",
        "meta": {
            "doc_index": 248888,
            "doc_name": "java.text.DigitList.set(boolean,java.math.BigDecimal,int,boolean).<P>source",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GT-1"
            ],
            [
                46,
                47,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121730,
        "text": "This will be a set of simple selectors, and must be a length of 1 or greater.",
        "meta": {
            "doc_index": 267640,
            "doc_name": "javax.swing.text.html.StyleSheet.addRule(java.lang.String[],javax.swing.text.AttributeSet,boolean).<P>selector",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "EQ-1"
            ],
            [
                13,
                38,
                "EQ-2"
            ],
            [
                54,
                60,
                "GE-1"
            ],
            [
                64,
                65,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121732,
        "text": "The (inclusive) starting offset of elements to include, must be in range 0..count().",
        "meta": {
            "doc_index": 254679,
            "doc_name": "java.util.stream.Node.truncate(long,long,java.util.function.IntFunction<T[]>).<P>from",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                54,
                "GE-1"
            ],
            [
                73,
                74,
                "GE-2"
            ],
            [
                76,
                83,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121733,
        "text": "true if implementation types should be converted to Stubs rather than just org.omg.CORBA.Object.",
        "meta": {
            "doc_index": 224679,
            "doc_name": "com.sun.corba.se.impl.util.Utility.autoConnect(java.lang.Object,org.omg.CORBA.ORB,boolean).<P>convertToStub",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 121734,
        "text": "the starting offset into the child views >= 0",
        "meta": {
            "doc_index": 266539,
            "doc_name": "javax.swing.text.AsyncBoxView.replace(int,int,javax.swing.text.View[]).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                40,
                "GE-1"
            ],
            [
                44,
                45,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121735,
        "text": "If the XPathEvaluator was obtained by casting the Document then this must be owned by the same document and must be a Document, Element, Attribute, Text, CDATASection, Comment, ProcessingInstruction, or XPathNamespace node.",
        "meta": {
            "doc_index": 235715,
            "doc_name": "com.sun.org.apache.xpath.internal.domapi.XPathEvaluatorImpl.evaluate(java.lang.String,org.w3c.dom.Node,org.w3c.dom.xpath.XPathNSResolver,short,java.lang.Object).<P>contextNode",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                64,
                68,
                "Type-1"
            ],
            [
                118,
                126,
                "Type-2"
            ],
            [
                128,
                135,
                "Type-2"
            ],
            [
                137,
                146,
                "Type-2"
            ],
            [
                148,
                152,
                "Type-2"
            ],
            [
                154,
                166,
                "Type-2"
            ],
            [
                168,
                175,
                "Type-2"
            ],
            [
                177,
                198,
                "Type-2"
            ],
            [
                203,
                222,
                "Type-2"
            ]
        ]
    },
    {
        "id": 121737,
        "text": "the seconds to represent, may be negative",
        "meta": {
            "doc_index": 249460,
            "doc_name": "java.time.Duration.withSeconds(long).<P>seconds",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121738,
        "text": "additional time, in nanoseconds range 0-999999.",
        "meta": {
            "doc_index": 243950,
            "doc_name": "java.lang.Object.wait(long,int).<P>nanos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "GE-1"
            ],
            [
                38,
                39,
                "GE-2"
            ],
            [
                40,
                46,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121741,
        "text": "the number of digits to the right of the decimal point; must be zero or greater",
        "meta": {
            "doc_index": 259994,
            "doc_name": "javax.sql.rowset.RowSetMetaDataImpl.setScale(int,int).<P>scale",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                64,
                68,
                "GE-2"
            ],
            [
                0,
                54,
                "GE-1"
            ]
        ]
    },
    {
        "id": 121742,
        "text": "the ending position in the model >= p0",
        "meta": {
            "doc_index": 268485,
            "doc_name": "javax.swing.text.WrappedPlainView.drawUnselectedText(java.awt.Graphics,int,int,int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "GE-1"
            ],
            [
                36,
                38,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121745,
        "text": "Legal values for this argument are: EXTRACT_CONTENTS - will produce a document fragment containing the range's content.",
        "meta": {
            "doc_index": 228324,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.RangeImpl.traverseContents(int).<P>how",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                30,
                "EQ-1"
            ],
            [
                36,
                52,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121746,
        "text": "the location in the model where the fragment should start its representation >= 0",
        "meta": {
            "doc_index": 267103,
            "doc_name": "javax.swing.text.GlyphPainter1.getBoundedPosition(javax.swing.text.GlyphView,int,float,float).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "GE-1"
            ],
            [
                80,
                81,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121747,
        "text": "the X coordinate >=0",
        "meta": {
            "doc_index": 266687,
            "doc_name": "javax.swing.text.ComponentView.viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias[]).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                19,
                20,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121749,
        "text": "the height to lay out against >= 0 This is the height inside of the inset area.",
        "meta": {
            "doc_index": 267026,
            "doc_name": "javax.swing.text.FlowView.layout(int,int).<P>height",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                33,
                34,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121750,
        "text": "the height (inside of the insets) >= 0",
        "meta": {
            "doc_index": 266640,
            "doc_name": "javax.swing.text.BoxView.layout(int,int).<P>height",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GE-1"
            ],
            [
                37,
                38,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121753,
        "text": "the ending offset > p0.",
        "meta": {
            "doc_index": 267144,
            "doc_name": "javax.swing.text.GlyphView.createFragment(int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GT-1"
            ],
            [
                20,
                22,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121757,
        "text": "the left inset >= 0",
        "meta": {
            "doc_index": 266735,
            "doc_name": "javax.swing.text.CompositeView.setInsets(short,short,short,short).<P>left",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "GE-1"
            ],
            [
                18,
                19,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121758,
        "text": "This value may be negative, in which case releases must occur before any acquires will be granted.",
        "meta": {
            "doc_index": 252559,
            "doc_name": "java.util.concurrent.Semaphore.Semaphore(int).<P>permits",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121761,
        "text": "the beginning of the range >= 0",
        "meta": {
            "doc_index": 263345,
            "doc_name": "javax.swing.plaf.basic.BasicTextUI.damageRange(javax.swing.text.JTextComponent,int,int).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "GE-1"
            ],
            [
                30,
                31,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121763,
        "text": "the offset >= 0",
        "meta": {
            "doc_index": 262709,
            "doc_name": "javax.swing.JTextArea.getLineOfOffset(int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GE-1"
            ],
            [
                14,
                15,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121764,
        "text": "is the paramaterized value in range [0,1]",
        "meta": {
            "doc_index": 218821,
            "doc_name": "com.sun.scenario.animation.SplineInterpolator.eval(double,double,double).<P>t",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                26,
                "GE-1"
            ],
            [
                37,
                38,
                "GE-2"
            ],
            [
                39,
                40,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121765,
        "text": "the value to divide the duration by, positive or negative, not zero",
        "meta": {
            "doc_index": 249483,
            "doc_name": "java.time.Duration.dividedBy(long).<P>divisor",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "Negativeable"
            ],
            [
                63,
                67,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121769,
        "text": "Value to be converted; must not be Inf, -Inf, Nan, or a value <= 0.",
        "meta": {
            "doc_index": 248870,
            "doc_name": "java.text.DigitList.set(boolean,double,int).<P>source",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "NEQ-1"
            ],
            [
                35,
                38,
                "NEQ-2"
            ],
            [
                40,
                44,
                "NEQ-2"
            ],
            [
                46,
                49,
                "NEQ-2"
            ],
            [
                65,
                66,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121770,
        "text": "the column >= 0",
        "meta": {
            "doc_index": 268307,
            "doc_name": "javax.swing.text.TableView.TableCell.setGridLocation(int,int).<P>col",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GE-1"
            ],
            [
                14,
                15,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121772,
        "text": "the ending model offset >= offs1",
        "meta": {
            "doc_index": 224983,
            "doc_name": "com.sun.java.swing.plaf.windows.WindowsTextUI.WindowsHighlightPainter.paintLayer(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent,javax.swing.text.View).<P>offs1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                27,
                32,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121773,
        "text": "the number of days, positive or negative",
        "meta": {
            "doc_index": 249443,
            "doc_name": "java.time.Duration.ofDays(long).<P>days",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121780,
        "text": "the current position >= 0",
        "meta": {
            "doc_index": 268033,
            "doc_name": "javax.swing.text.PlainView.nextTabStop(float,int).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "GE-1"
            ],
            [
                24,
                25,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121782,
        "text": "the days to add, positive or negative",
        "meta": {
            "doc_index": 250248,
            "doc_name": "java.time.Period.plusDays(long).<P>daysToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121783,
        "text": "the nanosecond adjustment to the number of seconds, positive or negative",
        "meta": {
            "doc_index": 249448,
            "doc_name": "java.time.Duration.ofSeconds(long,long).<P>nanoAdjustment",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121784,
        "text": "The byte stride of the data is equal to width * 4.",
        "meta": {
            "doc_index": 216580,
            "doc_name": "com.sun.glass.ui.monocle.AndroidScreen.uploadPixels(java.nio.Buffer,int,int,int,int,float).<P>b",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "EQ-1"
            ],
            [
                40,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121785,
        "text": "the milliseconds to subtract, positive or negative",
        "meta": {
            "doc_index": 249480,
            "doc_name": "java.time.Duration.minusMillis(long).<P>millisToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121786,
        "text": "a reader overflow stamp: (s & ABITS) >= RFULL",
        "meta": {
            "doc_index": 252471,
            "doc_name": "java.util.concurrent.locks.StampedLock.tryIncReaderOverflow(long).<P>s",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                36,
                "GE-1"
            ],
            [
                40,
                45,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121787,
        "text": "The offset within the buffer array of the first buffer into which bytes are to be transferred; must be non-negative and no larger than dsts.length",
        "meta": {
            "doc_index": 245480,
            "doc_name": "java.nio.channels.AsynchronousSocketChannel.read(java.nio.ByteBuffer[],int,int,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler<java.lang.Long,? super A>).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                54,
                "Nonnegative"
            ],
            [
                135,
                146,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121790,
        "text": "the blue component, in the range 0.0-1.0",
        "meta": {
            "doc_index": 223587,
            "doc_name": "javafx.scene.paint.Color.color(double,double,double,double).<P>blue",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "GE-1"
            ],
            [
                33,
                36,
                "GE-2"
            ],
            [
                37,
                40,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121791,
        "text": "is 1st control point coordinate in range [0,1]",
        "meta": {
            "doc_index": 218825,
            "doc_name": "com.sun.scenario.animation.SplineInterpolator.evalDerivative(double,double,double).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                31,
                "GE-1"
            ],
            [
                42,
                43,
                "GE-2"
            ],
            [
                44,
                45,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121792,
        "text": "It can be the same object as point.",
        "meta": {
            "doc_index": 237859,
            "doc_name": "java.awt.font.LayoutPath.pointToPath(java.awt.geom.Point2D,java.awt.geom.Point2D).<P>location",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                2,
                "CanEQ-1"
            ],
            [
                29,
                34,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 121794,
        "text": "If this value is false, it implies we are navigating the \"right boundary\" of the range.",
        "meta": {
            "doc_index": 228346,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.RangeImpl.traverseTextNode(org.w3c.dom.Node,boolean,int).<P>isLeft",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                22,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121795,
        "text": "the field to get the range for, not null",
        "meta": {
            "doc_index": 249166,
            "doc_name": "java.time.chrono.Chronology.range(java.time.temporal.ChronoField).<P>field",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "NEQ-1"
            ],
            [
                36,
                40,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121796,
        "text": "During parsing, two digit years will be placed in the range startDate to startDate + 100 years.",
        "meta": {
            "doc_index": 249022,
            "doc_name": "java.text.SimpleDateFormat.set2DigitYearStart(java.util.Date).<P>startDate",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                31,
                "GE-1"
            ],
            [
                60,
                69,
                "GE-2"
            ],
            [
                73,
                88,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121797,
        "text": "the center frequency which must be a positive value in Hz.",
        "meta": {
            "doc_index": 223433,
            "doc_name": "javafx.scene.media.EqualizerBand.setCenterFrequency(double).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "Positive"
            ]
        ]
    },
    {
        "id": 121801,
        "text": "the end of the range (must be at least p0)",
        "meta": {
            "doc_index": 267385,
            "doc_name": "javax.swing.text.html.HTMLDocument.createLeafElement(javax.swing.text.Element,javax.swing.text.AttributeSet,int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "GE-1"
            ],
            [
                39,
                41,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121802,
        "text": "the width of subsequent non-negative numbers, 0 or greater, -1 if fixed width due to active adjacent parsing",
        "meta": {
            "doc_index": 249542,
            "doc_name": "java.time.format.DateTimeFormatterBuilder.NumberPrinterParser.NumberPrinterParser(java.time.temporal.TemporalField,int,int,java.time.format.SignStyle,int).<P>subsequentWidth",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                44,
                "GE-1"
            ],
            [
                46,
                47,
                "GE-2"
            ],
            [
                60,
                62,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121804,
        "text": "specifies whether dialog blocks input to other windows when shown; calling to setModal(true) is equivalent to setModalityType(Dialog.DEFAULT_MODALITY_TYPE), and calling to setModal(false) is equvivalent to setModalityType(Dialog.ModalityType.MODELESS)",
        "meta": {
            "doc_index": 237384,
            "doc_name": "java.awt.Dialog.setModal(boolean).<P>modal",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                78,
                93,
                "SameUsage-1"
            ],
            [
                110,
                155,
                "SameUsage-2"
            ],
            [
                172,
                187,
                "SameUsage-1"
            ],
            [
                206,
                251,
                "SameUsage-2"
            ]
        ]
    },
    {
        "id": 121805,
        "text": "the hours to subtract, positive or negative",
        "meta": {
            "doc_index": 249477,
            "doc_name": "java.time.Duration.minusHours(long).<P>hoursToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121807,
        "text": "the potential location of the start of the broken view (greater than or equal to zero).",
        "meta": {
            "doc_index": 267334,
            "doc_name": "javax.swing.text.html.HRuleView.getBreakWeight(int,float,float).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                54,
                "GE-1"
            ],
            [
                81,
                85,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121808,
        "text": "A boolean that equals true if this event is a trigger for a popup menu",
        "meta": {
            "doc_index": 237641,
            "doc_name": "java.awt.event.MouseEvent.MouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int).<P>popupTrigger",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ],
            [
                30,
                40,
                "EQ-1"
            ],
            [
                44,
                70,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121814,
        "text": "the end date, exclusive, which is converted to a ChronoLocalDate in the same chronology, not null",
        "meta": {
            "doc_index": 249095,
            "doc_name": "java.time.chrono.ChronoLocalDate.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit).<P>endExclusive",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "NEQ-1"
            ],
            [
                93,
                97,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121815,
        "text": "The number of predicates, which must be equal or less than the existing count.",
        "meta": {
            "doc_index": 235451,
            "doc_name": "com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest.setPredicateCount(int).<P>count",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "LE-1"
            ],
            [
                59,
                77,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121817,
        "text": "the MIDI note number, from 0 to 127 (60 = Middle C)",
        "meta": {
            "doc_index": 259249,
            "doc_name": "javax.sound.midi.MidiChannel.noteOff(int).<P>noteNumber",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ],
            [
                32,
                35,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121819,
        "text": "array of strings, each element of which has environment variable settings in the format name=value, or null if the subprocess should inherit the environment of the current process.",
        "meta": {
            "doc_index": 244153,
            "doc_name": "java.lang.Runtime.exec(java.lang.String[],java.lang.String[],java.io.File).<P>envp",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "EQ-1"
            ],
            [
                103,
                107,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121820,
        "text": "The precision is applied before the width, thus the output will be truncated to precision characters even if the width is greater than the precision.",
        "meta": {
            "doc_index": 252910,
            "doc_name": "java.util.Formattable.formatTo(java.util.Formatter,int,int,int).<P>precision",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                109,
                118,
                "GT-1"
            ],
            [
                135,
                148,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121821,
        "text": "the milliseconds to add, positive or negative",
        "meta": {
            "doc_index": 249469,
            "doc_name": "java.time.Duration.plusMillis(long).<P>millisToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121822,
        "text": "filter context - same as this renderer's context",
        "meta": {
            "doc_index": 219046,
            "doc_name": "com.sun.scenario.effect.impl.Renderer.getPeerInstance(com.sun.scenario.effect.FilterContext,java.lang.String,int).<P>fctx",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "EQ-1"
            ],
            [
                25,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121823,
        "text": "Ignored unless affixPattern is null.",
        "meta": {
            "doc_index": 248844,
            "doc_name": "java.text.DecimalFormat.appendAffix(java.lang.StringBuffer,java.lang.String,java.lang.String,boolean).<P>expAffix",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                27,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121824,
        "text": "The size of the region to be mapped; must be non-negative and no greater than java.lang.Integer#MAX_VALUE",
        "meta": {
            "doc_index": 245546,
            "doc_name": "java.nio.channels.FileChannel.map(java.nio.channels.FileChannel.MapMode,long,long).<P>size",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Nonnegative"
            ],
            [
                78,
                105,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121826,
        "text": "the length of the text >= 0",
        "meta": {
            "doc_index": 266894,
            "doc_name": "javax.swing.text.DefaultStyledDocument.ElementSpec.ElementSpec(javax.swing.text.AttributeSet,short,char[],int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "GE-1"
            ],
            [
                26,
                27,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121828,
        "text": "This value must be greater than 0.",
        "meta": {
            "doc_index": 244903,
            "doc_name": "java.net.DatagramSocket.setReceiveBufferSize(int).<P>size",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GT-1"
            ],
            [
                32,
                33,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121829,
        "text": "Specified page numbers cannot be less than minPage nor greater than maxPage.",
        "meta": {
            "doc_index": 240860,
            "doc_name": "java.awt.JobAttributes.setPageRanges(int[][]).<P>pageRanges",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "GE-1"
            ],
            [
                43,
                50,
                "GE-2"
            ],
            [
                68,
                75,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121830,
        "text": "the total width of the area being updated, including pixels being skipped if periodX > 1.",
        "meta": {
            "doc_index": 255660,
            "doc_name": "javax.imageio.ImageReader.processImageUpdate(java.awt.image.BufferedImage,int,int,int,int,int,int,int[]).<P>width",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                77,
                84,
                "GT-1"
            ],
            [
                87,
                88,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121834,
        "text": "the red component, in the range 0-255",
        "meta": {
            "doc_index": 223592,
            "doc_name": "javafx.scene.paint.Color.rgb(int,int,int,double).<P>red",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                32,
                33,
                "GE-2"
            ],
            [
                34,
                37,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121836,
        "text": "array containing the phase in the range [Math.PI, Math.PI] for each band.",
        "meta": {
            "doc_index": 223429,
            "doc_name": "javafx.scene.media.AudioSpectrumListener.spectrumDataUpdate(double,double,float[],float[]).<P>phases",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "GE-1"
            ],
            [
                41,
                48,
                "GE-2"
            ],
            [
                50,
                57,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121838,
        "text": "the seconds to add, may be negative",
        "meta": {
            "doc_index": 249938,
            "doc_name": "java.time.LocalDateTime.plusSeconds(long).<P>seconds",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121839,
        "text": "the start position >= 0",
        "meta": {
            "doc_index": 262716,
            "doc_name": "javax.swing.JTextArea.replaceRange(java.lang.String,int,int).<P>start",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "GE-1"
            ],
            [
                22,
                23,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121841,
        "text": "X coordinate of second control point, in range [0,1]",
        "meta": {
            "doc_index": 218818,
            "doc_name": "com.sun.scenario.animation.SplineInterpolator.SplineInterpolator(double,double,double,double).<P>px2",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                36,
                "GE-1"
            ],
            [
                48,
                49,
                "GE-2"
            ],
            [
                50,
                51,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121843,
        "text": "CLONE_CONTENTS - will leave the context tree of the range undisturbed, but will return a cloned node.",
        "meta": {
            "doc_index": 228344,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.RangeImpl.traversePartiallySelected(org.w3c.dom.Node,int).<P>how",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                87,
                100,
                "Returned"
            ]
        ]
    },
    {
        "id": 121844,
        "text": "A value greater than or equal to zero that indicates the next node position to fetch.",
        "meta": {
            "doc_index": 235416,
            "doc_name": "com.sun.org.apache.xpath.internal.axes.LocPathIterator.setNextPosition(int).<P>next",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                7,
                "GE-1"
            ],
            [
                33,
                37,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121846,
        "text": "an OID map, where each key is an object identifier in String form (a sequence of nonnegative integers separated by periods) that maps to a corresponding attribute type keyword String.",
        "meta": {
            "doc_index": 259159,
            "doc_name": "javax.security.auth.x500.X500Principal.getName(java.lang.String,java.util.Map<java.lang.String,java.lang.String>).<P>oidMap",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                67,
                122,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121850,
        "text": "the beginning of the range (must be at least 0)",
        "meta": {
            "doc_index": 267384,
            "doc_name": "javax.swing.text.html.HTMLDocument.createLeafElement(javax.swing.text.Element,javax.swing.text.AttributeSet,int,int).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "GE-1"
            ],
            [
                45,
                46,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121851,
        "text": "the starting index into the child views to insert the new views; this should be a value >= 0 and <= getViewCount",
        "meta": {
            "doc_index": 266596,
            "doc_name": "javax.swing.text.BoxView.replace(int,int,javax.swing.text.View[]).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "GE-1"
            ],
            [
                91,
                92,
                "GE-2"
            ],
            [
                100,
                112,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121852,
        "text": "the number of hours, positive or negative",
        "meta": {
            "doc_index": 249444,
            "doc_name": "java.time.Duration.ofHours(long).<P>hours",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121856,
        "text": "A positive float value indicating the expected number of bytes that will be produced for each input character",
        "meta": {
            "doc_index": 245689,
            "doc_name": "java.nio.charset.CharsetEncoder.CharsetEncoder(java.nio.charset.Charset,float,float,byte[]).<P>averageBytesPerChar",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                22,
                "Positive"
            ]
        ]
    },
    {
        "id": 121858,
        "text": "the X origin >= 0",
        "meta": {
            "doc_index": 268333,
            "doc_name": "javax.swing.text.Utilities.drawTabbedText(javax.swing.text.Segment,int,int,java.awt.Graphics,javax.swing.text.TabExpander,int).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "GE-1"
            ],
            [
                16,
                17,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121859,
        "text": "the line >= 0",
        "meta": {
            "doc_index": 262711,
            "doc_name": "javax.swing.JTextArea.getLineEndOffset(int).<P>line",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                8,
                "GE-1"
            ],
            [
                12,
                13,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121860,
        "text": "a positive value specifying the bandwidth of the band in Hertz.",
        "meta": {
            "doc_index": 223431,
            "doc_name": "javafx.scene.media.EqualizerBand.EqualizerBand(double,double,double).<P>bandwidth",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                28,
                53,
                "Positive"
            ]
        ]
    },
    {
        "id": 121861,
        "text": "the line dash offset in the range (-inf, +inf)",
        "meta": {
            "doc_index": 221296,
            "doc_name": "javafx.scene.canvas.GraphicsContext.setLineDashOffset(double).<P>dashOffset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "GT-1"
            ],
            [
                35,
                39,
                "GT-2"
            ],
            [
                41,
                45,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121865,
        "text": "The maximum number of bytes to be transferred; must be non-negative",
        "meta": {
            "doc_index": 245535,
            "doc_name": "java.nio.channels.FileChannel.transferTo(long,long,java.nio.channels.WritableByteChannel).<P>count",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121866,
        "text": "the current layout span >= 0",
        "meta": {
            "doc_index": 267047,
            "doc_name": "javax.swing.text.FlowView.FlowStrategy.adjustRow(javax.swing.text.FlowView,int,int,int).<P>desiredSpan",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121867,
        "text": "the index into the String >= 0",
        "meta": {
            "doc_index": 241629,
            "doc_name": "java.awt.TextComponent.AccessibleAWTTextComponent.getCharacterBounds(int).<P>i",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "GE-1"
            ],
            [
                29,
                30,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121868,
        "text": "In case the support for extended mouse buttons is enabled by Java, then in addition to the standard buttons, MouseEvent objects can be created using buttons from the range starting from 4 to MouseInfo.getNumberOfButtons() if the mouse has more than three buttons.",
        "meta": {
            "doc_index": 237642,
            "doc_name": "java.awt.event.MouseEvent.MouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int).<P>button",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                186,
                187,
                "GE-2"
            ],
            [
                191,
                221,
                "LE-2"
            ],
            [
                162,
                171,
                "GE-1"
            ]
        ]
    },
    {
        "id": 121869,
        "text": "Valid volume range is 0.0 to 1.0, where 0.0 is effectively muted and 1.0 is full volume.",
        "meta": {
            "doc_index": 223420,
            "doc_name": "javafx.scene.media.AudioClip.play(double,double,double,double,int).<P>volume",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "GE-1"
            ],
            [
                22,
                25,
                "GE-2"
            ],
            [
                29,
                32,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121874,
        "text": "If flags == USE_ALL_BEANINFO then we use all of the BeanInfo classes we can discover.",
        "meta": {
            "doc_index": 242070,
            "doc_name": "java.beans.Introspector.getBeanInfo(java.lang.Class<?>,int).<P>flags",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                28,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121875,
        "text": "the length of the change >= 0",
        "meta": {
            "doc_index": 266412,
            "doc_name": "javax.swing.text.AbstractDocument.DefaultDocumentEvent.DefaultDocumentEvent(int,int,javax.swing.event.DocumentEvent.EventType).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "GE-1"
            ],
            [
                28,
                29,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121876,
        "text": "the position the view would be located at for the purpose of tab expansion >= 0.",
        "meta": {
            "doc_index": 268274,
            "doc_name": "javax.swing.text.TabableView.getTabbedSpan(float,javax.swing.text.TabExpander).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                78,
                79,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121879,
        "text": "the program index (in the range from 0 to 127)",
        "meta": {
            "doc_index": 259338,
            "doc_name": "javax.sound.midi.Patch.Patch(int,int).<P>program",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                37,
                38,
                "GE-2"
            ],
            [
                42,
                45,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121881,
        "text": "the seconds to subtract, may be negative",
        "meta": {
            "doc_index": 250021,
            "doc_name": "java.time.LocalTime.minusSeconds(long).<P>secondsToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121883,
        "text": "The TargetedNotification array in the returned NotificationResult may contain more than this number of elements but will not contain more than this number of different notifications.",
        "meta": {
            "doc_index": 225255,
            "doc_name": "com.sun.jmx.remote.internal.NotificationBuffer.fetchNotifications(com.sun.jmx.remote.internal.NotificationBufferFilter,long,long,int).<P>maxNotifications",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                47,
                65,
                "Returned"
            ]
        ]
    },
    {
        "id": 121884,
        "text": "A limit value larger than the size of the input buffer will cause a new buffer to be allocated whose size is no smaller than limit.",
        "meta": {
            "doc_index": 242264,
            "doc_name": "java.io.BufferedReader.mark(int).<P>readAheadLimit",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "GT-1"
            ],
            [
                26,
                54,
                "GT-2"
            ],
            [
                101,
                105,
                "GE-1"
            ],
            [
                125,
                130,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121885,
        "text": "It must be greater than or equal to zero.",
        "meta": {
            "doc_index": 247619,
            "doc_name": "java.sql.CallableStatement.registerOutParameter(int,java.sql.SQLType,int).<P>scale",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                2,
                "GE-1"
            ],
            [
                36,
                40,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121890,
        "text": "the unmanipulated position, which will be mapped into the range 0 to 1",
        "meta": {
            "doc_index": 218659,
            "doc_name": "com.sun.prism.j2d.paint.MultipleGradientPaintContext.indexIntoGradientsArrays(float).<P>position",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "GE-1"
            ],
            [
                64,
                65,
                "GE-2"
            ],
            [
                69,
                70,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121893,
        "text": "the position to convert >= 0",
        "meta": {
            "doc_index": 263308,
            "doc_name": "javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView.modelToView(int,javax.swing.text.Position.Bias,int,javax.swing.text.Position.Bias,java.awt.Shape).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121894,
        "text": "the position to convert >=0",
        "meta": {
            "doc_index": 266685,
            "doc_name": "javax.swing.text.ComponentView.modelToView(int,java.awt.Shape,javax.swing.text.Position.Bias).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                26,
                27,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121897,
        "text": "the start offset of the range to highlight >= 0",
        "meta": {
            "doc_index": 266858,
            "doc_name": "javax.swing.text.DefaultHighlighter.addHighlight(int,int,javax.swing.text.Highlighter.HighlightPainter).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                42,
                "GE-1"
            ],
            [
                46,
                47,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121899,
        "text": "If flags == IGNORE_IMMEDIATE_BEANINFO then we ignore any BeanInfo associated with the specified beanClass.",
        "meta": {
            "doc_index": 242070,
            "doc_name": "java.beans.Introspector.getBeanInfo(java.lang.Class<?>,int).<P>flags",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                12,
                37,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121903,
        "text": "an integer greater than zero and less than or equal to maxPage.",
        "meta": {
            "doc_index": 240858,
            "doc_name": "java.awt.JobAttributes.setMinPage(int).<P>minPage",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GT-1"
            ],
            [
                24,
                28,
                "GT-2"
            ],
            [
                55,
                62,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121904,
        "text": "the new query time-out limit in seconds; zero means that there is no limit; must not be less than zero",
        "meta": {
            "doc_index": 259718,
            "doc_name": "javax.sql.rowset.BaseRowSet.setQueryTimeout(int).<P>seconds",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "EQ-1"
            ],
            [
                41,
                45,
                "EQ-2"
            ],
            [
                98,
                102,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121905,
        "text": "the bandwidth which must be a positive value in Hz.",
        "meta": {
            "doc_index": 223434,
            "doc_name": "javafx.scene.media.EqualizerBand.setBandwidth(double).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Positive"
            ]
        ]
    },
    {
        "id": 121906,
        "text": "the maximum size of the gap; one of DEFAULT_SIZE, PREFERRED_SIZE or a value >= 0",
        "meta": {
            "doc_index": 261212,
            "doc_name": "javax.swing.GroupLayout.SequentialGroup.addPreferredGap(javax.swing.JComponent,javax.swing.JComponent,javax.swing.LayoutStyle.ComponentPlacement,int,int).<P>max",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "EQ-1"
            ],
            [
                36,
                64,
                "EQ-2"
            ],
            [
                79,
                80,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121910,
        "text": "The new position, a non-negative integer counting the number of bytes from the beginning of the entity",
        "meta": {
            "doc_index": 245587,
            "doc_name": "java.nio.channels.SeekableByteChannel.position(long).<P>newPosition",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 121911,
        "text": "the line to draw >= 0",
        "meta": {
            "doc_index": 268000,
            "doc_name": "javax.swing.text.PlainView.drawLine(int,java.awt.Graphics,int,int).<P>lineIndex",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                20,
                21,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121912,
        "text": "value in the range {0-positive infinity}, with any other value being ignored and leaving the value unchanged.",
        "meta": {
            "doc_index": 221291,
            "doc_name": "javafx.scene.canvas.GraphicsContext.setLineWidth(double).<P>lw",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                5,
                "GT-1"
            ],
            [
                20,
                21,
                "GT-2"
            ],
            [
                22,
                39,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121913,
        "text": "specifies where a potential break is desired along the given axis >= 0",
        "meta": {
            "doc_index": 267955,
            "doc_name": "javax.swing.text.ParagraphView.breakView(int,float,java.awt.Shape).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                65,
                "GE-1"
            ],
            [
                69,
                70,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121915,
        "text": "the minutes to add, may be negative",
        "meta": {
            "doc_index": 250013,
            "doc_name": "java.time.LocalTime.plusMinutes(long).<P>minutesToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121916,
        "text": "the number of consecutive characters to be copied; the value for length must be 0 or greater",
        "meta": {
            "doc_index": 247632,
            "doc_name": "java.sql.Clob.getSubString(long,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                65,
                71,
                "GE-1"
            ],
            [
                80,
                81,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121922,
        "text": "x coordinate of the view location to convert >= 0",
        "meta": {
            "doc_index": 266708,
            "doc_name": "javax.swing.text.CompositeView.viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias[]).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                33,
                "GE-1"
            ],
            [
                48,
                49,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121927,
        "text": "These items must be of the same type as the TreeView generic type, such that upon selection, they replace the existing value in the TreeItem that is being edited (as noted in the TreeView#editingItemProperty().",
        "meta": {
            "doc_index": 221703,
            "doc_name": "javafx.scene.control.cell.ChoiceBoxTreeCell.forTreeView(javafx.collections.ObservableList<T>).<P>items",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Type-1"
            ],
            [
                40,
                65,
                "Type-2"
            ]
        ]
    },
    {
        "id": 121930,
        "text": "the width of subsequent non-negative numbers, 0 or greater",
        "meta": {
            "doc_index": 249637,
            "doc_name": "java.time.format.DateTimeFormatterBuilder.ReducedPrinterParser.withSubsequentWidth(int).<P>subsequentWidth",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                44,
                "Nonnegative"
            ],
            [
                46,
                47,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121931,
        "text": "The externally visible stub seen by the user (may be the same as stub)",
        "meta": {
            "doc_index": 224646,
            "doc_name": "com.sun.corba.se.impl.presentation.rmi.StubConnectImpl.connect(com.sun.corba.se.impl.ior.StubIORImpl,org.omg.CORBA.Object,org.omg.CORBA.portable.ObjectImpl,org.omg.CORBA.ORB).<P>proxy",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                44,
                "CanEQ-1"
            ],
            [
                65,
                69,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 121935,
        "text": "The behavior is unspecified if this parameter is negative.",
        "meta": {
            "doc_index": 257769,
            "doc_name": "javax.management.remote.rmi.RMIConnection.fetchNotifications(long,int,long).<P>timeout",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                45,
                "Negative"
            ]
        ]
    },
    {
        "id": 121937,
        "text": "The maximum number of floats to be written to the given array; must be non-negative and no larger than dst.length - offset",
        "meta": {
            "doc_index": 246101,
            "doc_name": "java.nio.FloatBuffer.get(float[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                61,
                "Nonnegative"
            ],
            [
                103,
                122,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121938,
        "text": "A negative value for progress indicates that the progress is indeterminate.",
        "meta": {
            "doc_index": 219366,
            "doc_name": "javafx.application.Preloader.ProgressNotification.ProgressNotification(double).<P>progress",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                29,
                "Negative"
            ]
        ]
    },
    {
        "id": 121939,
        "text": "the years to represent, may be negative",
        "meta": {
            "doc_index": 250242,
            "doc_name": "java.time.Period.withYears(int).<P>years",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 121941,
        "text": "The second element must be must be greater than 0.",
        "meta": {
            "doc_index": 241142,
            "doc_name": "java.awt.PageAttributes.setPrinterResolution(int[]).<P>printerResolution",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "GT-1"
            ],
            [
                48,
                49,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121942,
        "text": "the ending document offset >= p0",
        "meta": {
            "doc_index": 267119,
            "doc_name": "javax.swing.text.GlyphView.getText(int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "GE-1"
            ],
            [
                30,
                32,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121946,
        "text": "the Unicode range given by a NumericShaper.Range constant.",
        "meta": {
            "doc_index": 237888,
            "doc_name": "java.awt.font.NumericShaper.getShaper(java.awt.font.NumericShaper.Range).<P>singleRange",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "EQ-1"
            ],
            [
                29,
                57,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121947,
        "text": "the number of existing views to replace >= 0",
        "meta": {
            "doc_index": 266540,
            "doc_name": "javax.swing.text.AsyncBoxView.replace(int,int,javax.swing.text.View[]).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "GE-1"
            ],
            [
                43,
                44,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121949,
        "text": "If true, the modality type property is set to DEFAULT_MODALITY_TYPE, otherwise the dialog is modeless.",
        "meta": {
            "doc_index": 261512,
            "doc_name": "javax.swing.JDialog.JDialog(java.awt.Dialog,boolean).<P>modal",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                35,
                "EQ-1"
            ],
            [
                46,
                67,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121950,
        "text": "This parameter is ignored if its value is greater than or equal to the actual digest length.",
        "meta": {
            "doc_index": 247090,
            "doc_name": "java.security.MessageDigestSpi.engineDigest(byte[],int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                38,
                "GE-1"
            ],
            [
                67,
                91,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121951,
        "text": "If the length of the array is greater than 6, the first 6 values are taken.",
        "meta": {
            "doc_index": 238179,
            "doc_name": "java.awt.geom.AffineTransform.AffineTransform(double[]).<P>flatmatrix",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                26,
                "GT-1"
            ],
            [
                43,
                44,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121952,
        "text": "a float array with length equal to the number of CMYK components",
        "meta": {
            "doc_index": 260870,
            "doc_name": "javax.swing.colorchooser.ColorModelCMYK.RGBtoCMYK(float[],float[]).<P>cmyk",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                19,
                25,
                "EQ-1"
            ],
            [
                35,
                64,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 121957,
        "text": "the beginning position in the model >= 0",
        "meta": {
            "doc_index": 268484,
            "doc_name": "javax.swing.text.WrappedPlainView.drawUnselectedText(java.awt.Graphics,int,int,int,int).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "GE-1"
            ],
            [
                39,
                40,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121959,
        "text": "a positive value specifying the spectral update interval",
        "meta": {
            "doc_index": 223467,
            "doc_name": "javafx.scene.media.MediaPlayer.setAudioSpectrumInterval(double).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                16,
                "Positive"
            ]
        ]
    },
    {
        "id": 121961,
        "text": "the gain in the range [MIN_GAIN, MAX_GAIN].",
        "meta": {
            "doc_index": 223435,
            "doc_name": "javafx.scene.media.EqualizerBand.setGain(double).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                8,
                "GE-1"
            ],
            [
                23,
                31,
                "GE-2"
            ],
            [
                33,
                41,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121962,
        "text": "the starting context, such as NumericShaper.Range.EUROPEAN",
        "meta": {
            "doc_index": 237894,
            "doc_name": "java.awt.font.NumericShaper.getContextualShaper(java.util.Set<java.awt.font.NumericShaper.Range>,java.awt.font.NumericShaper.Range).<P>defaultContext",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "CanEQ-1"
            ],
            [
                30,
                58,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 121964,
        "text": "the recurring last rules, size 16 or less, not null",
        "meta": {
            "doc_index": 250511,
            "doc_name": "java.time.zone.ZoneRules.of(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List<java.time.zone.ZoneOffsetTransition>,java.util.List<java.time.zone.ZoneOffsetTransition>,java.util.List<java.time.zone.ZoneOffsetTransitionRule>).<P>lastRules",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "LE-1"
            ],
            [
                31,
                33,
                "LE-2"
            ],
            [
                47,
                51,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121966,
        "text": "The height of the area of the first tile within the destination rectangle, if <= 0, then the use intrinsic value",
        "meta": {
            "doc_index": 218244,
            "doc_name": "com.sun.javafx.sg.prism.NGRegion.paintTiles(com.sun.prism.Graphics,com.sun.prism.Image,javafx.scene.layout.BackgroundRepeat,javafx.scene.layout.BackgroundRepeat,javafx.geometry.Side,javafx.geometry.Side,float,float,float,float,int,int,int,int,float,float,float,float).<P>tileHeight",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                73,
                "LE-1"
            ],
            [
                81,
                82,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121967,
        "text": "the offset to create a position for >= 0",
        "meta": {
            "doc_index": 268093,
            "doc_name": "javax.swing.text.StringContent.createPosition(int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "GE-1"
            ],
            [
                39,
                40,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121968,
        "text": "the start of the change >= 0",
        "meta": {
            "doc_index": 268235,
            "doc_name": "javax.swing.text.StyledDocument.setParagraphAttributes(int,int,javax.swing.text.AttributeSet,boolean).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121969,
        "text": "the local location in the model to translate >= 0",
        "meta": {
            "doc_index": 263337,
            "doc_name": "javax.swing.plaf.basic.BasicTextUI.modelToView(javax.swing.text.JTextComponent,int).<P>pos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                44,
                "GE-1"
            ],
            [
                48,
                49,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121970,
        "text": "If non-positive, an IllegalArgumentException will be thrown.",
        "meta": {
            "doc_index": 217826,
            "doc_name": "com.sun.javafx.iio.ImageLoader.load(int,int,int,boolean,boolean).<P>width",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                20,
                44,
                "Thrown"
            ]
        ]
    },
    {
        "id": 121972,
        "text": "This must be >= 0 and < the end.",
        "meta": {
            "doc_index": 222188,
            "doc_name": "javafx.scene.control.TextInputControl.replaceText(int,int,java.lang.String).<P>start",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "GE-1"
            ],
            [
                16,
                17,
                "GE-2"
            ],
            [
                24,
                31,
                "LT-2"
            ]
        ]
    },
    {
        "id": 121974,
        "text": "the preferred size of the grap; one of DEFAULT_SIZE or a value >= 0",
        "meta": {
            "doc_index": 261211,
            "doc_name": "javax.swing.GroupLayout.SequentialGroup.addPreferredGap(javax.swing.JComponent,javax.swing.JComponent,javax.swing.LayoutStyle.ComponentPlacement,int,int).<P>pref",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "EQ-1"
            ],
            [
                39,
                51,
                "EQ-2"
            ],
            [
                66,
                67,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121980,
        "text": "the upper bound (exclusive), must not equal origin",
        "meta": {
            "doc_index": 252595,
            "doc_name": "java.util.concurrent.ThreadLocalRandom.internalNextLong(long,long).<P>bound",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "NEQ-1"
            ],
            [
                44,
                50,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121982,
        "text": "when true, return only indices for unique values; when false, return indices regardless of whether unique or not",
        "meta": {
            "doc_index": 247749,
            "doc_name": "java.sql.DatabaseMetaData.getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean).<P>unique",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                48,
                "Returned"
            ],
            [
                69,
                76,
                "Returned"
            ]
        ]
    },
    {
        "id": 121984,
        "text": "specifies the relative length from pos where a potential break is desired >= 0.",
        "meta": {
            "doc_index": 267138,
            "doc_name": "javax.swing.text.GlyphView.getBreakWeight(int,float,float).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                62,
                "GE-1"
            ],
            [
                77,
                78,
                "GE-2"
            ]
        ]
    },
    {
        "id": 121986,
        "text": "The index, relative to the current position, of the first character in the subsequence; must be non-negative and no larger than remaining()",
        "meta": {
            "doc_index": 245651,
            "doc_name": "java.nio.CharBuffer.subSequence(int,int).<P>start",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "Nonnegative"
            ],
            [
                128,
                139,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121990,
        "text": "the name of the method (which must not be \"<init>\")",
        "meta": {
            "doc_index": 243558,
            "doc_name": "java.lang.invoke.MethodHandles.Lookup.findSpecial(java.lang.Class<?>,java.lang.String,java.lang.invoke.MethodType,java.lang.Class<?>).<P>name",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "NEQ-1"
            ],
            [
                42,
                50,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 121991,
        "text": "length of first run to be merged (must be > 0)",
        "meta": {
            "doc_index": 251424,
            "doc_name": "java.util.ComparableTimSort.mergeLo(int,int,int,int).<P>len1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "GT-1"
            ],
            [
                44,
                45,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121993,
        "text": "The width of the backing store, must be > 0 (typically > 512)",
        "meta": {
            "doc_index": 218614,
            "doc_name": "com.sun.prism.impl.packrect.RectanglePacker.RectanglePacker(com.sun.prism.Texture,int,int).<P>width",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "GT-1"
            ],
            [
                42,
                43,
                "GT-2"
            ]
        ]
    },
    {
        "id": 121998,
        "text": "This must be > the start, and <= the length of the text.",
        "meta": {
            "doc_index": 222185,
            "doc_name": "javafx.scene.control.TextInputControl.deleteText(int,int).<P>end",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "GT-1"
            ],
            [
                15,
                24,
                "GT-2"
            ],
            [
                33,
                55,
                "LE-2"
            ]
        ]
    },
    {
        "id": 121999,
        "text": "specifies the distance along the axis where a potential break is desired >= 0.",
        "meta": {
            "doc_index": 267142,
            "doc_name": "javax.swing.text.GlyphView.breakView(int,int,float,float).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                37,
                "GE-1"
            ],
            [
                76,
                77,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122000,
        "text": "This limit is defined by the relevant number of buttons that may hypothetically exist on the mouse but it is greater than the MouseInfo.getNumberOfButtons().",
        "meta": {
            "doc_index": 237559,
            "doc_name": "java.awt.event.InputEvent.getMaskForButton(int).<P>button",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GT-1"
            ],
            [
                126,
                156,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122001,
        "text": "the total height of the area being updated, including pixels being skipped if periodY > 1.",
        "meta": {
            "doc_index": 255661,
            "doc_name": "javax.imageio.ImageReader.processImageUpdate(java.awt.image.BufferedImage,int,int,int,int,int,int,int[]).<P>height",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                78,
                85,
                "GT-1"
            ],
            [
                88,
                89,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122002,
        "text": "the number of existing child views to remove; this should be a value >= 0 and <= (getViewCount() - offset)",
        "meta": {
            "doc_index": 266696,
            "doc_name": "javax.swing.text.CompositeView.replace(int,int,javax.swing.text.View[]).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                44,
                "GE-1"
            ],
            [
                72,
                73,
                "GE-2"
            ],
            [
                81,
                106,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122003,
        "text": "The index, relative to the current position, of the character following the last character in the subsequence; must be no smaller than start and no larger than remaining()",
        "meta": {
            "doc_index": 245652,
            "doc_name": "java.nio.CharBuffer.subSequence(int,int).<P>end",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "GE-1"
            ],
            [
                135,
                140,
                "GE-2"
            ],
            [
                160,
                171,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122006,
        "text": "The conversion state for the text range - RAW_TEXT or CONVERTED_TEXT",
        "meta": {
            "doc_index": 239172,
            "doc_name": "java.awt.im.InputMethodHighlight.InputMethodHighlight(boolean,int).<P>state",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "EQ-1"
            ],
            [
                42,
                50,
                "EQ-2"
            ],
            [
                54,
                68,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122007,
        "text": "which plane to get the stride for, valid range is zero to planeCount() non-inclusive",
        "meta": {
            "doc_index": 218744,
            "doc_name": "com.sun.prism.MediaFrame.strideForPlane(int).<P>planeIndex",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                46,
                "GT-1"
            ],
            [
                50,
                54,
                "GT-2"
            ],
            [
                58,
                70,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122011,
        "text": "the years to add, positive or negative",
        "meta": {
            "doc_index": 250246,
            "doc_name": "java.time.Period.plusYears(long).<P>yearsToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122015,
        "text": "the position of the last character (>=0)",
        "meta": {
            "doc_index": 268422,
            "doc_name": "javax.swing.text.View.modelToView(int,javax.swing.text.Position.Bias,int,javax.swing.text.Position.Bias,java.awt.Shape).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                34,
                "GE-1"
            ],
            [
                38,
                39,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122017,
        "text": "True if range should be included.",
        "meta": {
            "doc_index": 227491,
            "doc_name": "com.sun.org.apache.regexp.internal.RECompiler.RERange.include(int,int,boolean).<P>include",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 122021,
        "text": "This message will only be displayed if the current debug level is at least equal to this value.",
        "meta": {
            "doc_index": 232447,
            "doc_name": "com.sun.org.apache.xml.internal.resolver.helpers.Debug.message(int,java.lang.String,java.lang.String,java.lang.String).<P>level",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                39,
                62,
                "GE-1"
            ],
            [
                84,
                94,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122022,
        "text": "The number of bytes to be read from the given array; must be non-negative and no larger than array.length - offset",
        "meta": {
            "doc_index": 245374,
            "doc_name": "java.nio.ByteBuffer.put(byte[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                51,
                "Nonnegative"
            ],
            [
                93,
                114,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122023,
        "text": "the index (greater than start) of the first parameter type after not to remove",
        "meta": {
            "doc_index": 243648,
            "doc_name": "java.lang.invoke.MethodType.dropParameterTypes(int,int).<P>end",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "GT-1"
            ],
            [
                24,
                29,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122026,
        "text": "The maximum number of bytes to be written to the given array; must be non-negative and no larger than dst.length - offset",
        "meta": {
            "doc_index": 245369,
            "doc_name": "java.nio.ByteBuffer.get(byte[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Nonnegative"
            ],
            [
                102,
                121,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122027,
        "text": "the number of rows; if rows is less than 0, rows is set to 0",
        "meta": {
            "doc_index": 241598,
            "doc_name": "java.awt.TextArea.TextArea(java.lang.String,int,int,int).<P>rows",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                27,
                "LT-1"
            ],
            [
                41,
                42,
                "LT-2"
            ],
            [
                44,
                48,
                "EQ-1"
            ],
            [
                59,
                60,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122028,
        "text": "y coordinate of the view location to convert >= 0",
        "meta": {
            "doc_index": 268539,
            "doc_name": "javax.swing.text.ZoneView.Zone.viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias[]).<P>y",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                33,
                "GE-1"
            ],
            [
                48,
                49,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122032,
        "text": "the amount of the specified unit to subtract, may be negative",
        "meta": {
            "doc_index": 250272,
            "doc_name": "java.time.temporal.Temporal.minus(long,java.time.temporal.TemporalUnit).<P>amountToSubtract",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122035,
        "text": "If the length of the array is less than 6, only the first 4 values are taken.",
        "meta": {
            "doc_index": 238179,
            "doc_name": "java.awt.geom.AffineTransform.AffineTransform(double[]).<P>flatmatrix",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                26,
                "LT-1"
            ],
            [
                40,
                41,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122036,
        "text": "It is allowed to pass negative values",
        "meta": {
            "doc_index": 237629,
            "doc_name": "java.awt.event.MouseEvent.MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean).<P>y",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                37,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122037,
        "text": "Passing negative value is not recommended",
        "meta": {
            "doc_index": 237621,
            "doc_name": "java.awt.event.MouseEvent.MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean,int).<P>clickCount",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                22,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122040,
        "text": "Find the slot that has a value that is greater than or identical to this argument.",
        "meta": {
            "doc_index": 231661,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBase.findGTE(int[],int,int,int).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                30,
                "GE-1"
            ],
            [
                68,
                81,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122041,
        "text": "the number of characters to remove >= 0",
        "meta": {
            "doc_index": 266435,
            "doc_name": "javax.swing.text.AbstractDocument.remove(int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                34,
                "GE-1"
            ],
            [
                38,
                39,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122042,
        "text": "a float array with length equal to the number of HSV components",
        "meta": {
            "doc_index": 260886,
            "doc_name": "javax.swing.colorchooser.ColorModelHSV.HSVtoRGB(float[],float[]).<P>hsv",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                19,
                25,
                "EQ-1"
            ],
            [
                35,
                63,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122044,
        "text": "The number of bytes to be read from the given array; must be non-negative and no larger than array.length",
        "meta": {
            "doc_index": 268997,
            "doc_name": "javax.xml.bind.attachment.AttachmentMarshaller.addMtomAttachment(byte[],int,int,java.lang.String,java.lang.String,java.lang.String).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                51,
                "Nonnegative"
            ],
            [
                93,
                105,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122046,
        "text": "the end temporal, exclusive, converted to be of the same type as this object, not null",
        "meta": {
            "doc_index": 250274,
            "doc_name": "java.time.temporal.Temporal.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit).<P>endExclusive",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "NEQ-1"
            ],
            [
                82,
                86,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 122047,
        "text": "Also, the delegationSubjects parameter itself can be null, which is equivalent to an array of null values with the same size as the names and filters arrays.",
        "meta": {
            "doc_index": 257763,
            "doc_name": "javax.management.remote.rmi.RMIConnection.addNotificationListeners(javax.management.ObjectName[],java.rmi.MarshalledObject[],javax.security.auth.Subject[]).<P>delegationSubjects",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                6,
                38,
                "CanEQ-1"
            ],
            [
                53,
                57,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 122049,
        "text": "the starting Y coordinate >= 0",
        "meta": {
            "doc_index": 268006,
            "doc_name": "javax.swing.text.PlainView.drawUnselectedText(java.awt.Graphics,int,int,int,int).<P>y",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "GE-1"
            ],
            [
                29,
                30,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122050,
        "text": "a non-negative integer.",
        "meta": {
            "doc_index": 257633,
            "doc_name": "javax.management.remote.JMXConnectionNotification.JMXConnectionNotification(java.lang.String,java.lang.Object,java.lang.String,long,java.lang.String,java.lang.Object).<P>sequenceNumber",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                22,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122051,
        "text": "Negative values move to previous boundaries and positive values move to later boundaries.",
        "meta": {
            "doc_index": 248676,
            "doc_name": "java.text.BreakIterator.next(int).<P>n",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                15,
                "Negative"
            ],
            [
                57,
                63,
                "Positive"
            ]
        ]
    },
    {
        "id": 122054,
        "text": "the composite data value whose index in this TabularData instance is to be calculated; must be of the same composite type as this instance's row type; must not be null.",
        "meta": {
            "doc_index": 257335,
            "doc_name": "javax.management.openmbean.TabularDataSupport.calculateIndex(javax.management.openmbean.CompositeData).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Type-1"
            ],
            [
                125,
                149,
                "Type-2"
            ],
            [
                163,
                167,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 122055,
        "text": "Passing negative parameter is not recommended.",
        "meta": {
            "doc_index": 237627,
            "doc_name": "java.awt.event.MouseEvent.MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean).<P>modifiers",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                26,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122057,
        "text": "the total span to be allocated >= 0.",
        "meta": {
            "doc_index": 266057,
            "doc_name": "javax.swing.SizeRequirements.calculateTiledPositions(int,javax.swing.SizeRequirements,javax.swing.SizeRequirements[],int[],int[],boolean).<P>allocated",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "GE-1"
            ],
            [
                34,
                35,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122059,
        "text": "If the sum of offset and count exceeds length, then all 16-bit units to the end of the data are replaced; (i.e., the effect is the same as a remove method call with the same range, followed by an append method invocation).",
        "meta": {
            "doc_index": 271724,
            "doc_name": "org.w3c.dom.CharacterData.replaceData(int,int,java.lang.String).<P>count",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                30,
                "GT-1"
            ],
            [
                39,
                45,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122064,
        "text": "the index into the model >= 0",
        "meta": {
            "doc_index": 266415,
            "doc_name": "javax.swing.text.AbstractDocument.ElementEdit.ElementEdit(javax.swing.text.Element,int,javax.swing.text.Element[],javax.swing.text.Element[]).<P>index",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "GE-1"
            ],
            [
                28,
                29,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122065,
        "text": "This should be a value greater or equal to the element starting offset and less than the element ending offset.",
        "meta": {
            "doc_index": 267143,
            "doc_name": "javax.swing.text.GlyphView.createFragment(int,int).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "GE-1"
            ],
            [
                43,
                70,
                "GE-2"
            ],
            [
                85,
                110,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122067,
        "text": "meta-message type (must be less than 128)",
        "meta": {
            "doc_index": 259238,
            "doc_name": "javax.sound.midi.MetaMessage.MetaMessage(int,byte[],int).<P>type",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "LT-1"
            ],
            [
                37,
                40,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122069,
        "text": "the months to subtract, may be negative",
        "meta": {
            "doc_index": 250619,
            "doc_name": "java.time.ZonedDateTime.minusMonths(long).<P>months",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122071,
        "text": "true if the operating systems end-of-line separator should be output rather than a new-line character.",
        "meta": {
            "doc_index": 234494,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.ToTextStream.writeNormalizedChars(char[],int,int,boolean).<P>useLineSep",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 122073,
        "text": "The size must be <= the length of the elements array",
        "meta": {
            "doc_index": 218325,
            "doc_name": "com.sun.javafx.UnmodifiableArrayList.UnmodifiableArrayList(T[],int).<P>size",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                8,
                "LE-1"
            ],
            [
                20,
                52,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122074,
        "text": "This is always an absolute URI, unless it is null (likely because the XMLReader was given an InputSource without one).",
        "meta": {
            "doc_index": 272083,
            "doc_name": "org.xml.sax.ext.EntityResolver2.resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String).<P>baseURI",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                39,
                41,
                "EQ-1"
            ],
            [
                45,
                49,
                "EQ-2"
            ],
            [
                0,
                4,
                "EQ-1"
            ],
            [
                15,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122077,
        "text": "If it is greater than or equal to the length of this string, it has the same effect as if it were equal to one less than the length of this string: this entire string may be searched.",
        "meta": {
            "doc_index": 244403,
            "doc_name": "java.lang.String.lastIndexOf(int,int).<P>fromIndex",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                59,
                "GE-2"
            ],
            [
                3,
                5,
                "GE-1"
            ],
            [
                90,
                92,
                "EQ-1"
            ],
            [
                107,
                146,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122079,
        "text": "the height to lay out against >= 0 (not used by paragraph, but used by the superclass).",
        "meta": {
            "doc_index": 267541,
            "doc_name": "javax.swing.text.html.LineView.layout(int,int).<P>height",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                33,
                34,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122081,
        "text": "the MIDI note number, from 0 to 127 (60 = Middle C) If the device does not support setting poly pressure, this method always returns 0.",
        "meta": {
            "doc_index": 259252,
            "doc_name": "javax.sound.midi.MidiChannel.getPolyPressure(int).<P>noteNumber",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ],
            [
                32,
                35,
                "LE-2"
            ],
            [
                106,
                117,
                "Returns-1"
            ],
            [
                133,
                134,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 122082,
        "text": "Negative numbers are not allowed.",
        "meta": {
            "doc_index": 223116,
            "doc_name": "javafx.scene.layout.CornerRadii.CornerRadii(double,double,double,double,boolean).<P>bottomLeft",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                16,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122083,
        "text": "the nanos to add, may be negative",
        "meta": {
            "doc_index": 249955,
            "doc_name": "java.time.LocalDateTime.plusWithOverflow(java.time.LocalDate,long,long,long,long,int).<P>nanos",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122085,
        "text": "number of buffers to create; must be greater than one",
        "meta": {
            "doc_index": 237051,
            "doc_name": "java.awt.Component.FlipBufferStrategy.createBuffers(int,java.awt.BufferCapabilities).<P>numBuffers",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                53,
                "GT-2"
            ],
            [
                0,
                27,
                "GT-1"
            ]
        ]
    },
    {
        "id": 122089,
        "text": "an arrival phase number, or negative value if terminated; this argument is normally the value returned by a previous call to arrive or arriveAndDeregister.",
        "meta": {
            "doc_index": 252488,
            "doc_name": "java.util.concurrent.Phaser.awaitAdvanceInterruptibly(int).<P>phase",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Negative"
            ],
            [
                58,
                71,
                "EQ-1"
            ],
            [
                84,
                154,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122090,
        "text": "If maximumDigits is lower than the number of significant digits in source, the representation will be rounded.",
        "meta": {
            "doc_index": 248893,
            "doc_name": "java.text.DigitList.set(boolean,java.math.BigInteger,int).<P>maximumDigits",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                16,
                "LT-1"
            ],
            [
                31,
                73,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122091,
        "text": "the span to layout to >= 0",
        "meta": {
            "doc_index": 266611,
            "doc_name": "javax.swing.text.BoxView.setSpanOnAxis(int,float).<P>span",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "GE-1"
            ],
            [
                25,
                26,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122093,
        "text": "This should be a value less than or equal to the elements end offset and greater than the elements starting offset.",
        "meta": {
            "doc_index": 267144,
            "doc_name": "javax.swing.text.GlyphView.createFragment(int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "LE-1"
            ],
            [
                45,
                68,
                "LE-2"
            ],
            [
                86,
                114,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122094,
        "text": "The width of the area of the first tile within the destination rectangle, if <= 0, then the use intrinsic value",
        "meta": {
            "doc_index": 218243,
            "doc_name": "com.sun.javafx.sg.prism.NGRegion.paintTiles(com.sun.prism.Graphics,com.sun.prism.Image,javafx.scene.layout.BackgroundRepeat,javafx.scene.layout.BackgroundRepeat,javafx.geometry.Side,javafx.geometry.Side,float,float,float,float,int,int,int,int,float,float,float,float).<P>tileWidth",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "LE-1"
            ],
            [
                80,
                81,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122095,
        "text": "the first character that can not be included in the next layout, even if the text after the limit would fit within the wrapping width; offsetLimit must be greater than the current position",
        "meta": {
            "doc_index": 237870,
            "doc_name": "java.awt.font.LineBreakMeasurer.nextOffset(float,int,boolean).<P>offsetLimit",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                168,
                188,
                "GT-2"
            ],
            [
                135,
                146,
                "GT-1"
            ]
        ]
    },
    {
        "id": 122096,
        "text": "The maximum number of ints to be written to the given array; must be non-negative and no larger than dst.length - offset",
        "meta": {
            "doc_index": 246120,
            "doc_name": "java.nio.IntBuffer.get(int[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                59,
                "Nonnegative"
            ],
            [
                101,
                120,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122097,
        "text": "The method assumes that the length of the given array is two or larger.",
        "meta": {
            "doc_index": 254962,
            "doc_name": "java.util.TimeZone.getOffsets(long,int[]).<P>offsets",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                53,
                "GE-1"
            ],
            [
                57,
                60,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122100,
        "text": "the Y coordinate >= 0",
        "meta": {
            "doc_index": 267133,
            "doc_name": "javax.swing.text.GlyphView.viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias[]).<P>y",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                20,
                21,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122101,
        "text": "If timeout is negative or zero, returns as soon as possible without waiting.",
        "meta": {
            "doc_index": 225648,
            "doc_name": "com.sun.jmx.snmp.daemon.CommunicatorServer.start(long).<P>timeout",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "Negative"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122103,
        "text": "It is expected but not required that this number will be greater than any previous sequenceNumber in a notification from this source.",
        "meta": {
            "doc_index": 257633,
            "doc_name": "javax.management.remote.JMXConnectionNotification.JMXConnectionNotification(java.lang.String,java.lang.Object,java.lang.String,long,java.lang.String,java.lang.Object).<P>sequenceNumber",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                48,
                "GT-1"
            ],
            [
                70,
                132,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122104,
        "text": "the width of the invisible component, in pixels >= 0",
        "meta": {
            "doc_index": 260811,
            "doc_name": "javax.swing.Box.createHorizontalStrut(int).<P>width",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                36,
                "GE-1"
            ],
            [
                51,
                52,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122107,
        "text": "The non-negative int precision setting.",
        "meta": {
            "doc_index": 244780,
            "doc_name": "java.math.MathContext.MathContext(int).<P>setPrecision",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                38,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122109,
        "text": "It is required that lo < hi.",
        "meta": {
            "doc_index": 251405,
            "doc_name": "java.util.ComparableTimSort.countRunAndMakeAscending(java.lang.Object[],int,int).<P>hi",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                20,
                22,
                "LT-1"
            ],
            [
                25,
                27,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122111,
        "text": "the starting view location representing the start of the given text >= 0.",
        "meta": {
            "doc_index": 268352,
            "doc_name": "javax.swing.text.Utilities.getTabbedTextOffset(javax.swing.text.Segment,java.awt.FontMetrics,int,int,javax.swing.text.TabExpander,int).<P>x0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "GE-1"
            ],
            [
                71,
                72,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122113,
        "text": "the ending position in the model >= 0",
        "meta": {
            "doc_index": 268013,
            "doc_name": "javax.swing.text.PlainView.drawSelectedText(java.awt.Graphics,int,int,int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "GE-1"
            ],
            [
                36,
                37,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122115,
        "text": "If chunklen is less than or equal to zero, a default value will be used.",
        "meta": {
            "doc_index": 244951,
            "doc_name": "java.net.HttpURLConnection.setChunkedStreamingMode(int).<P>chunklen",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "LE-1"
            ],
            [
                37,
                41,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122118,
        "text": "the port on which the object is exported (an anonymous port is used if port=0)",
        "meta": {
            "doc_index": 246171,
            "doc_name": "java.rmi.activation.Activatable.Activatable(java.lang.String,java.rmi.MarshalledObject<?>,boolean,int).<P>port",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                71,
                75,
                "EQ-1"
            ],
            [
                76,
                77,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122119,
        "text": "the offset into the document to insert the content >= 0.",
        "meta": {
            "doc_index": 266965,
            "doc_name": "javax.swing.text.DocumentFilter.insertString(javax.swing.text.DocumentFilter.FilterBypass,int,java.lang.String,javax.swing.text.AttributeSet).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "GE-1"
            ],
            [
                54,
                55,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122121,
        "text": "If isXOPPackage() ==true, it must be a valid URI per the cid: URI scheme (see RFC 2387)",
        "meta": {
            "doc_index": 269002,
            "doc_name": "javax.xml.bind.attachment.AttachmentUnmarshaller.getAttachmentAsDataHandler(java.lang.String).<P>cid",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122125,
        "text": "The position within the file at which the locked region starts; must be non-negative",
        "meta": {
            "doc_index": 245554,
            "doc_name": "java.nio.channels.FileLock.FileLock(java.nio.channels.FileChannel,long,long,boolean).<P>position",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122126,
        "text": "the amount of the unit to add to the result, may be negative",
        "meta": {
            "doc_index": 250375,
            "doc_name": "java.time.Year.plus(long,java.time.temporal.TemporalUnit).<P>amountToAdd",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                43,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122128,
        "text": "The allowed range is 0-127; see the MIDI 1.0 Specification for the interpretation.",
        "meta": {
            "doc_index": 259256,
            "doc_name": "javax.sound.midi.MidiChannel.getController(int).<P>controller",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                21,
                22,
                "GE-2"
            ],
            [
                23,
                26,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122130,
        "text": "The range object must not be null.",
        "meta": {
            "doc_index": 222186,
            "doc_name": "javafx.scene.control.TextInputControl.replaceText(javafx.scene.control.IndexRange,java.lang.String).<P>range",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "NEQ-1"
            ],
            [
                29,
                33,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 122134,
        "text": "Cannot be less than 0, except for the value of AUTO.",
        "meta": {
            "doc_index": 223040,
            "doc_name": "javafx.scene.layout.BackgroundSize.BackgroundSize(double,double,boolean,boolean,boolean,boolean).<P>height",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                43,
                "EQ-1"
            ],
            [
                47,
                51,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122136,
        "text": "the end position >= start",
        "meta": {
            "doc_index": 262717,
            "doc_name": "javax.swing.JTextArea.replaceRange(java.lang.String,int,int).<P>end",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                20,
                25,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122142,
        "text": "color on gray scale in the range 0.0 (black) - 1.0 (white).",
        "meta": {
            "doc_index": 223601,
            "doc_name": "javafx.scene.paint.Color.gray(double).<P>gray",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                33,
                36,
                "GE-2"
            ],
            [
                47,
                50,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122143,
        "text": "the amount of the duration, measured in terms of the unit, positive or negative",
        "meta": {
            "doc_index": 249451,
            "doc_name": "java.time.Duration.of(long,java.time.temporal.TemporalUnit).<P>amount",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122144,
        "text": "the conversion state for the text range - RAW_TEXT or CONVERTED_TEXT",
        "meta": {
            "doc_index": 239177,
            "doc_name": "java.awt.im.InputMethodHighlight.InputMethodHighlight(boolean,int,int,java.util.Map<java.awt.font.TextAttribute,?>).<P>state",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "EQ-1"
            ],
            [
                42,
                50,
                "EQ-2"
            ],
            [
                54,
                68,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122145,
        "text": "If false, the dialog is MODELESS; if true, the modality type property is set to DEFAULT_MODALITY_TYPE",
        "meta": {
            "doc_index": 237360,
            "doc_name": "java.awt.Dialog.Dialog(java.awt.Frame,java.lang.String,boolean,java.awt.GraphicsConfiguration).<P>modal",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                20,
                "EQ-1"
            ],
            [
                24,
                32,
                "EQ-2"
            ],
            [
                43,
                69,
                "EQ-1"
            ],
            [
                80,
                101,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122146,
        "text": "the ending offset in the model >= p0",
        "meta": {
            "doc_index": 267981,
            "doc_name": "javax.swing.text.PasswordView.drawSelectedText(java.awt.Graphics,int,int,int,int).<P>p1",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "GE-1"
            ],
            [
                34,
                36,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122149,
        "text": "number of \"notches\" to move the mouse wheel Negative values indicate movement up/away from the user, positive values indicate movement down/towards the user.",
        "meta": {
            "doc_index": 241509,
            "doc_name": "java.awt.Robot.mouseWheel(int).<P>wheelAmt",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                53,
                59,
                "Negative"
            ],
            [
                110,
                116,
                "Positive"
            ]
        ]
    },
    {
        "id": 122151,
        "text": "A positive float value indicating the maximum number of bytes that will be produced for each input character",
        "meta": {
            "doc_index": 245690,
            "doc_name": "java.nio.charset.CharsetEncoder.CharsetEncoder(java.nio.charset.Charset,float,float,byte[]).<P>maxBytesPerChar",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                22,
                "Positive"
            ]
        ]
    },
    {
        "id": 122152,
        "text": "the number of elements to limit, assumed to be >= 0, with a value of Long.MAX_VALUE if there is no limit",
        "meta": {
            "doc_index": 254796,
            "doc_name": "java.util.stream.SliceOps.calcSize(long,long,long).<P>limit",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "GE-1"
            ],
            [
                50,
                51,
                "GE-2"
            ],
            [
                69,
                83,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122154,
        "text": "A value in the range [-1.0, 1.0].",
        "meta": {
            "doc_index": 218451,
            "doc_name": "com.sun.media.jfxmedia.MediaPlayer.setBalance(float).<P>balance",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                7,
                "GE-1"
            ],
            [
                22,
                26,
                "GE-2"
            ],
            [
                28,
                31,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122155,
        "text": "If the value passed is negative then the resulting percent done will be -1 (thus, indeterminate).",
        "meta": {
            "doc_index": 220558,
            "doc_name": "javafx.concurrent.Task.updateProgress(long,long).<P>workDone",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "Negative"
            ],
            [
                37,
                63,
                "EQ-1"
            ],
            [
                72,
                74,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122156,
        "text": "the starting offset in the document >= 0",
        "meta": {
            "doc_index": 268381,
            "doc_name": "javax.swing.text.Utilities.getParagraphElement(javax.swing.text.JTextComponent,int).<P>offs",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "GE-1"
            ],
            [
                39,
                40,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122157,
        "text": "the maximum number of fraction digits to be shown; if less than zero, then zero is used.",
        "meta": {
            "doc_index": 248988,
            "doc_name": "java.text.NumberFormat.setMaximumFractionDigits(int).<P>newValue",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                37,
                "LT-1"
            ],
            [
                64,
                68,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122159,
        "text": "Otherwise only pure MidiDevices are considered appropriate (unless allowSynthesizer is true).",
        "meta": {
            "doc_index": 259335,
            "doc_name": "javax.sound.midi.MidiSystem.isAppropriateDevice(javax.sound.midi.MidiDevice,java.lang.Class,boolean,boolean).<P>allowSequencer",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                67,
                83,
                "EQ-1"
            ],
            [
                87,
                91,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122160,
        "text": "the position within the text stream that the tab occurred at >= 0.",
        "meta": {
            "doc_index": 267543,
            "doc_name": "javax.swing.text.html.LineView.nextTabStop(float,int).<P>tabOffset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "GE-1"
            ],
            [
                64,
                65,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122162,
        "text": "Must be a valid index greater than or equal to zero and less than m_cachedNodes.size().",
        "meta": {
            "doc_index": 235418,
            "doc_name": "com.sun.org.apache.xpath.internal.axes.LocPathIterator.setCurrentPos(int).<P>i",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                21,
                "GE-1"
            ],
            [
                47,
                51,
                "GE-2"
            ],
            [
                66,
                86,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122163,
        "text": "the Y origin >= 0",
        "meta": {
            "doc_index": 268341,
            "doc_name": "javax.swing.text.Utilities.drawTabbedText(javax.swing.text.View,javax.swing.text.Segment,int,int,java.awt.Graphics,javax.swing.text.TabExpander,int).<P>y",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "GE-1"
            ],
            [
                16,
                17,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122166,
        "text": "the starting offset >= 0",
        "meta": {
            "doc_index": 266443,
            "doc_name": "javax.swing.text.AbstractDocument.getText(int,int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                23,
                24,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122167,
        "text": "the number of log records to buffer (must be greater than zero)",
        "meta": {
            "doc_index": 253572,
            "doc_name": "java.util.logging.MemoryHandler.MemoryHandler(java.util.logging.Handler,int,java.util.logging.Level).<P>size",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "GT-1"
            ],
            [
                58,
                62,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122169,
        "text": "the months to subtract, positive or negative",
        "meta": {
            "doc_index": 250045,
            "doc_name": "java.time.Month.minus(long).<P>months",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122172,
        "text": "the starting X position >= 0",
        "meta": {
            "doc_index": 268479,
            "doc_name": "javax.swing.text.WrappedPlainView.drawLine(int,int,java.awt.Graphics,int,int).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "GE-1"
            ],
            [
                27,
                28,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122174,
        "text": "the length >= 0",
        "meta": {
            "doc_index": 266935,
            "doc_name": "javax.swing.text.DefaultStyledDocument.ElementBuffer.change(int,int,javax.swing.text.AbstractDocument.DefaultDocumentEvent).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "GE-1"
            ],
            [
                14,
                15,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122175,
        "text": "The offset within the array of the first double to be read; must be non-negative and no larger than array.length",
        "meta": {
            "doc_index": 245735,
            "doc_name": "java.nio.DoubleBuffer.put(double[],int,int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                58,
                "Nonnegative"
            ],
            [
                100,
                112,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122179,
        "text": "The offset within the array of the first float to be written; must be non-negative and no larger than dst.length",
        "meta": {
            "doc_index": 246100,
            "doc_name": "java.nio.FloatBuffer.get(float[],int,int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                46,
                "Nonnegative"
            ],
            [
                102,
                112,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122181,
        "text": "The length of the subarray to be used; must be non-negative and no larger than array.length - offset.",
        "meta": {
            "doc_index": 245625,
            "doc_name": "java.nio.CharBuffer.wrap(char[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "Nonnegative"
            ],
            [
                79,
                100,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122186,
        "text": "The offset within the array of the first byte to be written; must be non-negative and no larger than dst.length",
        "meta": {
            "doc_index": 245368,
            "doc_name": "java.nio.ByteBuffer.get(byte[],int,int).<P>offset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                45,
                "Nonnegative"
            ],
            [
                101,
                111,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122187,
        "text": "If true, the modality type property is set to DEFAULT_MODALITY_TYPE otherwise the dialog is modeless",
        "meta": {
            "doc_index": 261505,
            "doc_name": "javax.swing.JDialog.JDialog(java.awt.Frame,java.lang.String,boolean).<P>modal",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                35,
                "EQ-1"
            ],
            [
                46,
                67,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122188,
        "text": "the length of the valid message data in the array, including the status byte; it should be non-negative and less than or equal to data.length",
        "meta": {
            "doc_index": 259430,
            "doc_name": "javax.sound.midi.SysexMessage.SysexMessage(byte[],int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                49,
                "Nonnegative"
            ],
            [
                130,
                141,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122190,
        "text": "the starting offset >= 0.",
        "meta": {
            "doc_index": 267143,
            "doc_name": "javax.swing.text.GlyphView.createFragment(int,int).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                23,
                24,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122193,
        "text": "Upon return, count will be less than or equal to maximumDigits.",
        "meta": {
            "doc_index": 248880,
            "doc_name": "java.text.DigitList.round(int,boolean,boolean).<P>valueExactAsDecimal",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                13,
                18,
                "LE-1"
            ],
            [
                49,
                62,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122194,
        "text": "when the number of threads is greater than the core, this is the maximum time that excess idle threads will wait for new tasks before terminating.",
        "meta": {
            "doc_index": 252648,
            "doc_name": "java.util.concurrent.ThreadPoolExecutor.ThreadPoolExecutor(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue<java.lang.Runnable>,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler).<P>keepAliveTime",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                5,
                26,
                "GT-1"
            ],
            [
                43,
                51,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122196,
        "text": "the duration to add, positive or negative, not null",
        "meta": {
            "doc_index": 249462,
            "doc_name": "java.time.Duration.plus(java.time.Duration).<P>duration",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Negativeable"
            ],
            [
                47,
                51,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 122199,
        "text": "A negative number is the number of milliseconds before January 1, 1970, 00:00:00 GMT.",
        "meta": {
            "doc_index": 248606,
            "doc_name": "java.sql.Timestamp.Timestamp(long).<P>time",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                17,
                "Negative"
            ]
        ]
    },
    {
        "id": 122202,
        "text": "The value of each element is equal to one of \"upper-first\", \"lower-first\", or \"\".",
        "meta": {
            "doc_index": 227919,
            "doc_name": "com.sun.org.apache.xalan.internal.xsltc.dom.SortSettings.SortSettings(com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet,int[],int[],java.util.Locale[],java.text.Collator[],java.lang.String[]).<P>caseOrders",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "EQ-1"
            ],
            [
                45,
                58,
                "EQ-2"
            ],
            [
                60,
                73,
                "EQ-2"
            ],
            [
                78,
                80,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122203,
        "text": "the length to retrieve >= 0",
        "meta": {
            "doc_index": 268089,
            "doc_name": "javax.swing.text.StringContent.getString(int,int).<P>len",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "GE-1"
            ],
            [
                26,
                27,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122204,
        "text": "The CssMetaData of the parent class of <S>, or null.",
        "meta": {
            "doc_index": 220680,
            "doc_name": "javafx.css.StyleablePropertyFactory.StyleablePropertyFactory(java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable,?>>).<P>parentCssMetaData",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                42,
                "NEQ-1"
            ],
            [
                47,
                51,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 122207,
        "text": "A boolean that equals true if the event is one of a series of multiple adjusting events, otherwise false",
        "meta": {
            "doc_index": 237528,
            "doc_name": "java.awt.event.AdjustmentEvent.AdjustmentEvent(java.awt.Adjustable,int,int,int,boolean).<P>isAdjusting",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ],
            [
                99,
                104,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122208,
        "text": "an attribute type keyword map, where each key is a keyword String that maps to a corresponding object identifier in String form (a sequence of nonnegative integers separated by periods).",
        "meta": {
            "doc_index": 259154,
            "doc_name": "javax.security.auth.x500.X500Principal.X500Principal(java.lang.String,java.util.Map<java.lang.String,java.lang.String>).<P>keywordMap",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                129,
                184,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 122209,
        "text": "the days to represent, may be negative",
        "meta": {
            "doc_index": 250244,
            "doc_name": "java.time.Period.withDays(int).<P>days",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Negativeable"
            ]
        ]
    },
    {
        "id": 122210,
        "text": "the new asynchronous loading priority; a value less than zero indicates that the document should not be loaded asynchronously",
        "meta": {
            "doc_index": 266424,
            "doc_name": "javax.swing.text.AbstractDocument.setAsynchronousLoadPriority(int).<P>p",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                37,
                "LT-1"
            ],
            [
                57,
                61,
                "LT-2"
            ]
        ]
    },
    {
        "id": 122212,
        "text": "the value of the attribute which can contain only ASCII printable characters characters in the range 32 to 127 inclusive.",
        "meta": {
            "doc_index": 234345,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.ToHTMLStream.addUniqueAttribute(java.lang.String,java.lang.String,int).<P>value",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                87,
                "GE-1"
            ],
            [
                101,
                103,
                "GE-2"
            ],
            [
                107,
                110,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122216,
        "text": "the starting document offset >= 0",
        "meta": {
            "doc_index": 267122,
            "doc_name": "javax.swing.text.GlyphView.getPartialSpan(int,int).<P>p0",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "GE-1"
            ],
            [
                32,
                33,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122217,
        "text": "The maximum number of shorts to be written to the given array; must be non-negative and no larger than dst.length - offset",
        "meta": {
            "doc_index": 246158,
            "doc_name": "java.nio.ShortBuffer.get(short[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                42,
                "Nonnegative"
            ],
            [
                103,
                122,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122218,
        "text": "It can be the same object as location.",
        "meta": {
            "doc_index": 237862,
            "doc_name": "java.awt.font.LayoutPath.pathToPoint(java.awt.geom.Point2D,boolean,java.awt.geom.Point2D).<P>point",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                2,
                "CanEQ-1"
            ],
            [
                29,
                37,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 122220,
        "text": "the ending document offset >= startOffset",
        "meta": {
            "doc_index": 267948,
            "doc_name": "javax.swing.text.ParagraphView.getPartialSize(int,int).<P>endOffset",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "GE-1"
            ],
            [
                30,
                41,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122221,
        "text": "the object to be compared for equality with this CompositeType instance; if obj is null, equals returns false.",
        "meta": {
            "doc_index": 257207,
            "doc_name": "javax.management.openmbean.CompositeType.equals(java.lang.Object).<P>obj",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                76,
                79,
                "EQ-1"
            ],
            [
                83,
                87,
                "EQ-2"
            ],
            [
                89,
                95,
                "Returns-1"
            ],
            [
                104,
                109,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 122222,
        "text": "the Y coordinate >= 0.0f",
        "meta": {
            "doc_index": 263314,
            "doc_name": "javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView.viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias[]).<P>fy",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                20,
                24,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122225,
        "text": "the number of columns; if columns is less than 0, columns is set to 0",
        "meta": {
            "doc_index": 241599,
            "doc_name": "java.awt.TextArea.TextArea(java.lang.String,int,int,int).<P>columns",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                33,
                "LT-1"
            ],
            [
                47,
                48,
                "LT-2"
            ],
            [
                50,
                57,
                "EQ-1"
            ],
            [
                68,
                69,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122226,
        "text": "the graphic location along the axis that the broken view would occupy >= 0.",
        "meta": {
            "doc_index": 267168,
            "doc_name": "javax.swing.text.GlyphView.GlyphPainter.getBoundedPosition(javax.swing.text.GlyphView,int,float,float).<P>x",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "GE-1"
            ],
            [
                73,
                74,
                "GE-2"
            ]
        ]
    },
    {
        "id": 122228,
        "text": "the desired maximum number of zones to be actively loaded, must be greater than 0",
        "meta": {
            "doc_index": 268522,
            "doc_name": "javax.swing.text.ZoneView.setMaxZonesLoaded(int).<P>mzl",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "GT-1"
            ],
            [
                80,
                81,
                "GT-2"
            ]
        ]
    },
    {
        "id": 122229,
        "text": "If columns is less than 0, columns is set to 0.",
        "meta": {
            "doc_index": 241638,
            "doc_name": "java.awt.TextField.TextField(int).<P>columns",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "LT-1"
            ],
            [
                24,
                25,
                "LT-2"
            ],
            [
                27,
                34,
                "EQ-1"
            ],
            [
                45,
                46,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 122231,
        "text": "the offset into the document of the change >= 0",
        "meta": {
            "doc_index": 266411,
            "doc_name": "javax.swing.text.AbstractDocument.DefaultDocumentEvent.DefaultDocumentEvent(int,int,javax.swing.event.DocumentEvent.EventType).<P>offs",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                46,
                47,
                "GE-2"
            ],
            [
                0,
                28,
                "GE-1"
            ]
        ]
    },
    {
        "id": 122232,
        "text": "The maximum number of buffers to be accessed; must be non-negative and no larger than dsts.length - offset",
        "meta": {
            "doc_index": 245585,
            "doc_name": "java.nio.channels.ScatteringByteChannel.read(java.nio.ByteBuffer[],int,int).<P>length",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                44,
                "Nonnegative"
            ],
            [
                86,
                106,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122235,
        "text": "the gain in decibels to be applied to the band in the range [MIN_GAIN, MAX_GAIN] dB.",
        "meta": {
            "doc_index": 223432,
            "doc_name": "javafx.scene.media.EqualizerBand.EqualizerBand(double,double,double).<P>gain",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "GE-1"
            ],
            [
                61,
                69,
                "GE-2"
            ],
            [
                71,
                79,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122237,
        "text": "number of pseudo-random bits to be generated, where 0 <= numBits <= 32.",
        "meta": {
            "doc_index": 247175,
            "doc_name": "java.security.SecureRandom.next(int).<P>numBits",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                44,
                "GE-1"
            ],
            [
                52,
                53,
                "GE-2"
            ],
            [
                68,
                70,
                "LE-2"
            ]
        ]
    },
    {
        "id": 122238,
        "text": "If it is greater than the length of this string, it has the same effect as if it were equal to the length of this string: this entire string may be searched.",
        "meta": {
            "doc_index": 235303,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLStringDefault.lastIndexOf(java.lang.String,int).<P>fromIndex",
            "type_reference": "value",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "GT-1"
            ],
            [
                22,
                47,
                "GT-2"
            ],
            [
                78,
                80,
                "EQ-1"
            ],
            [
                95,
                120,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123802,
        "text": "an object of the same type with the adjustment made, not null",
        "meta": {
            "doc_index": 288623,
            "doc_name": "java.time.Duration.subtractFrom(java.time.temporal.Temporal).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                51,
                "NEQ-1"
            ],
            [
                57,
                61,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123803,
        "text": "returns the leaf before this node",
        "meta": {
            "doc_index": 299134,
            "doc_name": "javax.swing.tree.DefaultMutableTreeNode.getPreviousLeaf().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                33,
                "Returned"
            ]
        ]
    },
    {
        "id": 123859,
        "text": "an AnnotationTypeDoc if the type is an annotation type, or null if it is not.",
        "meta": {
            "doc_index": 275988,
            "doc_name": "com.sun.javadoc.Type.asAnnotationTypeDoc().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "Returned"
            ],
            [
                59,
                63,
                "Returned"
            ],
            [
                24,
                32,
                "EQ-1"
            ],
            [
                36,
                54,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123861,
        "text": "=true if ch is XML whitespace; otherwise =false.",
        "meta": {
            "doc_index": 280939,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.XStringForFSB.isSpace(char).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                1,
                5,
                "Returned"
            ],
            [
                9,
                11,
                "EQ-1"
            ],
            [
                15,
                29,
                "EQ-2"
            ],
            [
                42,
                47,
                "Returned"
            ]
        ]
    },
    {
        "id": 124100,
        "text": "returns true if this was specified in the start element",
        "meta": {
            "doc_index": 299927,
            "doc_name": "javax.xml.stream.events.Attribute.isSpecified().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123801,
        "text": "true if obj equals this AlphaComposite; false otherwise.",
        "meta": {
            "doc_index": 281317,
            "doc_name": "java.awt.AlphaComposite.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                11,
                "EQ-1"
            ],
            [
                19,
                38,
                "EQ-2"
            ],
            [
                40,
                45,
                "Returned"
            ]
        ]
    },
    {
        "id": 123862,
        "text": "Returns the actual QName object.",
        "meta": {
            "doc_index": 277890,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.ElementStack.nextElement().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                31,
                "Returned"
            ]
        ]
    },
    {
        "id": 123863,
        "text": "Returns null if the value can't be expressed as a string.",
        "meta": {
            "doc_index": 283765,
            "doc_name": "java.beans.PropertyEditorSupport.getAsText().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123891,
        "text": "the type of the element (StartTagType, EndTagType, ContentType)",
        "meta": {
            "doc_index": 298319,
            "doc_name": "javax.swing.text.DefaultStyledDocument.ElementSpec.getType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "EQ-1"
            ],
            [
                25,
                37,
                "EQ-2"
            ],
            [
                39,
                49,
                "EQ-2"
            ],
            [
                51,
                62,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123921,
        "text": "true if this is equal to the other date and the Chronologies are equal",
        "meta": {
            "doc_index": 288447,
            "doc_name": "java.time.chrono.HijrahDate.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "EQ-1"
            ],
            [
                25,
                39,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123922,
        "text": "True if this MIME type object equals obj, false otherwise.",
        "meta": {
            "doc_index": 294549,
            "doc_name": "javax.print.MimeType.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                29,
                "EQ-1"
            ],
            [
                37,
                40,
                "EQ-2"
            ],
            [
                42,
                47,
                "Returned"
            ]
        ]
    },
    {
        "id": 123949,
        "text": "Returns the excludeComments.",
        "meta": {
            "doc_index": 279581,
            "doc_name": "com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput.isExcludeComments().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                27,
                "Returned"
            ]
        ]
    },
    {
        "id": 123165,
        "text": "either the row count for INSERT, UPDATE, or DELETE statements, or 0 for SQL statements that return nothing",
        "meta": {
            "doc_index": 287922,
            "doc_name": "java.sql.Statement.executeUpdate(java.lang.String,java.lang.String[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                20,
                "Returned"
            ],
            [
                66,
                67,
                "Returned"
            ]
        ]
    },
    {
        "id": 123166,
        "text": "true if any of the types are wrappers",
        "meta": {
            "doc_index": 284584,
            "doc_name": "java.lang.invoke.MethodType.hasWrappers().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123167,
        "text": "AccessibleEditableText if supported by object; else return null",
        "meta": {
            "doc_index": 295905,
            "doc_name": "javax.swing.JComboBox.AccessibleJComboBox.EditorAccessibleContext.getAccessibleEditableText().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Returned"
            ],
            [
                59,
                63,
                "Returned"
            ]
        ]
    },
    {
        "id": 123169,
        "text": "Return the node that is the result of the parse operation.",
        "meta": {
            "doc_index": 300850,
            "doc_name": "org.w3c.dom.ls.LSParser.parseWithContext(org.w3c.dom.ls.LSInput,org.w3c.dom.Node,short).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                15,
                "Returned"
            ]
        ]
    },
    {
        "id": 123197,
        "text": "If they are equal, either may be returned.",
        "meta": {
            "doc_index": 285432,
            "doc_name": "java.math.BigInteger.min(java.math.BigInteger).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                19,
                25,
                "Returned"
            ]
        ]
    },
    {
        "id": 123226,
        "text": "true if and only if this class represents a primitive type",
        "meta": {
            "doc_index": 284281,
            "doc_name": "java.lang.Class.isPrimitive().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123227,
        "text": "number of columns >= 0",
        "meta": {
            "doc_index": 296855,
            "doc_name": "javax.swing.JTextArea.getColumns().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                21,
                22,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123228,
        "text": "The returned object will be serialized as an instance of the non-public class javax.management.NumericValueExp.",
        "meta": {
            "doc_index": 293693,
            "doc_name": "javax.management.Query.value(long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Type-1"
            ],
            [
                78,
                110,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123229,
        "text": "the dot >= 0",
        "meta": {
            "doc_index": 295696,
            "doc_name": "javax.swing.event.CaretEvent.getDot().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                7,
                "GE-1"
            ],
            [
                11,
                12,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123230,
        "text": "The value returned by the procedure.",
        "meta": {
            "doc_index": 294635,
            "doc_name": "javax.script.Invocable.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object...).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "ReturnsBy-1"
            ],
            [
                22,
                35,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123231,
        "text": "If this component does not have a locale, the locale of its parent is returned.",
        "meta": {
            "doc_index": 283109,
            "doc_name": "java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getLocale().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                42,
                66,
                "Returned"
            ]
        ]
    },
    {
        "id": 123234,
        "text": "the cause of this KeySelectorException or null if the cause is nonexistent or unknown.",
        "meta": {
            "doc_index": 299653,
            "doc_name": "javax.xml.crypto.KeySelectorException.getCause().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                38,
                "Returned"
            ],
            [
                42,
                46,
                "Returned"
            ]
        ]
    },
    {
        "id": 123236,
        "text": "The contained message payload; returns null if no payload is present in this message.",
        "meta": {
            "doc_index": 300190,
            "doc_name": "javax.xml.ws.LogicalMessage.getPayload().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                29,
                "Returned"
            ],
            [
                39,
                43,
                "Returned"
            ]
        ]
    },
    {
        "id": 123262,
        "text": "If a non-null value is returned, then the PropertyEditor should be prepared to parse that string back in setAsText().",
        "meta": {
            "doc_index": 283765,
            "doc_name": "java.beans.PropertyEditorSupport.getAsText().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                19,
                "NotNull"
            ]
        ]
    },
    {
        "id": 123263,
        "text": "In case of error, returns null.",
        "meta": {
            "doc_index": 288218,
            "doc_name": "java.text.SimpleDateFormat.parse(java.lang.String,java.text.ParsePosition).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                30,
                "Returned"
            ]
        ]
    },
    {
        "id": 123264,
        "text": "the number of attributes >= 0",
        "meta": {
            "doc_index": 298931,
            "doc_name": "javax.swing.text.StyleContext.NamedStyle.getAttributeCount().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "GE-1"
            ],
            [
                28,
                29,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123265,
        "text": "The default behavior of _is_local() is to return false.",
        "meta": {
            "doc_index": 275593,
            "doc_name": "com.sun.corba.se.impl.javax.rmi.CORBA.Util.isLocal(javax.rmi.CORBA.Stub).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "Returns-1"
            ],
            [
                49,
                54,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123267,
        "text": "Returns the value of the property if it has been explicitly set for this declaration block.",
        "meta": {
            "doc_index": 300784,
            "doc_name": "org.w3c.dom.css.CSSStyleDeclaration.getPropertyCSSValue(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                33,
                "Returned"
            ]
        ]
    },
    {
        "id": 123318,
        "text": "true if strings are equal.",
        "meta": {
            "doc_index": 279839,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.SerializerBase.subPartMatch(java.lang.String,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123320,
        "text": "OrientationRequestedType.PORTRAIT or OrientationRequestedType.LANDSCAPE.",
        "meta": {
            "doc_index": 283227,
            "doc_name": "java.awt.PageAttributes.getOrientationRequested().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                33,
                "Returned"
            ],
            [
                37,
                71,
                "Returned"
            ]
        ]
    },
    {
        "id": 123981,
        "text": "true if equal",
        "meta": {
            "doc_index": 289460,
            "doc_name": "java.time.zone.ZoneOffsetTransition.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123982,
        "text": "If posn is equal to size(), an empty LDAP name is returned.",
        "meta": {
            "doc_index": 294108,
            "doc_name": "javax.naming.ldap.LdapName.getSuffix(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                20,
                26,
                "EQ-2"
            ],
            [
                28,
                46,
                "Returned"
            ]
        ]
    },
    {
        "id": 123348,
        "text": "a file object, might return null if the file does not exist",
        "meta": {
            "doc_index": 299325,
            "doc_name": "javax.tools.JavaFileManager.getJavaFileForInput(javax.tools.JavaFileManager.Location,java.lang.String,javax.tools.JavaFileObject.Kind).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                28,
                32,
                "Returned"
            ],
            [
                0,
                13,
                "Returned"
            ]
        ]
    },
    {
        "id": 123350,
        "text": "true if the two objects are equal; false otherwise",
        "meta": {
            "doc_index": 300631,
            "doc_name": "org.omg.CORBA.portable.ObjectImpl.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                35,
                40,
                "Returned"
            ]
        ]
    },
    {
        "id": 123426,
        "text": "a CallSite, which, when invoked, will return an instance of the functional interface",
        "meta": {
            "doc_index": 284495,
            "doc_name": "java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Returns-1"
            ],
            [
                45,
                84,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123428,
        "text": "Valid types are 1 to 6",
        "meta": {
            "doc_index": 275808,
            "doc_name": "com.sun.java.swing.plaf.gtk.GTKStyle.GTKStockIconInfo.getIconType(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "GE-1"
            ],
            [
                16,
                17,
                "GE-2"
            ],
            [
                21,
                22,
                "LE-2"
            ]
        ]
    },
    {
        "id": 123985,
        "text": "If no mixers are available on the system, an array of length 0 is returned.",
        "meta": {
            "doc_index": 295062,
            "doc_name": "javax.sound.sampled.AudioSystem.getMixerInfo().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                54,
                60,
                "EQ-1"
            ],
            [
                61,
                62,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124012,
        "text": "Returns null if the property has not been set.",
        "meta": {
            "doc_index": 300784,
            "doc_name": "org.w3c.dom.css.CSSStyleDeclaration.getPropertyCSSValue(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 124013,
        "text": "the resizing column, if a resize is in process, otherwise returns null",
        "meta": {
            "doc_index": 298039,
            "doc_name": "javax.swing.table.JTableHeader.getResizingColumn().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                66,
                70,
                "Returned"
            ]
        ]
    },
    {
        "id": 124040,
        "text": "Returns null if no hints have been set.",
        "meta": {
            "doc_index": 282494,
            "doc_name": "java.awt.image.BandCombineOp.getRenderingHints().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123481,
        "text": "If the specified logger does not exist, null is returned.",
        "meta": {
            "doc_index": 284734,
            "doc_name": "java.lang.management.PlatformLoggingMXBean.getParentLoggerName(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                44,
                "Returned"
            ]
        ]
    },
    {
        "id": 123484,
        "text": "if the value for key is an Icon, return the Icon object; otherwise return null",
        "meta": {
            "doc_index": 299199,
            "doc_name": "javax.swing.UIDefaults.getIcon(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                74,
                78,
                "Returned"
            ],
            [
                40,
                55,
                "Returned"
            ],
            [
                3,
                20,
                "Type-1"
            ],
            [
                27,
                31,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123485,
        "text": "true if the edit is inProgress; otherwise returns false",
        "meta": {
            "doc_index": 299266,
            "doc_name": "javax.swing.undo.CompoundEdit.addEdit(javax.swing.undo.UndoableEdit).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                50,
                55,
                "Returned"
            ]
        ]
    },
    {
        "id": 123514,
        "text": "true if the tag equals com.sun.jmx.snmp.SnmpDataTypeEnums#errNoSuchObjectTag, false otherwise.",
        "meta": {
            "doc_index": 276543,
            "doc_name": "com.sun.jmx.snmp.SnmpNull.isNoSuchObjectValue().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                15,
                "EQ-1"
            ],
            [
                23,
                76,
                "EQ-2"
            ],
            [
                78,
                83,
                "Returned"
            ]
        ]
    },
    {
        "id": 123593,
        "text": "true if this and the specified object are equal, false otherwise.",
        "meta": {
            "doc_index": 276589,
            "doc_name": "com.sun.jmx.snmp.SnmpParameters.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "EQ-1"
            ],
            [
                17,
                37,
                "EQ-2"
            ],
            [
                49,
                54,
                "Returned"
            ]
        ]
    },
    {
        "id": 123620,
        "text": "the next attribute in this SQLInputImpl object; if the value is SQL NULL, return null",
        "meta": {
            "doc_index": 295372,
            "doc_name": "javax.sql.rowset.serial.SQLInputImpl.readShort().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                46,
                "Returned"
            ],
            [
                51,
                60,
                "EQ-1"
            ],
            [
                64,
                72,
                "EQ-2"
            ],
            [
                81,
                85,
                "Returned"
            ]
        ]
    },
    {
        "id": 123647,
        "text": "the type (a URI) of the data object (may be null if not specified)",
        "meta": {
            "doc_index": 299663,
            "doc_name": "javax.xml.crypto.URIReference.getType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "CanEQ-1"
            ],
            [
                44,
                48,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 123648,
        "text": "the linked Exception, null if none exists",
        "meta": {
            "doc_index": 299481,
            "doc_name": "javax.xml.bind.TypeConstraintException.getLinkedException().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "Returned"
            ],
            [
                22,
                26,
                "Returned"
            ]
        ]
    },
    {
        "id": 123700,
        "text": "The attribute's type, or null if there is no matching attribute.",
        "meta": {
            "doc_index": 300962,
            "doc_name": "org.xml.sax.helpers.AttributesImpl.getType(java.lang.String,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                20,
                "Returned"
            ],
            [
                25,
                29,
                "Returned"
            ]
        ]
    },
    {
        "id": 123701,
        "text": "true if the String are equal; false otherwise.",
        "meta": {
            "doc_index": 280292,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLStringDefault.equals(com.sun.org.apache.xml.internal.utils.XMLString).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                30,
                35,
                "Returned"
            ]
        ]
    },
    {
        "id": 123727,
        "text": "Returns a new array each time this method is called.",
        "meta": {
            "doc_index": 287355,
            "doc_name": "java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getOtherPrimeInfo().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                19,
                "Returned"
            ]
        ]
    },
    {
        "id": 123728,
        "text": "true if this object is equal to obj; false otherwise.",
        "meta": {
            "doc_index": 289861,
            "doc_name": "java.util.Calendar.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                19,
                "EQ-1"
            ],
            [
                32,
                35,
                "EQ-2"
            ],
            [
                37,
                42,
                "Returned"
            ]
        ]
    },
    {
        "id": 123729,
        "text": "true if it represents an exception",
        "meta": {
            "doc_index": 275912,
            "doc_name": "com.sun.javadoc.Doc.isException().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123730,
        "text": "the least element greater than or equal to e, or null if there is no such element",
        "meta": {
            "doc_index": 291483,
            "doc_name": "java.util.NavigableSet.ceiling(E).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                43,
                44,
                "GE-2"
            ],
            [
                49,
                53,
                "Returned"
            ],
            [
                0,
                17,
                "Returned"
            ]
        ]
    },
    {
        "id": 123731,
        "text": "true if this is equal to the other date",
        "meta": {
            "doc_index": 288278,
            "doc_name": "java.time.chrono.ChronoLocalDate.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "EQ-1"
            ],
            [
                25,
                39,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123732,
        "text": "true if this is an array type.",
        "meta": {
            "doc_index": 293628,
            "doc_name": "javax.management.openmbean.OpenType.isArray().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "Type-1"
            ],
            [
                16,
                29,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123734,
        "text": "If they are equal, as defined by the compareTo method, this is returned.",
        "meta": {
            "doc_index": 285360,
            "doc_name": "java.math.BigDecimal.max(java.math.BigDecimal).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                55,
                59,
                "Returned"
            ]
        ]
    },
    {
        "id": 123735,
        "text": "AccessibleComponent if supported by object; else return null",
        "meta": {
            "doc_index": 297853,
            "doc_name": "javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleComponent().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                56,
                60,
                "Returned"
            ]
        ]
    },
    {
        "id": 123736,
        "text": "Will return the default exception listener if this has not explicitly been set.",
        "meta": {
            "doc_index": 283782,
            "doc_name": "java.beans.XMLDecoder.getExceptionListener().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                12,
                42,
                "Returned"
            ]
        ]
    },
    {
        "id": 123738,
        "text": "The possibly null exception that caused this naming exception.",
        "meta": {
            "doc_index": 294194,
            "doc_name": "javax.naming.NamingException.getRootCause().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                13,
                17,
                "CanEQ-1"
            ],
            [
                18,
                27,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 123101,
        "text": "If the traversal operation is DELETE_CONTENTS the return value is null.",
        "meta": {
            "doc_index": 277713,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.RangeImpl.traverseNode(org.w3c.dom.Node,boolean,boolean,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                26,
                "EQ-1"
            ],
            [
                30,
                45,
                "EQ-2"
            ],
            [
                46,
                62,
                "EQ-1"
            ],
            [
                66,
                70,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123739,
        "text": "true if the specified object is equal to this CompositeDataSupport instance.",
        "meta": {
            "doc_index": 293551,
            "doc_name": "javax.management.openmbean.CompositeDataSupport.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                75,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123740,
        "text": "true iff this Event is of a class and type which supports bubbling.",
        "meta": {
            "doc_index": 277639,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.events.EventImpl.getBubbles().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                9,
                19,
                "Type-1"
            ],
            [
                26,
                66,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123128,
        "text": "the location within the model that best represents the given point in the view >= 0.",
        "meta": {
            "doc_index": 299011,
            "doc_name": "javax.swing.text.View.viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                51,
                78,
                "GE-1"
            ],
            [
                82,
                83,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123129,
        "text": "an object of the same observable type with the addition made, not null",
        "meta": {
            "doc_index": 289289,
            "doc_name": "java.time.temporal.TemporalAmount.addTo(java.time.temporal.Temporal).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                60,
                "NEQ-1"
            ],
            [
                66,
                70,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 123156,
        "text": "true if hasContent(DataFormat.IMAGE) returns true, false otherwise",
        "meta": {
            "doc_index": 274828,
            "doc_name": "javafx.scene.input.Clipboard.hasImage().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                36,
                "Returns-1"
            ],
            [
                45,
                49,
                "Returns-2"
            ],
            [
                51,
                56,
                "Returned"
            ]
        ]
    },
    {
        "id": 123160,
        "text": "the inset >= 0",
        "meta": {
            "doc_index": 298263,
            "doc_name": "javax.swing.text.CompositeView.getTopInset().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "GE-1"
            ],
            [
                13,
                14,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123161,
        "text": "a AnnotatedType if the type if an annotated type, or null if it is not",
        "meta": {
            "doc_index": 275987,
            "doc_name": "com.sun.javadoc.Type.asAnnotatedType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "Returned"
            ],
            [
                19,
                27,
                "EQ-1"
            ],
            [
                31,
                48,
                "EQ-2"
            ],
            [
                53,
                57,
                "Returned"
            ]
        ]
    },
    {
        "id": 123162,
        "text": "If this reference has zero addresses, an enumeration with zero elements is returned.",
        "meta": {
            "doc_index": 294209,
            "doc_name": "javax.naming.Reference.getAll().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                22,
                26,
                "EQ-1"
            ],
            [
                27,
                36,
                "EQ-2"
            ],
            [
                38,
                71,
                "Returned"
            ]
        ]
    },
    {
        "id": 123164,
        "text": "the mime type (or null if not specified)",
        "meta": {
            "doc_index": 299607,
            "doc_name": "javax.xml.crypto.dsig.XMLObject.getMimeType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Returned"
            ],
            [
                18,
                22,
                "Returned"
            ]
        ]
    },
    {
        "id": 123767,
        "text": "Otherwise, this method returns null if the validator is unable to determine the type.",
        "meta": {
            "doc_index": 300137,
            "doc_name": "javax.xml.validation.TypeInfoProvider.getAttributeTypeInfo(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                22,
                "Returns-1"
            ],
            [
                31,
                35,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123768,
        "text": "true if the other duration is equal to this one",
        "meta": {
            "doc_index": 288630,
            "doc_name": "java.time.Duration.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                26,
                "EQ-1"
            ],
            [
                39,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123769,
        "text": "true if the SnmpVarBind has an SNMP response exception, false otherwise.",
        "meta": {
            "doc_index": 276675,
            "doc_name": "com.sun.jmx.snmp.SnmpVarBind.hasVarBindException().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                56,
                61,
                "Returned"
            ]
        ]
    },
    {
        "id": 123770,
        "text": "true if the button is selected, otherwise returns false",
        "meta": {
            "doc_index": 295596,
            "doc_name": "javax.swing.ButtonGroup.isSelected(javax.swing.ButtonModel).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                50,
                55,
                "Returned"
            ]
        ]
    },
    {
        "id": 123771,
        "text": "the MIME type or null if not applicable",
        "meta": {
            "doc_index": 299660,
            "doc_name": "javax.xml.crypto.OctetStreamData.getMimeType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Returned"
            ],
            [
                17,
                21,
                "Returned"
            ]
        ]
    },
    {
        "id": 123772,
        "text": "true if this component should get focus, otherwise returns false",
        "meta": {
            "doc_index": 295916,
            "doc_name": "javax.swing.JComponent.isRequestFocusEnabled().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                59,
                64,
                "Returned"
            ]
        ]
    },
    {
        "id": 124069,
        "text": "an array of AccessibleIcon if supported by object; otherwise return null",
        "meta": {
            "doc_index": 295907,
            "doc_name": "javax.swing.JComboBox.AccessibleJComboBox.EditorAccessibleContext.getAccessibleIcon().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "Returned"
            ],
            [
                68,
                72,
                "Returned"
            ]
        ]
    },
    {
        "id": 124071,
        "text": "bend amount, as a nonnegative 14-bit value (8192 = no bend)",
        "meta": {
            "doc_index": 294875,
            "doc_name": "javax.sound.midi.MidiChannel.getPitchBend().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 124072,
        "text": "the direct supertypes, or an empty list if none",
        "meta": {
            "doc_index": 293200,
            "doc_name": "javax.lang.model.util.Types.directSupertypes(javax.lang.model.type.TypeMirror).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Returned"
            ],
            [
                26,
                39,
                "Returned"
            ]
        ]
    },
    {
        "id": 123103,
        "text": "a Dimension containing the preferred size for the Container; if editingComponent is null the Dimension returned is 0, 0",
        "meta": {
            "doc_index": 299144,
            "doc_name": "javax.swing.tree.DefaultTreeCellEditor.EditorContainer.getPreferredSize().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                64,
                80,
                "EQ-1"
            ],
            [
                84,
                88,
                "EQ-2"
            ],
            [
                89,
                102,
                "Returned"
            ],
            [
                115,
                119,
                "EQ-2"
            ],
            [
                0,
                59,
                "Returned"
            ]
        ]
    },
    {
        "id": 123108,
        "text": "If no principal was sent, then null is returned.",
        "meta": {
            "doc_index": 285673,
            "doc_name": "java.net.SecureCacheResponse.getLocalPrincipal().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                35,
                "Returned"
            ]
        ]
    },
    {
        "id": 123109,
        "text": "Returns true if the character was skipped.",
        "meta": {
            "doc_index": 277876,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XML11EntityScanner.skipChar(int,com.sun.org.apache.xerces.internal.impl.XMLScanner.NameType).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123111,
        "text": "A XSObject (of any type) with the specified local name and namespace URI, or null if they do not identify any XSObject in this map.",
        "meta": {
            "doc_index": 278074,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.xs.util.XSNamedMap4Types.itemByName(java.lang.String,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                77,
                81,
                "Returned"
            ],
            [
                0,
                72,
                "Returned"
            ]
        ]
    },
    {
        "id": 123112,
        "text": "This method never returns null.",
        "meta": {
            "doc_index": 300284,
            "doc_name": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.build().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "NotReturns-1"
            ],
            [
                26,
                30,
                "NotReturns-2"
            ]
        ]
    },
    {
        "id": 123115,
        "text": "true if n1 is greater than or equal to n2",
        "meta": {
            "doc_index": 280791,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.GreaterThanOrEqualComparator.compareNumbers(double,double).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                10,
                "GE-1"
            ],
            [
                39,
                41,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123116,
        "text": "the attribute; if the value is SQL NULL, returns 0",
        "meta": {
            "doc_index": 287865,
            "doc_name": "java.sql.SQLInput.readByte().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Returned"
            ],
            [
                18,
                27,
                "EQ-1"
            ],
            [
                31,
                39,
                "EQ-2"
            ],
            [
                49,
                50,
                "Returned"
            ]
        ]
    },
    {
        "id": 123118,
        "text": "If this type is a top-level type, null is returned",
        "meta": {
            "doc_index": 285049,
            "doc_name": "java.lang.reflect.ParameterizedType.getOwnerType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                38,
                "Returned"
            ]
        ]
    },
    {
        "id": 123119,
        "text": "true if the given object is equal to this SimpleDateFormat",
        "meta": {
            "doc_index": 288227,
            "doc_name": "java.text.SimpleDateFormat.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                24,
                "EQ-1"
            ],
            [
                37,
                58,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123120,
        "text": "Returns true if a qualified name appeared immediately on the input and was scanned, false otherwise.",
        "meta": {
            "doc_index": 277922,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanQName(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.impl.XMLScanner.NameType).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                84,
                89,
                "Returned"
            ]
        ]
    },
    {
        "id": 123121,
        "text": "true if the specified object is equal to this OpenMBeanAttributeInfoSupport instance.",
        "meta": {
            "doc_index": 293571,
            "doc_name": "javax.management.openmbean.OpenMBeanAttributeInfoSupport.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                84,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123122,
        "text": "If the target is recognized type and supported by this implementation return true, otherwise return false.",
        "meta": {
            "doc_index": 278081,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl.writeAnnotation(java.lang.Object,short).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                77,
                81,
                "Returned"
            ],
            [
                100,
                105,
                "Returned"
            ]
        ]
    },
    {
        "id": 123124,
        "text": "null if none of the requested types are supported.",
        "meta": {
            "doc_index": 285791,
            "doc_name": "java.net.URL.getContent(java.lang.Class[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123127,
        "text": "Returns either a child node of the container or the container itself.",
        "meta": {
            "doc_index": 277717,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.RangeImpl.getSelectedNode(org.w3c.dom.Node,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                44,
                "Returned"
            ],
            [
                48,
                68,
                "Returned"
            ]
        ]
    },
    {
        "id": 123131,
        "text": "the value 0 if this Short is equal to the argument Short; a value less than 0 if this Short is numerically less than the argument Short; and a value greater than 0 if this Short is numerically greater than the argument Short (signed comparison).",
        "meta": {
            "doc_index": 285101,
            "doc_name": "java.lang.Short.compareTo(java.lang.Short).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                10,
                11,
                "EQ-2"
            ],
            [
                15,
                25,
                "EQ-1"
            ],
            [
                38,
                56,
                "EQ-2"
            ],
            [
                58,
                65,
                "LT-1"
            ],
            [
                76,
                77,
                "LT-2"
            ],
            [
                81,
                91,
                "LT-1"
            ],
            [
                117,
                135,
                "LT-2"
            ],
            [
                141,
                148,
                "GT-1"
            ],
            [
                162,
                163,
                "GT-2"
            ],
            [
                167,
                177,
                "GT-1"
            ],
            [
                206,
                224,
                "GT-2"
            ]
        ]
    },
    {
        "id": 123135,
        "text": "defaultValue if stringBoolean is null, false if stringBoolean.equalsIgnoreCase(\"false\") is true, true if stringBoolean.equalsIgnoreCase(\"true\") is true",
        "meta": {
            "doc_index": 276079,
            "doc_name": "com.sun.jmx.remote.util.EnvHelp.computeBooleanFromString(java.lang.String,boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "Returned"
            ],
            [
                16,
                29,
                "EQ-1"
            ],
            [
                33,
                37,
                "EQ-2"
            ],
            [
                39,
                44,
                "Returned"
            ],
            [
                48,
                87,
                "EQ-1"
            ],
            [
                91,
                95,
                "EQ-2"
            ],
            [
                97,
                101,
                "Returned"
            ],
            [
                105,
                143,
                "EQ-1"
            ],
            [
                147,
                151,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123136,
        "text": "the exception if there is one (then ORB will not call marshalReplyParams()) otherwise return null.",
        "meta": {
            "doc_index": 275564,
            "doc_name": "com.sun.corba.se.impl.corba.ServerRequestImpl.checkResultCalled().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Returned"
            ],
            [
                93,
                97,
                "Returned"
            ]
        ]
    },
    {
        "id": 123139,
        "text": "the value 0 if anotherFloat is numerically equal to this Float; a value less than 0 if this Float is numerically less than anotherFloat; and a value greater than 0 if this Float is numerically greater than anotherFloat.",
        "meta": {
            "doc_index": 284426,
            "doc_name": "java.lang.Float.compareTo(java.lang.Float).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                10,
                11,
                "EQ-2"
            ],
            [
                15,
                27,
                "EQ-1"
            ],
            [
                52,
                62,
                "EQ-2"
            ],
            [
                64,
                71,
                "LT-1"
            ],
            [
                82,
                83,
                "LT-2"
            ],
            [
                87,
                97,
                "LT-1"
            ],
            [
                123,
                135,
                "LT-2"
            ],
            [
                141,
                148,
                "GT-1"
            ],
            [
                162,
                163,
                "GT-2"
            ],
            [
                167,
                177,
                "GT-1"
            ],
            [
                206,
                218,
                "GT-2"
            ]
        ]
    },
    {
        "id": 123142,
        "text": "Returns null if no value is assigned to the key.",
        "meta": {
            "doc_index": 294666,
            "doc_name": "javax.script.ScriptEngineFactory.getParameter(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123143,
        "text": "the location in the model of the word start >= 0",
        "meta": {
            "doc_index": 298991,
            "doc_name": "javax.swing.text.Utilities.getWordStart(javax.swing.text.JTextComponent,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                43,
                "GE-1"
            ],
            [
                47,
                48,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123144,
        "text": "the index of the column that contains the cell currently being edited; returns -1 if nothing being edited",
        "meta": {
            "doc_index": 296711,
            "doc_name": "javax.swing.JTable.getEditingColumn().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                79,
                81,
                "Returned"
            ],
            [
                0,
                23,
                "Returned"
            ]
        ]
    },
    {
        "id": 123145,
        "text": "A double value representation of the string, or return Double.NaN if the string can not be converted.",
        "meta": {
            "doc_index": 280870,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.XString.toDouble().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                55,
                65,
                "Returned"
            ],
            [
                0,
                43,
                "Returned"
            ]
        ]
    },
    {
        "id": 123146,
        "text": "If the YEARS field is present, return its value as an integer by using the Number#intValue() method.",
        "meta": {
            "doc_index": 278159,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl.getYears().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                38,
                47,
                "Returned"
            ]
        ]
    },
    {
        "id": 123147,
        "text": "In particular, this method returns null if this object represents a primitive type or void.",
        "meta": {
            "doc_index": 284294,
            "doc_name": "java.lang.Class.getSigners().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                26,
                "Returns-1"
            ],
            [
                35,
                39,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123149,
        "text": "the fragment of the view that represents the given span, if the view can be broken; if the view doesn't support breaking behavior, the view itself is returned",
        "meta": {
            "doc_index": 298812,
            "doc_name": "javax.swing.text.ParagraphView.breakView(int,float,java.awt.Shape).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                131,
                139,
                "Returned"
            ],
            [
                0,
                24,
                "Returned"
            ]
        ]
    },
    {
        "id": 123150,
        "text": "true if this is equal to the other date-time",
        "meta": {
            "doc_index": 289590,
            "doc_name": "java.time.ZonedDateTime.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "EQ-1"
            ],
            [
                25,
                44,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123151,
        "text": "true if the set defines the attribute with an equal value, either locally or through its resolving parent",
        "meta": {
            "doc_index": 298208,
            "doc_name": "javax.swing.text.AttributeSet.containsAttribute(java.lang.Object,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123154,
        "text": "the desired alignment >= 0.0f && <= 1.0f.",
        "meta": {
            "doc_index": 298693,
            "doc_name": "javax.swing.text.IconView.getAlignment(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "GE-1"
            ],
            [
                25,
                29,
                "GE-2"
            ],
            [
                36,
                40,
                "LE-2"
            ]
        ]
    },
    {
        "id": 123155,
        "text": "the column value as a java.sql.Time object; if the value is SQL NULL, the value returned is null in the Java programming language",
        "meta": {
            "doc_index": 287811,
            "doc_name": "java.sql.ResultSet.getTime(java.lang.String,java.util.Calendar).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                47,
                56,
                "EQ-1"
            ],
            [
                60,
                68,
                "EQ-2"
            ],
            [
                70,
                79,
                "Returned"
            ],
            [
                92,
                96,
                "EQ-2"
            ],
            [
                0,
                16,
                "Returned"
            ],
            [
                22,
                35,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123171,
        "text": "AbstractFormatter to handle formatting duties, a null return value implies the JFormattedTextField should behave like a normal JTextField",
        "meta": {
            "doc_index": 296081,
            "doc_name": "javax.swing.JFormattedTextField.AbstractFormatterFactory.getFormatter(javax.swing.JFormattedTextField).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                49,
                53,
                "EQ-1"
            ],
            [
                54,
                66,
                "EQ-2"
            ],
            [
                0,
                45,
                "Returned"
            ]
        ]
    },
    {
        "id": 123174,
        "text": "May return null if the property can't be read.",
        "meta": {
            "doc_index": 283747,
            "doc_name": "java.beans.PropertyDescriptor.getReadMethod().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                15,
                "Returned"
            ]
        ]
    },
    {
        "id": 123179,
        "text": "true if the argument is not null and the Strings are equal, ignoring case; false otherwise.",
        "meta": {
            "doc_index": 280294,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLStringDefault.equalsIgnoreCase(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                20,
                "NEQ-1"
            ],
            [
                28,
                32,
                "NEQ-2"
            ],
            [
                75,
                80,
                "Returned"
            ]
        ]
    },
    {
        "id": 123180,
        "text": "alignment; this implementation returns .5",
        "meta": {
            "doc_index": 295776,
            "doc_name": "javax.swing.GroupLayout.getLayoutAlignmentY(java.awt.Container).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                30,
                "Returns-1"
            ],
            [
                39,
                41,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123181,
        "text": "a view of the portion of this set whose elements are greater than or equal to fromElement",
        "meta": {
            "doc_index": 291855,
            "doc_name": "java.util.SortedSet.tailSet(E).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                48,
                "GE-1"
            ],
            [
                78,
                89,
                "GE-2"
            ],
            [
                0,
                33,
                "Returned"
            ]
        ]
    },
    {
        "id": 123182,
        "text": "this implementation unconditionally throws UnsupportedOperationException",
        "meta": {
            "doc_index": 283639,
            "doc_name": "java.beans.beancontext.BeanContextSupport.addAll(java.util.Collection).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Throws-1"
            ],
            [
                43,
                72,
                "Throws-2"
            ]
        ]
    },
    {
        "id": 123184,
        "text": "true if, and only if, this buffer is equal to the given object",
        "meta": {
            "doc_index": 286547,
            "doc_name": "java.nio.LongBuffer.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                22,
                33,
                "EQ-1"
            ],
            [
                46,
                62,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123185,
        "text": "Returns a node that is the result of visiting the node.",
        "meta": {
            "doc_index": 277713,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.RangeImpl.traverseNode(org.w3c.dom.Node,boolean,boolean,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                14,
                "Returned"
            ]
        ]
    },
    {
        "id": 123187,
        "text": "if the value for key for the given Locale is a String, return the String object; otherwise return null",
        "meta": {
            "doc_index": 299204,
            "doc_name": "javax.swing.UIDefaults.getString(java.lang.Object,java.util.Locale).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                62,
                79,
                "Returned"
            ],
            [
                98,
                102,
                "Returned"
            ],
            [
                3,
                41,
                "Type-1"
            ],
            [
                47,
                53,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123188,
        "text": "true if list contained one or more elements e such that (oldVal==null ? e==null : oldVal.equals(e)).",
        "meta": {
            "doc_index": 289907,
            "doc_name": "java.util.Collections.replaceAll(java.util.List<T>,T,T).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123189,
        "text": "Returns false if the task was scheduled for one-time execution and has already run, or if the task was never scheduled, or if the task was already cancelled. (",
        "meta": {
            "doc_index": 292279,
            "doc_name": "java.util.TimerTask.cancel().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                13,
                "Returned"
            ]
        ]
    },
    {
        "id": 123191,
        "text": "Note difference from DOM, where getOwnerDocument returns null for the Document node.)",
        "meta": {
            "doc_index": 278542,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.DTM.getDocumentRoot(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                48,
                "Returns-1"
            ],
            [
                57,
                61,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123192,
        "text": "true, if current toolkit supports given modality type, false otherwise",
        "meta": {
            "doc_index": 283545,
            "doc_name": "java.awt.Toolkit.isModalityTypeSupported(java.awt.Dialog.ModalityType).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                55,
                60,
                "Returned"
            ]
        ]
    },
    {
        "id": 123194,
        "text": "A value of the facet specified in facetName for this simple type definition or null.",
        "meta": {
            "doc_index": 277819,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.getLexicalFacetValue(short).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                43,
                "Returned"
            ],
            [
                79,
                83,
                "Returned"
            ]
        ]
    },
    {
        "id": 123195,
        "text": "null is returned when no mechanisms are found to support the specified name type.",
        "meta": {
            "doc_index": 300361,
            "doc_name": "org.ietf.jgss.GSSManager.getMechsForName(org.ietf.jgss.Oid).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123196,
        "text": "If posn is equal to size(), an empty name is returned.",
        "meta": {
            "doc_index": 294174,
            "doc_name": "javax.naming.Name.getSuffix(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                20,
                26,
                "EQ-2"
            ],
            [
                28,
                41,
                "Returned"
            ]
        ]
    },
    {
        "id": 123198,
        "text": "true - if execution was stopped because the type of node other than EntityRef, Text, CDATA is encountered, otherwise return false",
        "meta": {
            "doc_index": 277719,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.TextImpl.getWholeTextBackward(org.w3c.dom.Node,java.lang.StringBuffer,org.w3c.dom.Node).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                124,
                129,
                "Returned"
            ],
            [
                52,
                56,
                "NotType-1"
            ],
            [
                68,
                77,
                "NotType-2"
            ],
            [
                79,
                83,
                "NotType-2"
            ],
            [
                85,
                90,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 123199,
        "text": "true if, and only if, this encoder can encode the given character without throwing any exceptions and without performing any replacements",
        "meta": {
            "doc_index": 286197,
            "doc_name": "java.nio.charset.CharsetEncoder.canEncode(java.lang.CharSequence).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123200,
        "text": "The returned value should not be null.",
        "meta": {
            "doc_index": 293275,
            "doc_name": "javax.management.loading.MLet.check(java.lang.String,java.net.URL,java.lang.String,javax.management.loading.MLetContent).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "NEQ-1"
            ],
            [
                33,
                37,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 123201,
        "text": "an ImageTypeSpecifier describing the destination type, or null.",
        "meta": {
            "doc_index": 292610,
            "doc_name": "javax.imageio.IIOParam.getDestinationType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                53,
                "Returned"
            ],
            [
                58,
                62,
                "Returned"
            ]
        ]
    },
    {
        "id": 123203,
        "text": "true if the specified Object is an instance of ColorModel and equals this ColorModel; false otherwise.",
        "meta": {
            "doc_index": 282595,
            "doc_name": "java.awt.image.ColorModel.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "Type-1"
            ],
            [
                47,
                57,
                "Type-2"
            ],
            [
                69,
                84,
                "EQ-2"
            ],
            [
                86,
                91,
                "Returned"
            ]
        ]
    },
    {
        "id": 123204,
        "text": "the event type as a DocumentEvent.EventType",
        "meta": {
            "doc_index": 298175,
            "doc_name": "javax.swing.text.AbstractDocument.DefaultDocumentEvent.getType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Type-1"
            ],
            [
                20,
                43,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123206,
        "text": "Returns true if the request should be retried.",
        "meta": {
            "doc_index": 275725,
            "doc_name": "com.sun.corba.se.pept.transport.ContactInfoListIterator.reportException(com.sun.corba.se.pept.transport.ContactInfo,java.lang.RuntimeException).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123207,
        "text": "If no valid Unicode character exists for this key event, CHAR_UNDEFINED is returned.",
        "meta": {
            "doc_index": 281804,
            "doc_name": "java.awt.event.KeyEvent.getKeyChar().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                57,
                71,
                "Returned"
            ]
        ]
    },
    {
        "id": 123209,
        "text": "the character at the specified position or DONE if the specified position is equal to getEndIndex()",
        "meta": {
            "doc_index": 281874,
            "doc_name": "java.awt.font.CharArrayIterator.setIndex(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "Returned"
            ],
            [
                43,
                47,
                "Returned"
            ],
            [
                51,
                73,
                "EQ-1"
            ],
            [
                86,
                99,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123210,
        "text": "true if the specified object is equal to this TabularDataSupport instance.",
        "meta": {
            "doc_index": 293665,
            "doc_name": "javax.management.openmbean.TabularDataSupport.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                73,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123211,
        "text": "true if object is an SnmpOidTableSupport instance and equals to this, false otherwise.",
        "meta": {
            "doc_index": 276581,
            "doc_name": "com.sun.jmx.snmp.SnmpOidTableSupport.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                14,
                "Type-1"
            ],
            [
                21,
                40,
                "Type-2"
            ],
            [
                64,
                68,
                "EQ-2"
            ],
            [
                70,
                75,
                "Returned"
            ]
        ]
    },
    {
        "id": 123213,
        "text": "true if the underlying date-time is equal to the specified date-time on the timeline",
        "meta": {
            "doc_index": 288306,
            "doc_name": "java.time.chrono.ChronoLocalDateTime.isEqual(java.time.chrono.ChronoLocalDateTime<?>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                32,
                "EQ-1"
            ],
            [
                45,
                68,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123214,
        "text": "true if the specified Object is equal to this Map",
        "meta": {
            "doc_index": 291145,
            "doc_name": "java.util.Hashtable.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123215,
        "text": "return a namespace context",
        "meta": {
            "doc_index": 277961,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.getNamespaceContext().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                26,
                "Returned"
            ]
        ]
    },
    {
        "id": 123216,
        "text": "true if the specified Object is equal equal to this SolarisNumericGroupPrincipal.",
        "meta": {
            "doc_index": 281202,
            "doc_name": "com.sun.security.auth.SolarisNumericGroupPrincipal.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                47,
                80,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123218,
        "text": "true if the specified object is equal to this set",
        "meta": {
            "doc_index": 290389,
            "doc_name": "java.util.concurrent.ConcurrentSkipListSet.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123223,
        "text": "null is returned if the address has not been set.",
        "meta": {
            "doc_index": 300314,
            "doc_name": "org.ietf.jgss.ChannelBinding.getAcceptorAddress().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123237,
        "text": "True if the grammars are equal, otherwise false",
        "meta": {
            "doc_index": 278217,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.validation.SoftReferenceGrammarPool.equals(com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription,com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                42,
                47,
                "Returned"
            ]
        ]
    },
    {
        "id": 123238,
        "text": "Returns the cached Image, or null there is no cached image for key",
        "meta": {
            "doc_index": 297712,
            "doc_name": "javax.swing.plaf.nimbus.ImageCache.getImage(java.awt.GraphicsConfiguration,int,int,java.lang.Object...).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                24,
                "Returned"
            ],
            [
                29,
                33,
                "Returned"
            ]
        ]
    },
    {
        "id": 123239,
        "text": "The method may return a null value if it does not wish to support this optimization (e.g. due to security, transactions, etc).",
        "meta": {
            "doc_index": 300583,
            "doc_name": "org.omg.CORBA.portable.Delegate.servant_preinvoke(org.omg.CORBA.Object,java.lang.String,java.lang.Class).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Returns-1"
            ],
            [
                24,
                28,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123240,
        "text": "Returns the fixed URI string.",
        "meta": {
            "doc_index": 279705,
            "doc_name": "com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolverSpi.fixURI(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                28,
                "Returned"
            ]
        ]
    },
    {
        "id": 123241,
        "text": "The result of the evaluation of the XPath expression.For XPath 1.0 results, this object will be of type XPathResult.",
        "meta": {
            "doc_index": 300911,
            "doc_name": "org.w3c.dom.xpath.XPathEvaluator.evaluate(java.lang.String,org.w3c.dom.Node,org.w3c.dom.xpath.XPathNSResolver,short,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                76,
                87,
                "Type-1"
            ],
            [
                104,
                115,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123244,
        "text": "false if the waiting time detectably elapsed before return from the method, else true",
        "meta": {
            "doc_index": 290700,
            "doc_name": "java.util.concurrent.locks.Condition.await(long,java.util.concurrent.TimeUnit).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                5,
                "Returned"
            ],
            [
                81,
                85,
                "Returned"
            ]
        ]
    },
    {
        "id": 123245,
        "text": "Returning any other values will result in unspecified behavior.",
        "meta": {
            "doc_index": 300851,
            "doc_name": "org.w3c.dom.ls.LSParserFilter.startElement(org.w3c.dom.Element).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                26,
                "Returned"
            ]
        ]
    },
    {
        "id": 123247,
        "text": "The _is_local() method returns false otherwise.",
        "meta": {
            "doc_index": 275593,
            "doc_name": "com.sun.corba.se.impl.javax.rmi.CORBA.Util.isLocal(javax.rmi.CORBA.Stub).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Returns-1"
            ],
            [
                31,
                36,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123248,
        "text": "Returns null if no attribute with the name exists in any scope.",
        "meta": {
            "doc_index": 294642,
            "doc_name": "javax.script.ScriptContext.getAttribute(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123250,
        "text": "the position in this SerialBlob object where the given Blob object begins, starting at the specified position; -1 if the pattern is not found or the given starting position is out of bounds; position numbering for the return value starts at 1",
        "meta": {
            "doc_index": 295326,
            "doc_name": "javax.sql.rowset.serial.SerialBlob.position(java.sql.Blob,long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                38,
                "Returned"
            ],
            [
                111,
                113,
                "Returned"
            ],
            [
                191,
                209,
                "GE-1"
            ],
            [
                241,
                242,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123252,
        "text": "the attribute; if the value is SQL NULL, return null",
        "meta": {
            "doc_index": 295383,
            "doc_name": "javax.sql.rowset.serial.SQLInputImpl.readAsciiStream().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Returned"
            ],
            [
                18,
                27,
                "EQ-1"
            ],
            [
                31,
                39,
                "EQ-2"
            ],
            [
                48,
                52,
                "Returned"
            ]
        ]
    },
    {
        "id": 123253,
        "text": "Never returns null.",
        "meta": {
            "doc_index": 286606,
            "doc_name": "java.rmi.activation.ActivationGroupDesc.CommandEnvironment.getCommandOptions().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                18,
                "NotReturned"
            ]
        ]
    },
    {
        "id": 123254,
        "text": "The number of nodes in the list, always greater or equal to zero.",
        "meta": {
            "doc_index": 280403,
            "doc_name": "com.sun.org.apache.xpath.internal.axes.LocPathIterator.getLength().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "GE-1"
            ],
            [
                60,
                64,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123255,
        "text": "A null return can also indicate that the map previously associated null with the key, if the implementation supports null values.)",
        "meta": {
            "doc_index": 291451,
            "doc_name": "java.util.Map.putIfAbsent(K,V).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                2,
                6,
                "Returned"
            ]
        ]
    },
    {
        "id": 123256,
        "text": "The return value will be null when a local transport is used.",
        "meta": {
            "doc_index": 275729,
            "doc_name": "com.sun.corba.se.spi.legacy.interceptor.RequestInfoExt.connection().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123257,
        "text": "If the Subject is immutable it will return the principals directly.",
        "meta": {
            "doc_index": 276073,
            "doc_name": "com.sun.jmx.remote.security.SubjectDelegator.getSubjectPrincipals(javax.security.auth.Subject).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                28,
                30,
                "Returns-1"
            ],
            [
                43,
                57,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123259,
        "text": "If no MBean satisfies the query, an empty list is returned.",
        "meta": {
            "doc_index": 276016,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.queryNames(javax.management.ObjectName,javax.management.QueryExp).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                46,
                "Returned"
            ]
        ]
    },
    {
        "id": 123260,
        "text": "always returns true",
        "meta": {
            "doc_index": 295985,
            "doc_name": "javax.swing.JComponent.checkIfChildObscuredBySibling().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                19,
                "Returned"
            ]
        ]
    },
    {
        "id": 123269,
        "text": "True if this doc flavor object equals obj, false otherwise.",
        "meta": {
            "doc_index": 294536,
            "doc_name": "javax.print.DocFlavor.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                30,
                "EQ-1"
            ],
            [
                38,
                41,
                "EQ-2"
            ],
            [
                43,
                48,
                "Returned"
            ]
        ]
    },
    {
        "id": 123271,
        "text": "true If obj is equal to this BasicAttributes.",
        "meta": {
            "doc_index": 294038,
            "doc_name": "javax.naming.directory.BasicAttributes.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                11,
                "EQ-1"
            ],
            [
                24,
                44,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123272,
        "text": "if the implementation supports a history mechanism, a reference to an Edit implementation will be returned, otherwise returns null",
        "meta": {
            "doc_index": 298113,
            "doc_name": "javax.swing.text.AbstractDocument.Content.insertString(int,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                89,
                "Returned"
            ],
            [
                126,
                130,
                "Returned"
            ]
        ]
    },
    {
        "id": 123274,
        "text": "May return a null array if the parameter names aren't known.",
        "meta": {
            "doc_index": 283731,
            "doc_name": "java.beans.MethodDescriptor.getParameterDescriptors().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                23,
                "Returned"
            ]
        ]
    },
    {
        "id": 123275,
        "text": "the column value; if the value is SQL NULL, the value returned is 0",
        "meta": {
            "doc_index": 287744,
            "doc_name": "java.sql.ResultSet.getFloat(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                21,
                30,
                "EQ-1"
            ],
            [
                34,
                42,
                "EQ-2"
            ],
            [
                44,
                53,
                "Returned"
            ],
            [
                66,
                67,
                "EQ-2"
            ],
            [
                0,
                16,
                "Returned"
            ]
        ]
    },
    {
        "id": 123276,
        "text": "an object of the same observable type with the subtraction made, not null",
        "meta": {
            "doc_index": 289290,
            "doc_name": "java.time.temporal.TemporalAmount.subtractFrom(java.time.temporal.Temporal).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "Type-1"
            ],
            [
                22,
                63,
                "Type-2"
            ],
            [
                69,
                73,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 123277,
        "text": "true if and only if the first type is a subtype of the second",
        "meta": {
            "doc_index": 293196,
            "doc_name": "javax.lang.model.util.Types.isSubtype(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123278,
        "text": "true if the specified object is equal to this OpenMBeanConstructorInfoSupport instance.",
        "meta": {
            "doc_index": 293580,
            "doc_name": "javax.management.openmbean.OpenMBeanConstructorInfoSupport.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                86,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123279,
        "text": "The content type of the file, or null if the content type cannot be determined",
        "meta": {
            "doc_index": 286324,
            "doc_name": "java.nio.file.Files.probeContentType(java.nio.file.Path).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "Returned"
            ],
            [
                33,
                37,
                "Returned"
            ]
        ]
    },
    {
        "id": 123280,
        "text": "true if the attribute is of type CDATA",
        "meta": {
            "doc_index": 277732,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar.isCDATAAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.QName).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                21,
                "Type-1"
            ],
            [
                33,
                38,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123281,
        "text": "Returns true if the specified namespaceURI is the default namespace, false otherwise.",
        "meta": {
            "doc_index": 300879,
            "doc_name": "org.w3c.dom.Node.isDefaultNamespace(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                69,
                74,
                "Returned"
            ]
        ]
    },
    {
        "id": 123282,
        "text": "The method must return null if the servant is not of the expected type.",
        "meta": {
            "doc_index": 300583,
            "doc_name": "org.omg.CORBA.portable.Delegate.servant_preinvoke(org.omg.CORBA.Object,java.lang.String,java.lang.Class).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Returns-1"
            ],
            [
                23,
                27,
                "Returns-2"
            ],
            [
                31,
                42,
                "NotType-1"
            ],
            [
                53,
                70,
                "NotType-2"
            ]
        ]
    },
    {
        "id": 123283,
        "text": "If a character does not appear on the primary level of a known keyboard, VK_UNDEFINED is returned.",
        "meta": {
            "doc_index": 281810,
            "doc_name": "java.awt.event.KeyEvent.getExtendedKeyCodeForChar(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                73,
                85,
                "Returned"
            ]
        ]
    },
    {
        "id": 123284,
        "text": "If null, it means no root cause has been set for this naming exception.",
        "meta": {
            "doc_index": 294194,
            "doc_name": "javax.naming.NamingException.getRootCause().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "Returned"
            ]
        ]
    },
    {
        "id": 123286,
        "text": "the remainder of the division will be returned.",
        "meta": {
            "doc_index": 285455,
            "doc_name": "java.math.MutableBigInteger.divide(long,java.math.MutableBigInteger).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                29,
                "Returned"
            ]
        ]
    },
    {
        "id": 123287,
        "text": "true if the objects are equal; false otherwise.",
        "meta": {
            "doc_index": 283358,
            "doc_name": "java.awt.Rectangle.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                31,
                36,
                "Returned"
            ]
        ]
    },
    {
        "id": 123288,
        "text": "the cause of this TransformException or null if the cause is nonexistent or unknown.",
        "meta": {
            "doc_index": 299598,
            "doc_name": "javax.xml.crypto.dsig.TransformException.getCause().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                36,
                "Returned"
            ],
            [
                40,
                44,
                "Returned"
            ]
        ]
    },
    {
        "id": 123291,
        "text": "the file type description as it would be displayed by a native file chooser or null if no native information is available.",
        "meta": {
            "doc_index": 295748,
            "doc_name": "javax.swing.filechooser.FileSystemView.getSystemTypeDescription(java.io.File).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                79,
                83,
                "Returned"
            ],
            [
                0,
                25,
                "Returned"
            ]
        ]
    },
    {
        "id": 123292,
        "text": "an array of Strings or length at least 1 containing MIME types associated with this reader or writer, or null.",
        "meta": {
            "doc_index": 292873,
            "doc_name": "javax.imageio.spi.ImageReaderWriterSpi.getMIMETypes().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                23,
                29,
                "GE-1"
            ],
            [
                39,
                40,
                "GE-2"
            ],
            [
                105,
                109,
                "Returned"
            ]
        ]
    },
    {
        "id": 123294,
        "text": "String - We return null since we currenly do not supprt this.",
        "meta": {
            "doc_index": 278443,
            "doc_name": "com.sun.org.apache.xerces.internal.xpointer.ShortHandPointer.getChildrenSchemaDeterminedID(com.sun.org.apache.xerces.internal.xni.XMLAttributes,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                19,
                23,
                "Returned"
            ]
        ]
    },
    {
        "id": 123296,
        "text": "if the value for key is a Dimension, return the Dimension object; otherwise return null",
        "meta": {
            "doc_index": 299211,
            "doc_name": "javax.swing.UIDefaults.getDimension(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "Type-1"
            ],
            [
                26,
                35,
                "Type-2"
            ],
            [
                44,
                64,
                "Returned"
            ],
            [
                83,
                87,
                "Returned"
            ]
        ]
    },
    {
        "id": 123299,
        "text": "If there is no child component at the requested point and the point is within the bounds of the container the container itself is returned.",
        "meta": {
            "doc_index": 281639,
            "doc_name": "java.awt.Container.findComponentAt(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                106,
                119,
                "Returned"
            ]
        ]
    },
    {
        "id": 123300,
        "text": "true if s1 is greater than or equal to s2",
        "meta": {
            "doc_index": 280790,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.GreaterThanOrEqualComparator.compareStrings(com.sun.org.apache.xml.internal.utils.XMLString,com.sun.org.apache.xml.internal.utils.XMLString).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                10,
                "GE-1"
            ],
            [
                39,
                41,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123301,
        "text": "returns true if the call made a change to the current namespace information, false if it did not change anything, e.g. if the prefix/namespace mapping was already in scope from before.",
        "meta": {
            "doc_index": 279873,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.ToStream.startPrefixMapping(java.lang.String,java.lang.String,boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                77,
                82,
                "Returned"
            ]
        ]
    },
    {
        "id": 123303,
        "text": "true if the two SnmpEngineId are equals, false otherwise.",
        "meta": {
            "doc_index": 276507,
            "doc_name": "com.sun.jmx.snmp.SnmpEngineId.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                41,
                46,
                "Returned"
            ]
        ]
    },
    {
        "id": 123304,
        "text": "If the document's schema is a DTD or no schema is associated with the document, this method will always return false .",
        "meta": {
            "doc_index": 300908,
            "doc_name": "org.w3c.dom.TypeInfo.isDerivedFrom(java.lang.String,java.lang.String,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                24,
                "Type-1"
            ],
            [
                30,
                33,
                "Type-2"
            ],
            [
                80,
                91,
                "Returns-1"
            ],
            [
                111,
                116,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123306,
        "text": "the type of this JDBC RowSet object, which must be one of the following: ResultSet.TYPE_FORWARD_ONLY, ResultSet.TYPE_SCROLL_INSENSITIVE, or ResultSet.TYPE_SCROLL_SENSITIVE",
        "meta": {
            "doc_index": 295223,
            "doc_name": "javax.sql.rowset.BaseRowSet.getType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                35,
                "EQ-1"
            ],
            [
                73,
                100,
                "EQ-2"
            ],
            [
                102,
                135,
                "EQ-2"
            ],
            [
                140,
                171,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123307,
        "text": "Returns the formatted message.",
        "meta": {
            "doc_index": 277852,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.msg.XMLMessageFormatter.formatMessage(java.util.Locale,java.lang.String,java.lang.Object[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                29,
                "Returned"
            ]
        ]
    },
    {
        "id": 123308,
        "text": "the value returned by the PrivilegedExceptionAction's run method.",
        "meta": {
            "doc_index": 294804,
            "doc_name": "javax.security.auth.Subject.doAs(javax.security.auth.Subject,java.security.PrivilegedExceptionAction<T>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "ReturnsBy-1"
            ],
            [
                22,
                64,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123310,
        "text": "the number of zero bits following the lowest-order (\"rightmost\") one-bit in the two's complement binary representation of the specified long value, or 64 if the value is equal to zero.",
        "meta": {
            "doc_index": 284649,
            "doc_name": "java.lang.Long.numberOfTrailingZeros(long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                157,
                166,
                "EQ-1"
            ],
            [
                179,
                183,
                "EQ-2"
            ],
            [
                151,
                153,
                "Returned"
            ],
            [
                0,
                23,
                "Returned"
            ]
        ]
    },
    {
        "id": 123311,
        "text": "True if the two named objects are equal, otherwise false.",
        "meta": {
            "doc_index": 276055,
            "doc_name": "com.sun.jmx.mbeanserver.NamedObject.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                51,
                56,
                "Returned"
            ]
        ]
    },
    {
        "id": 123313,
        "text": "The attribute type as a string, or null if the attribute is not in the list or if Namespace processing is not being performed.",
        "meta": {
            "doc_index": 278324,
            "doc_name": "com.sun.org.apache.xerces.internal.util.XMLAttributesImpl.getType(java.lang.String,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Returned"
            ],
            [
                24,
                30,
                "Type-2"
            ],
            [
                35,
                39,
                "Returned"
            ]
        ]
    },
    {
        "id": 123314,
        "text": "max(s1, s2): a spring whose value is always greater than (or equal to) the values of both s1 and s2",
        "meta": {
            "doc_index": 297967,
            "doc_name": "javax.swing.Spring.max(javax.swing.Spring,javax.swing.Spring).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "GE-1"
            ],
            [
                71,
                99,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123316,
        "text": "null will never be returned.",
        "meta": {
            "doc_index": 281576,
            "doc_name": "java.awt.Component.getFocusTraversalKeys(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "NotReturned"
            ]
        ]
    },
    {
        "id": 123317,
        "text": "the native subprocess HANDLE returned by CreateProcess",
        "meta": {
            "doc_index": 284926,
            "doc_name": "java.lang.ProcessImpl.create(java.lang.String,java.lang.String,java.lang.String,long[],boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "Returned"
            ],
            [
                41,
                54,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123322,
        "text": "true if the given typecode is equivalent to this typecode; false otherwise",
        "meta": {
            "doc_index": 300650,
            "doc_name": "org.omg.CORBA.TypeCode.equivalent(org.omg.CORBA.TypeCode).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                26,
                "EQ-1"
            ],
            [
                44,
                57,
                "EQ-2"
            ],
            [
                59,
                64,
                "Returned"
            ]
        ]
    },
    {
        "id": 123323,
        "text": "AccessibleSelection if supported by object; else return null",
        "meta": {
            "doc_index": 295903,
            "doc_name": "javax.swing.JComboBox.AccessibleJComboBox.EditorAccessibleContext.getAccessibleSelection().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                56,
                60,
                "Returned"
            ],
            [
                0,
                19,
                "Returned"
            ]
        ]
    },
    {
        "id": 123324,
        "text": "true if equal, false if not",
        "meta": {
            "doc_index": 283655,
            "doc_name": "java.beans.beancontext.BeanContextSupport.classEquals(java.lang.Class,java.lang.Class).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                15,
                20,
                "Returned"
            ]
        ]
    },
    {
        "id": 123325,
        "text": "always return non-null valid object.",
        "meta": {
            "doc_index": 278220,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.validation.Util.toXMLInputSource(javax.xml.transform.stream.StreamSource).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                35,
                "NotNull"
            ]
        ]
    },
    {
        "id": 123326,
        "text": "If the given policy type is known, but no policy of that type is in effect, then this operation will return a nil object reference.",
        "meta": {
            "doc_index": 300713,
            "doc_name": "org.omg.PortableInterceptor.IORInfoOperations.get_effective_policy(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                81,
                95,
                "Returns-1"
            ],
            [
                108,
                130,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123327,
        "text": "the assigned renderer; if null returns the default renderer for this type of object",
        "meta": {
            "doc_index": 296729,
            "doc_name": "javax.swing.JTable.getCellRenderer(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Returned"
            ],
            [
                39,
                83,
                "Returned"
            ]
        ]
    },
    {
        "id": 123330,
        "text": "The simple type ID, or DTM.NULL.",
        "meta": {
            "doc_index": 278694,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBase._type(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Returned"
            ],
            [
                23,
                31,
                "Returned"
            ]
        ]
    },
    {
        "id": 123333,
        "text": "The current primitiveType can only be a string unit type (i.e. CSS_STRING, CSS_URI, CSS_IDENT and CSS_ATTR).",
        "meta": {
            "doc_index": 300778,
            "doc_name": "org.w3c.dom.css.CSSPrimitiveValue.getStringValue().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "EQ-1"
            ],
            [
                63,
                82,
                "EQ-2"
            ],
            [
                84,
                93,
                "EQ-2"
            ],
            [
                98,
                106,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123334,
        "text": "true if containsKey(DataFormat.PLAIN_TEXT) returns true, false otherwise",
        "meta": {
            "doc_index": 274832,
            "doc_name": "javafx.scene.input.ClipboardContent.hasString().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                42,
                "Returns-1"
            ],
            [
                51,
                55,
                "Returns-2"
            ],
            [
                57,
                62,
                "Returned"
            ]
        ]
    },
    {
        "id": 123335,
        "text": "If the document's schema is an XML Schema, the method will return true if the reference type definition is derived from the other type definition according to the derivation parameter.",
        "meta": {
            "doc_index": 300908,
            "doc_name": "org.w3c.dom.TypeInfo.isDerivedFrom(java.lang.String,java.lang.String,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                24,
                "Type-1"
            ],
            [
                31,
                41,
                "Type-2"
            ],
            [
                43,
                53,
                "Returns-1"
            ],
            [
                66,
                70,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123336,
        "text": "true if this is equal to the other year-month",
        "meta": {
            "doc_index": 289437,
            "doc_name": "java.time.YearMonth.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "EQ-1"
            ],
            [
                25,
                45,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123337,
        "text": "For JDBCType, the value will be the same value as in Types for the data type.",
        "meta": {
            "doc_index": 287716,
            "doc_name": "java.sql.JDBCType.getVendorTypeNumber().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                23,
                "EQ-1"
            ],
            [
                41,
                76,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123338,
        "text": "True if they are equal, else false",
        "meta": {
            "doc_index": 278097,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.xs.XSDDescription.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                29,
                34,
                "Returned"
            ]
        ]
    },
    {
        "id": 123339,
        "text": "true if the specified Object is an instance of PackedColorModel and equals this PackedColorModel; false otherwise.",
        "meta": {
            "doc_index": 282794,
            "doc_name": "java.awt.image.PackedColorModel.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "Type-1"
            ],
            [
                47,
                63,
                "Type-2"
            ],
            [
                75,
                96,
                "EQ-2"
            ],
            [
                98,
                103,
                "Returned"
            ]
        ]
    },
    {
        "id": 123341,
        "text": "the bounding box of the given position is returned",
        "meta": {
            "doc_index": 299025,
            "doc_name": "javax.swing.text.View.modelToView(int,java.awt.Shape).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                38,
                "Returned"
            ]
        ]
    },
    {
        "id": 123345,
        "text": "true if the specified Object is equal equal to this NTSidDomainPrincipal.",
        "meta": {
            "doc_index": 281185,
            "doc_name": "com.sun.security.auth.NTSidDomainPrincipal.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                47,
                72,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123351,
        "text": "null is only valid for enumerations that can return null (e.g. Attribute.getAll() returns an enumeration of attribute values, and an attribute value can be null).",
        "meta": {
            "doc_index": 294188,
            "doc_name": "javax.naming.NamingEnumeration.next().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                63,
                81,
                "Returns-1"
            ],
            [
                90,
                124,
                "Returns-2"
            ],
            [
                130,
                148,
                "CanEQ-1"
            ],
            [
                156,
                160,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 123352,
        "text": "null if no box should be drawn; otherwise, returns the passed-in rectangle (if non-null) or a new rectangle",
        "meta": {
            "doc_index": 297191,
            "doc_name": "javax.swing.plaf.basic.BasicProgressBarUI.getBox(java.awt.Rectangle).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                51,
                74,
                "Returned"
            ],
            [
                92,
                107,
                "Returned"
            ]
        ]
    },
    {
        "id": 123354,
        "text": "Returns true if node was successfully serialized.",
        "meta": {
            "doc_index": 300855,
            "doc_name": "org.w3c.dom.ls.LSSerializer.writeToURI(org.w3c.dom.Node,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123355,
        "text": "the dimensions >= 0 && <= Integer.MAX_VALUE",
        "meta": {
            "doc_index": 295586,
            "doc_name": "javax.swing.BoxLayout.preferredLayoutSize(java.awt.Container).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "GE-1"
            ],
            [
                18,
                19,
                "GE-2"
            ],
            [
                26,
                43,
                "LE-2"
            ]
        ]
    },
    {
        "id": 123357,
        "text": "true if this duration has a total length equal to zero",
        "meta": {
            "doc_index": 288593,
            "doc_name": "java.time.Duration.isZero().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                28,
                40,
                "EQ-1"
            ],
            [
                50,
                54,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123358,
        "text": "The exception to be thrown, after having gone through all ending points, or null if there is no exception to be thrown.",
        "meta": {
            "doc_index": 275749,
            "doc_name": "com.sun.corba.se.spi.protocol.PIHandler.invokeClientPIEndingPoint(int,java.lang.Exception).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "Returned"
            ],
            [
                76,
                80,
                "Returned"
            ],
            [
                96,
                105,
                "NotThrown"
            ]
        ]
    },
    {
        "id": 123359,
        "text": "the types of this executable's formal parameters, or an empty list if there are none",
        "meta": {
            "doc_index": 293050,
            "doc_name": "javax.lang.model.type.ExecutableType.getParameterTypes().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                53,
                66,
                "Returned"
            ],
            [
                0,
                48,
                "Returned"
            ]
        ]
    },
    {
        "id": 123362,
        "text": "ORB runtime returns the value object or a suitable stub object.",
        "meta": {
            "doc_index": 300665,
            "doc_name": "org.omg.CORBA_2_3.portable.InputStream.read_abstract_interface(java.lang.Class).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                3,
                "Returns-1"
            ],
            [
                20,
                36,
                "Returns-2"
            ],
            [
                40,
                62,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123364,
        "text": "This method returns the object that was last set through the getContentHandler() method, or null if that method has never been called since this ValidatorHandler has created.",
        "meta": {
            "doc_index": 300144,
            "doc_name": "javax.xml.validation.ValidatorHandler.getContentHandler().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                20,
                30,
                "Returns-2"
            ],
            [
                92,
                96,
                "Returned"
            ]
        ]
    },
    {
        "id": 123366,
        "text": "An XSTypeDefinition or null if such definition does not exist.",
        "meta": {
            "doc_index": 278044,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.getTypeDefinition(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                23,
                27,
                "Returned"
            ]
        ]
    },
    {
        "id": 123367,
        "text": "true if this tag causes a line break to the flow of data, otherwise returns false",
        "meta": {
            "doc_index": 298541,
            "doc_name": "javax.swing.text.html.HTML.Tag.breaksFlow().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                76,
                81,
                "Returned"
            ]
        ]
    },
    {
        "id": 123368,
        "text": "If posn is equal to size(), an empty composite name is returned.",
        "meta": {
            "doc_index": 293966,
            "doc_name": "javax.naming.CompositeName.getSuffix(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                20,
                26,
                "EQ-2"
            ],
            [
                28,
                51,
                "Returned"
            ]
        ]
    },
    {
        "id": 123369,
        "text": "the string representation of the field value, or null if the string representation is not applicable or the given calendar type is unknown",
        "meta": {
            "doc_index": 291861,
            "doc_name": "java.util.spi.CalendarNameProvider.getDisplayName(java.lang.String,int,int,int,java.util.Locale).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                49,
                53,
                "Returned"
            ],
            [
                0,
                44,
                "Returned"
            ]
        ]
    },
    {
        "id": 123370,
        "text": "There are four possible return types: null (no exception), SystemException, UserException, or RemarshalException.",
        "meta": {
            "doc_index": 275749,
            "doc_name": "com.sun.corba.se.spi.protocol.PIHandler.invokeClientPIEndingPoint(int,java.lang.Exception).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                38,
                42,
                "EQ-2"
            ],
            [
                59,
                74,
                "EQ-2"
            ],
            [
                76,
                89,
                "EQ-2"
            ],
            [
                94,
                112,
                "EQ-2"
            ],
            [
                24,
                36,
                "EQ-1"
            ]
        ]
    },
    {
        "id": 123372,
        "text": "In fact, this method always return an empty list since all MBeanServerDelegateMBean attributes are read-only.",
        "meta": {
            "doc_index": 276046,
            "doc_name": "com.sun.jmx.mbeanserver.MBeanServerDelegateImpl.setAttributes(javax.management.AttributeList).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                20,
                "Returns-1"
            ],
            [
                35,
                48,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123373,
        "text": "the editor kit, or null if there is nothing registered for the given type",
        "meta": {
            "doc_index": 296016,
            "doc_name": "javax.swing.JEditorPane.createEditorKitForContentType(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Returned"
            ],
            [
                19,
                23,
                "Returned"
            ]
        ]
    },
    {
        "id": 123374,
        "text": "Returns null if this certificate does not contain an ExtendedKeyUsage extension.",
        "meta": {
            "doc_index": 286948,
            "doc_name": "java.security.cert.X509Certificate.getExtendedKeyUsage().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123377,
        "text": "Returns HAS_RENDER_ROOT if the opaque region fills the dirty region.",
        "meta": {
            "doc_index": 272918,
            "doc_name": "com.sun.javafx.sg.prism.NGNode.computeNodeRenderRoot(com.sun.javafx.sg.prism.NodePath,com.sun.javafx.geom.RectBounds,int,com.sun.javafx.geom.transform.BaseTransform,com.sun.javafx.geom.transform.GeneralTransform3D).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                23,
                "Returned"
            ]
        ]
    },
    {
        "id": 123378,
        "text": "A null return can also indicate that the map previously associated null with the specified key.)",
        "meta": {
            "doc_index": 290992,
            "doc_name": "java.util.EnumMap.put(K,V).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                2,
                6,
                "Returned"
            ]
        ]
    },
    {
        "id": 123380,
        "text": "Return false if the servant is not local or the ORB does not support local stubs for this particular servant.",
        "meta": {
            "doc_index": 300582,
            "doc_name": "org.omg.CORBA.portable.Delegate.is_local(org.omg.CORBA.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123381,
        "text": "true if ot is assignable to this open type.",
        "meta": {
            "doc_index": 293630,
            "doc_name": "javax.management.openmbean.OpenType.isAssignableFrom(javax.management.openmbean.OpenType<?>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123382,
        "text": "an immutable list of URIs; return empty list if no cookie in this cookie store is associated with an URI",
        "meta": {
            "doc_index": 285481,
            "doc_name": "java.net.CookieStore.getURIs().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "Returned"
            ],
            [
                34,
                44,
                "Returned"
            ]
        ]
    },
    {
        "id": 123383,
        "text": "The attribute type as a string, or null if the attribute is not in the list or if qualified names are not available.",
        "meta": {
            "doc_index": 278430,
            "doc_name": "com.sun.org.apache.xerces.internal.xni.XMLAttributes.getType(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Returned"
            ],
            [
                24,
                30,
                "Type-2"
            ],
            [
                35,
                39,
                "Returned"
            ]
        ]
    },
    {
        "id": 123386,
        "text": "The object's state for binding; null if the factory is not returning any changes.",
        "meta": {
            "doc_index": 294244,
            "doc_name": "javax.naming.spi.StateFactory.getStateToBind(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable<?,?>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                30,
                "Returned"
            ],
            [
                32,
                36,
                "Returned"
            ]
        ]
    },
    {
        "id": 123387,
        "text": "true if obj is equal to this reference; false otherwise.",
        "meta": {
            "doc_index": 294212,
            "doc_name": "javax.naming.Reference.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                11,
                "EQ-1"
            ],
            [
                24,
                38,
                "EQ-2"
            ],
            [
                40,
                45,
                "Returned"
            ]
        ]
    },
    {
        "id": 123388,
        "text": "true if obj is a value for this tabular type, false otherwise.",
        "meta": {
            "doc_index": 293670,
            "doc_name": "javax.management.openmbean.TabularType.isValue(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                46,
                51,
                "Returned"
            ],
            [
                8,
                11,
                "Type-1"
            ],
            [
                27,
                44,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123391,
        "text": "a WildcardType if the type is a wildcard type, or null if it is not.",
        "meta": {
            "doc_index": 275986,
            "doc_name": "com.sun.javadoc.Type.asWildcardType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                18,
                26,
                "EQ-1"
            ],
            [
                30,
                45,
                "EQ-2"
            ],
            [
                0,
                14,
                "Returned"
            ],
            [
                50,
                54,
                "Returned"
            ]
        ]
    },
    {
        "id": 123392,
        "text": "0, if the handler catches any exception, otherwise it points to the exception class which is to be caught.",
        "meta": {
            "doc_index": 276741,
            "doc_name": "com.sun.org.apache.bcel.internal.classfile.CodeException.getCatchType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                1,
                "Returned"
            ]
        ]
    },
    {
        "id": 123393,
        "text": "NOTE: Returns false if either of the KerberosKey objects has been destroyed.",
        "meta": {
            "doc_index": 294726,
            "doc_name": "javax.security.auth.kerberos.KerberosKey.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                19,
                "Returned"
            ]
        ]
    },
    {
        "id": 123394,
        "text": "the number of elements in c equal to o",
        "meta": {
            "doc_index": 289954,
            "doc_name": "java.util.Collections.frequency(java.util.Collection<?>,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "EQ-1"
            ],
            [
                37,
                38,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123395,
        "text": "index of the default property in the PropertyDescriptor array returned by the getPropertyDescriptors method, or -1 if there is no default property",
        "meta": {
            "doc_index": 283662,
            "doc_name": "java.beans.BeanInfo.getDefaultPropertyIndex().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                112,
                114,
                "Returned"
            ],
            [
                0,
                61,
                "Returned"
            ],
            [
                74,
                107,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123396,
        "text": "true if s1 is less than or equal to s2",
        "meta": {
            "doc_index": 280786,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.LessThanOrEqualComparator.compareStrings(com.sun.org.apache.xml.internal.utils.XMLString,com.sun.org.apache.xml.internal.utils.XMLString).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                10,
                "LE-1"
            ],
            [
                36,
                38,
                "LE-2"
            ]
        ]
    },
    {
        "id": 123399,
        "text": "True if the two objects are equal",
        "meta": {
            "doc_index": 280751,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.XBoolean.equals(com.sun.org.apache.xpath.internal.objects.XObject).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123403,
        "text": "the column value as a java.net.URL object; if the value is SQL NULL, the value returned is null in the Java programming language",
        "meta": {
            "doc_index": 287815,
            "doc_name": "java.sql.ResultSet.getURL(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                22,
                34,
                "Type-2"
            ],
            [
                46,
                55,
                "EQ-1"
            ],
            [
                59,
                67,
                "EQ-2"
            ],
            [
                69,
                78,
                "Returned"
            ],
            [
                91,
                95,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123404,
        "text": "true if this is equal to the other offset",
        "meta": {
            "doc_index": 289628,
            "doc_name": "java.time.ZoneOffset.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "EQ-1"
            ],
            [
                25,
                41,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123406,
        "text": "the index of the last occurrence of elem in the list; returns -1 if the object is not found",
        "meta": {
            "doc_index": 295666,
            "doc_name": "javax.swing.DefaultListModel.lastIndexOf(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                62,
                64,
                "Returned"
            ],
            [
                0,
                52,
                "Returned"
            ]
        ]
    },
    {
        "id": 123408,
        "text": "Null return indicates that the caller does not intend to cache the response.",
        "meta": {
            "doc_index": 285668,
            "doc_name": "java.net.ResponseCache.put(java.net.URI,java.net.URLConnection).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123410,
        "text": "If the given policy type is known, but no policy of that tpye is in effect, then this operation will return a nil object reference.",
        "meta": {
            "doc_index": 275565,
            "doc_name": "com.sun.corba.se.impl.interceptors.IORInfoImpl.get_effective_policy(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                81,
                95,
                "Returns-1"
            ],
            [
                108,
                130,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123411,
        "text": "If no state factory returns a non-null answer, the result will contain the object (obj) itself with the original attributes.",
        "meta": {
            "doc_index": 294222,
            "doc_name": "javax.naming.spi.DirectoryManager.getStateToBind(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable<?,?>,javax.naming.directory.Attributes).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                6,
                19,
                "NotReturns-1"
            ],
            [
                28,
                45,
                "NotReturns-2"
            ]
        ]
    },
    {
        "id": 123412,
        "text": "true if the specified object is equal to this OpenMBeanParameterInfoSupport instance.",
        "meta": {
            "doc_index": 293622,
            "doc_name": "javax.management.openmbean.OpenMBeanParameterInfoSupport.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                84,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123414,
        "text": "an immutable list of http cookies; return empty list if there's no http cookie in store",
        "meta": {
            "doc_index": 285480,
            "doc_name": "java.net.CookieStore.getCookies().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                42,
                52,
                "Returned"
            ],
            [
                0,
                33,
                "Returned"
            ]
        ]
    },
    {
        "id": 123417,
        "text": "If the name parameter is not null, it will usually but not necessarily be the returned value.",
        "meta": {
            "doc_index": 293409,
            "doc_name": "javax.management.modelmbean.RequiredModelMBean.preRegister(javax.management.MBeanServer,javax.management.ObjectName).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "NEQ-1"
            ],
            [
                29,
                33,
                "NEQ-2"
            ],
            [
                35,
                37,
                "CanNEQ-1"
            ],
            [
                74,
                92,
                "CanNEQ-2"
            ]
        ]
    },
    {
        "id": 123419,
        "text": "the index of the row that contains the cell currently being edited; returns -1 if nothing being edited",
        "meta": {
            "doc_index": 296712,
            "doc_name": "javax.swing.JTable.getEditingRow().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                76,
                78,
                "Returned"
            ],
            [
                0,
                20,
                "Returned"
            ]
        ]
    },
    {
        "id": 123420,
        "text": "This method returns the object that was last set through the setResourceResolver(LSResourceResolver) method, or null if that method has never been called since this Validator has created.",
        "meta": {
            "doc_index": 300141,
            "doc_name": "javax.xml.validation.Validator.getResourceResolver().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                20,
                30,
                "Returns-2"
            ],
            [
                112,
                116,
                "Returned"
            ]
        ]
    },
    {
        "id": 123421,
        "text": "true if this ShapeGraphicAttribute equals rhs; false otherwise.",
        "meta": {
            "doc_index": 281987,
            "doc_name": "java.awt.font.ShapeGraphicAttribute.equals(java.awt.font.ShapeGraphicAttribute).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                34,
                "EQ-1"
            ],
            [
                42,
                45,
                "EQ-2"
            ],
            [
                47,
                52,
                "Returned"
            ]
        ]
    },
    {
        "id": 123423,
        "text": "If the new Node replaces an existing node the replaced Node is returned, otherwise null is returned.",
        "meta": {
            "doc_index": 300862,
            "doc_name": "org.w3c.dom.NamedNodeMap.setNamedItemNS(org.w3c.dom.Node).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                83,
                87,
                "Returned"
            ],
            [
                42,
                59,
                "Returned"
            ]
        ]
    },
    {
        "id": 123429,
        "text": "The returned object will be serialized as an instance of the non-public class javax.management.AndQueryExp.",
        "meta": {
            "doc_index": 293676,
            "doc_name": "javax.management.Query.and(javax.management.QueryExp,javax.management.QueryExp).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                78,
                106,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123430,
        "text": "If no receiver is currently set, returns null",
        "meta": {
            "doc_index": 295032,
            "doc_name": "javax.sound.midi.Transmitter.getReceiver().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                41,
                45,
                "Returned"
            ]
        ]
    },
    {
        "id": 123433,
        "text": "true if the Reference type indicates that this Reference points to an Object",
        "meta": {
            "doc_index": 279526,
            "doc_name": "com.sun.org.apache.xml.internal.security.signature.Reference.typeIsReferenceToObject().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123434,
        "text": "the calendar system type, null if the calendar is not defined by CLDR/LDML",
        "meta": {
            "doc_index": 288319,
            "doc_name": "java.time.chrono.Chronology.getCalendarType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Returned"
            ],
            [
                26,
                30,
                "Returned"
            ]
        ]
    },
    {
        "id": 123435,
        "text": "true if there is content on this clipboard for this type",
        "meta": {
            "doc_index": 272957,
            "doc_name": "com.sun.javafx.tk.TKClipboard.hasContent(javafx.scene.input.DataFormat).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123436,
        "text": "a Java input stream that delivers the database column value as a stream of two-byte Unicode characters; if the value is SQL NULL, the value returned is null",
        "meta": {
            "doc_index": 287752,
            "doc_name": "java.sql.ResultSet.getUnicodeStream(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                107,
                116,
                "EQ-1"
            ],
            [
                120,
                128,
                "EQ-2"
            ],
            [
                130,
                139,
                "Returned"
            ],
            [
                152,
                156,
                "EQ-2"
            ],
            [
                0,
                19,
                "Returned"
            ]
        ]
    },
    {
        "id": 123437,
        "text": "null is returned if no application data has been specified for the channel binding.",
        "meta": {
            "doc_index": 300315,
            "doc_name": "org.ietf.jgss.ChannelBinding.getApplicationData().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123439,
        "text": "the column width >= 1",
        "meta": {
            "doc_index": 296869,
            "doc_name": "javax.swing.JTextField.getColumnWidth().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                20,
                21,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123446,
        "text": "an integer equal to the number of items in the list",
        "meta": {
            "doc_index": 295875,
            "doc_name": "javax.swing.JComboBox.getItemCount().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "EQ-1"
            ],
            [
                20,
                51,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123447,
        "text": "true if the specified object is equal to this FontRenderContext; false otherwise.",
        "meta": {
            "doc_index": 281886,
            "doc_name": "java.awt.font.FontRenderContext.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                63,
                "EQ-2"
            ],
            [
                65,
                70,
                "Returned"
            ]
        ]
    },
    {
        "id": 123448,
        "text": "the type of the column at position column in the view where the first column is column 0",
        "meta": {
            "doc_index": 296700,
            "doc_name": "javax.swing.JTable.getColumnClass(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                60,
                76,
                "EQ-1"
            ],
            [
                87,
                88,
                "EQ-2"
            ],
            [
                0,
                53,
                "Returned"
            ]
        ]
    },
    {
        "id": 123451,
        "text": "the calendar system type; non-null if the calendar has a standard type, otherwise null",
        "meta": {
            "doc_index": 288402,
            "doc_name": "java.time.chrono.HijrahChronology.getCalendarType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                82,
                86,
                "Returned"
            ],
            [
                0,
                24,
                "NotNull"
            ]
        ]
    },
    {
        "id": 123453,
        "text": "the system-wide cookie handler; A null return means there is no system-wide cookie handler currently set.",
        "meta": {
            "doc_index": 285475,
            "doc_name": "java.net.CookieHandler.getDefault().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                38,
                "Returned"
            ],
            [
                0,
                30,
                "Returned"
            ]
        ]
    },
    {
        "id": 123773,
        "text": "true if type is the same, false otherwise.",
        "meta": {
            "doc_index": 293422,
            "doc_name": "javax.management.monitor.CounterMonitor.isThresholdTypeValid(javax.management.ObjectName,java.lang.String,java.lang.Comparable<?>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                26,
                31,
                "Returned"
            ]
        ]
    },
    {
        "id": 123456,
        "text": "The non-null address type of this address.",
        "meta": {
            "doc_index": 294199,
            "doc_name": "javax.naming.RefAddr.getType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                13,
                41,
                "NotNull"
            ]
        ]
    },
    {
        "id": 123459,
        "text": "return integer representation of characters",
        "meta": {
            "doc_index": 277786,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.parseInt(java.lang.String,int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                43,
                "Returned"
            ]
        ]
    },
    {
        "id": 123462,
        "text": "A negative return value indicates that the amount of accelerated memory on this GraphicsDevice is indeterminate.",
        "meta": {
            "doc_index": 282419,
            "doc_name": "java.awt.GraphicsDevice.getAvailableAcceleratedMemory().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                23,
                "Negative"
            ]
        ]
    },
    {
        "id": 123463,
        "text": "Zero return means option not known.",
        "meta": {
            "doc_index": 275919,
            "doc_name": "com.sun.javadoc.Doclet.optionLength(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123464,
        "text": "true if obj is a PKCS12Attribute and their DER encodings are equal.",
        "meta": {
            "doc_index": 287198,
            "doc_name": "java.security.PKCS12Attribute.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                11,
                "Type-1"
            ],
            [
                17,
                32,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123465,
        "text": "Otherwise, null is returned.",
        "meta": {
            "doc_index": 292492,
            "doc_name": "javax.accessibility.AccessibleExtendedText.getTextRange(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                15,
                "Returned"
            ]
        ]
    },
    {
        "id": 123466,
        "text": "the largest (closest to positive infinity) floating-point value that less than or equal to the argument and is equal to a mathematical integer.",
        "meta": {
            "doc_index": 284809,
            "doc_name": "java.lang.Math.floor(double).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                63,
                "LE-1"
            ],
            [
                91,
                103,
                "LE-2"
            ],
            [
                120,
                142,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123469,
        "text": "The Unicode locale type associated with the key, or null if the locale does not define the key.",
        "meta": {
            "doc_index": 291314,
            "doc_name": "java.util.Locale.getUnicodeLocaleType(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                47,
                "Returned"
            ],
            [
                52,
                56,
                "Returned"
            ]
        ]
    },
    {
        "id": 123472,
        "text": "If it does not occur as a substring starting at fromIndex or beyond, -1 is returned.",
        "meta": {
            "doc_index": 280274,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.indexOf(java.lang.String,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                69,
                71,
                "Returned"
            ]
        ]
    },
    {
        "id": 123474,
        "text": "String Value of this node, or null if not meaningful for this node type.",
        "meta": {
            "doc_index": 278923,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.DTMDocumentImpl.getNodeValue(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                30,
                34,
                "Returned"
            ],
            [
                0,
                25,
                "Returned"
            ]
        ]
    },
    {
        "id": 123475,
        "text": "a Boolean equal to Boolean#TRUE if the object is still handled by the Relation Service and Boolean#FALSE otherwise.",
        "meta": {
            "doc_index": 293778,
            "doc_name": "javax.management.relation.RelationSupportMBean.isInRelationService().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                91,
                104,
                "Returned"
            ],
            [
                19,
                31,
                "Returned"
            ]
        ]
    },
    {
        "id": 123476,
        "text": "The non-negative number of type/value pairs in this Rdn.",
        "meta": {
            "doc_index": 294140,
            "doc_name": "javax.naming.ldap.Rdn.size().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                55,
                "Nonnegative"
            ]
        ]
    },
    {
        "id": 123477,
        "text": "If the years field is present, return its value as an int, else return 0.",
        "meta": {
            "doc_index": 299704,
            "doc_name": "javax.xml.datatype.Duration.getYears().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                38,
                57,
                "Returned"
            ],
            [
                71,
                72,
                "Returned"
            ]
        ]
    },
    {
        "id": 123478,
        "text": "the span the view would like to be rendered into >= 0; typically the view is told to render into the span that is returned, although there is no guarantee; the parent may choose to resize or break the view",
        "meta": {
            "doc_index": 298498,
            "doc_name": "javax.swing.text.html.BlockView.getPreferredSpan(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                52,
                53,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123480,
        "text": "true if this is equal to the other time",
        "meta": {
            "doc_index": 289024,
            "doc_name": "java.time.LocalTime.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "EQ-1"
            ],
            [
                25,
                39,
                "EQ-2"
            ],
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123487,
        "text": "A Node (of any type) with the specified local name and namespace URI, or null if they do not identify any node in this map.",
        "meta": {
            "doc_index": 278957,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.DTMNamedNodeMap.getNamedItemNS(java.lang.String,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                73,
                77,
                "Returned"
            ],
            [
                0,
                68,
                "Returned"
            ]
        ]
    },
    {
        "id": 123488,
        "text": "true if the specified Object is equal equal to this NTNumericCredential.",
        "meta": {
            "doc_index": 281178,
            "doc_name": "com.sun.security.auth.NTNumericCredential.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                47,
                71,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123490,
        "text": "Returns null if this certificate does not contain a KeyUsage extension.",
        "meta": {
            "doc_index": 286947,
            "doc_name": "java.security.cert.X509Certificate.getKeyUsage().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123492,
        "text": "the TreePath to the specified node, null if row < 0 or row >= getRowCount()",
        "meta": {
            "doc_index": 296971,
            "doc_name": "javax.swing.JTree.getPathForRow(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                34,
                "Returned"
            ],
            [
                36,
                40,
                "Returned"
            ],
            [
                44,
                47,
                "LT-1"
            ],
            [
                50,
                51,
                "LT-2"
            ],
            [
                55,
                58,
                "GE-1"
            ],
            [
                62,
                75,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123493,
        "text": "AccessibleValue if supported by object; else return null",
        "meta": {
            "doc_index": 292481,
            "doc_name": "javax.accessibility.AccessibleContext.getAccessibleValue().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "Returned"
            ],
            [
                52,
                56,
                "Returned"
            ]
        ]
    },
    {
        "id": 123495,
        "text": "true if this set defines all the attributes with equal values, either locally or through its resolving parent",
        "meta": {
            "doc_index": 298209,
            "doc_name": "javax.swing.text.AttributeSet.containsAttributes(javax.swing.text.AttributeSet).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123500,
        "text": "the element whose NAME attribute has a value of frameName; returns null if not found",
        "meta": {
            "doc_index": 298562,
            "doc_name": "javax.swing.text.html.HTMLDocument.findFrame(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                67,
                71,
                "Returned"
            ],
            [
                0,
                11,
                "Returned"
            ]
        ]
    },
    {
        "id": 123501,
        "text": "the index of the first occurrence of the character in the character sequence represented by this object that is greater than or equal to fromIndex, or -1 if the character does not occur.",
        "meta": {
            "doc_index": 280891,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.XString.indexOf(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                151,
                153,
                "Returned"
            ],
            [
                0,
                50,
                "GE-1"
            ],
            [
                137,
                146,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123502,
        "text": "1 if the context node is in the set of nodes returned by the reference to the id function; 0, otherwise",
        "meta": {
            "doc_index": 277482,
            "doc_name": "com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex.containsID(int,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                1,
                "Returned"
            ],
            [
                91,
                92,
                "Returned"
            ]
        ]
    },
    {
        "id": 123503,
        "text": "return address type",
        "meta": {
            "doc_index": 277158,
            "doc_name": "com.sun.org.apache.bcel.internal.generic.RET.getType(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                19,
                "Returned"
            ]
        ]
    },
    {
        "id": 123507,
        "text": "If none of the known bits are set, this function will return zero.",
        "meta": {
            "doc_index": 280998,
            "doc_name": "com.sun.org.apache.xpath.internal.patterns.NodeTest.getNodeTypeTest(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                48,
                "Returns-1"
            ],
            [
                61,
                65,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123512,
        "text": "a BigDecimal whose numerical value is equal to (this * 10n)",
        "meta": {
            "doc_index": 285355,
            "doc_name": "java.math.BigDecimal.scaleByPowerOfTen(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                19,
                34,
                "EQ-1"
            ],
            [
                48,
                58,
                "EQ-2"
            ],
            [
                0,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123515,
        "text": "true if this objects class and the expr object's class are the same, and the data contained within both objects are considered equal.",
        "meta": {
            "doc_index": 280607,
            "doc_name": "com.sun.org.apache.xpath.internal.Expression.deepEquals(com.sun.org.apache.xpath.internal.Expression).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                26,
                "EQ-1"
            ],
            [
                31,
                54,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123517,
        "text": "the largest (closest to positive infinity) long value that is less than or equal to the algebraic quotient.",
        "meta": {
            "doc_index": 285142,
            "doc_name": "java.lang.StrictMath.floorDiv(long,long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                53,
                "LE-1"
            ],
            [
                84,
                106,
                "LE-2"
            ]
        ]
    },
    {
        "id": 123519,
        "text": "Each invocation of this method returns a new clone to protect against subsequent modification.",
        "meta": {
            "doc_index": 299555,
            "doc_name": "javax.xml.crypto.dsig.keyinfo.PGPData.getKeyId().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                19,
                30,
                "Returns-1"
            ],
            [
                39,
                50,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123520,
        "text": "This will always happen if GraphicsEnvironment.isHeadless() returns true.",
        "meta": {
            "doc_index": 281541,
            "doc_name": "java.awt.Component.createVolatileImage(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                59,
                "Returns-1"
            ],
            [
                68,
                72,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123521,
        "text": "true if an annotation for the specified annotation type is present on this element, else false",
        "meta": {
            "doc_index": 284940,
            "doc_name": "java.lang.reflect.AnnotatedElement.isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                89,
                94,
                "Returned"
            ]
        ]
    },
    {
        "id": 123522,
        "text": "this component's font; if a font has not been set for this component, the font of its parent is returned",
        "meta": {
            "doc_index": 281510,
            "doc_name": "java.awt.Component.getFont().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Returned"
            ],
            [
                70,
                92,
                "Returned"
            ]
        ]
    },
    {
        "id": 123525,
        "text": "an AccessibleRelationSet if supported by object; otherwise return null",
        "meta": {
            "doc_index": 292483,
            "doc_name": "javax.accessibility.AccessibleContext.getAccessibleRelationSet().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                66,
                70,
                "Returned"
            ],
            [
                0,
                24,
                "Returned"
            ]
        ]
    },
    {
        "id": 123526,
        "text": "true if nextNode() would return the first node in the set, false if it would return a later one.",
        "meta": {
            "doc_index": 280697,
            "doc_name": "com.sun.org.apache.xpath.internal.NodeSet.isFresh().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                18,
                "Returns-1"
            ],
            [
                32,
                57,
                "Returns-2"
            ],
            [
                59,
                64,
                "Returned"
            ],
            [
                68,
                70,
                "Returns-1"
            ],
            [
                84,
                95,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123527,
        "text": "If no source lines are currently open to this mixer, an array of length 0 is returned.",
        "meta": {
            "doc_index": 295161,
            "doc_name": "javax.sound.sampled.Mixer.getSourceLines().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                65,
                71,
                "EQ-1"
            ],
            [
                72,
                73,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123528,
        "text": "the column value; if the value is SQL NULL, the value returned is false",
        "meta": {
            "doc_index": 287739,
            "doc_name": "java.sql.ResultSet.getBoolean(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                21,
                30,
                "EQ-1"
            ],
            [
                34,
                42,
                "EQ-2"
            ],
            [
                44,
                53,
                "Returned"
            ],
            [
                66,
                71,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123529,
        "text": "true if the element is in XML Encryption 1.1 namespace and the local name equals the supplied one",
        "meta": {
            "doc_index": 279734,
            "doc_name": "com.sun.org.apache.xml.internal.security.utils.XMLUtils.elementIsInEncryption11Space(org.w3c.dom.Element,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                59,
                73,
                "EQ-1"
            ],
            [
                81,
                97,
                "EQ-2"
            ],
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123532,
        "text": "true of the DynAnys are equal, false otherwise",
        "meta": {
            "doc_index": 300685,
            "doc_name": "org.omg.DynamicAny._DynFixedStub.equal(org.omg.DynamicAny.DynAny).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                31,
                36,
                "Returned"
            ]
        ]
    },
    {
        "id": 123533,
        "text": "the column value; if the value is SQL NULL, the value returned is null",
        "meta": {
            "doc_index": 287765,
            "doc_name": "java.sql.ResultSet.getTime(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                21,
                30,
                "EQ-1"
            ],
            [
                34,
                42,
                "EQ-2"
            ],
            [
                44,
                53,
                "Returned"
            ],
            [
                66,
                70,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123535,
        "text": "Note also that true will be returned if the argument is an empty string or is equal to this String object as determined by the equals(Object) method.",
        "meta": {
            "doc_index": 280264,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.startsWith(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                19,
                "Returned"
            ],
            [
                40,
                52,
                "EQ-1"
            ],
            [
                56,
                71,
                "EQ-2"
            ],
            [
                87,
                105,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123536,
        "text": "false if node2 comes before node1, otherwise return true.",
        "meta": {
            "doc_index": 279982,
            "doc_name": "com.sun.org.apache.xml.internal.utils.DOM2Helper.isNodeAfter(org.w3c.dom.Node,org.w3c.dom.Node).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                5,
                "Returned"
            ],
            [
                52,
                56,
                "Returned"
            ]
        ]
    },
    {
        "id": 123537,
        "text": "the position >= 0 if the request can be computed, otherwise a value of -1 will be returned.",
        "meta": {
            "doc_index": 298987,
            "doc_name": "javax.swing.text.Utilities.getRowStart(javax.swing.text.JTextComponent,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "GE-1"
            ],
            [
                16,
                17,
                "GE-2"
            ],
            [
                71,
                73,
                "Returned"
            ]
        ]
    },
    {
        "id": 123540,
        "text": "the number of views >= 0",
        "meta": {
            "doc_index": 298247,
            "doc_name": "javax.swing.text.CompositeView.getViewCount().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                23,
                24,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123541,
        "text": "The first node that is greater than or equal to the firstPotential argument, or DTM.NOTPROCESSED if not found.",
        "meta": {
            "doc_index": 278690,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBase.findElementFromIndex(int,int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Returned"
            ],
            [
                48,
                75,
                "GE-2"
            ],
            [
                80,
                96,
                "Returned"
            ]
        ]
    },
    {
        "id": 123542,
        "text": "true if the specified object is equal to this KerberosKey, false otherwise.",
        "meta": {
            "doc_index": 294726,
            "doc_name": "javax.security.auth.kerberos.KerberosKey.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                57,
                "EQ-2"
            ],
            [
                59,
                64,
                "Returned"
            ]
        ]
    },
    {
        "id": 123543,
        "text": "This should never return null.",
        "meta": {
            "doc_index": 298089,
            "doc_name": "javax.swing.table.TableStringConverter.toString(javax.swing.table.TableModel,int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "NotReturns-1"
            ],
            [
                25,
                29,
                "NotReturns-2"
            ]
        ]
    },
    {
        "id": 123547,
        "text": "true if the PaletteBuilder is likely to be able to create palette for this image type.",
        "meta": {
            "doc_index": 275784,
            "doc_name": "com.sun.imageio.plugins.common.PaletteBuilder.canCreatePalette(javax.imageio.ImageTypeSpecifier).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123548,
        "text": "the cause of this MarshalException or null if the cause is nonexistent or unknown.",
        "meta": {
            "doc_index": 299655,
            "doc_name": "javax.xml.crypto.MarshalException.getCause().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                38,
                42,
                "Returned"
            ],
            [
                0,
                34,
                "Returned"
            ]
        ]
    },
    {
        "id": 123549,
        "text": "This method returns the object that was last set through the setErrorHandler(ErrorHandler) method, or null if that method has never been called since this Validator has created.",
        "meta": {
            "doc_index": 300140,
            "doc_name": "javax.xml.validation.Validator.getErrorHandler().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                20,
                30,
                "Returns-2"
            ],
            [
                102,
                106,
                "Returned"
            ]
        ]
    },
    {
        "id": 123550,
        "text": "true if the number of elements is greater than or equal to the target size, otherwise false.",
        "meta": {
            "doc_index": 292198,
            "doc_name": "java.util.stream.SliceOps.SliceTask.isLeftCompleted(long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                30,
                "GE-1"
            ],
            [
                59,
                74,
                "GE-2"
            ],
            [
                86,
                91,
                "Returned"
            ]
        ]
    },
    {
        "id": 123552,
        "text": "the remainder of the division is returned.",
        "meta": {
            "doc_index": 285451,
            "doc_name": "java.math.MutableBigInteger.divideOneWord(int,java.math.MutableBigInteger).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                29,
                "Returned"
            ]
        ]
    },
    {
        "id": 123553,
        "text": "The returned object will be serialized as an instance of the non-public class javax.management.BinaryRelQueryExp with a relOp equal to GE.",
        "meta": {
            "doc_index": 293679,
            "doc_name": "javax.management.Query.geq(javax.management.ValueExp,javax.management.ValueExp).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Type-1"
            ],
            [
                78,
                112,
                "Type-2"
            ],
            [
                118,
                125,
                "EQ-1"
            ],
            [
                135,
                137,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123554,
        "text": "true if p_test is a URI with all values equal to this URI, false otherwise",
        "meta": {
            "doc_index": 278289,
            "doc_name": "com.sun.org.apache.xerces.internal.util.URI.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                14,
                "Type-1"
            ],
            [
                20,
                23,
                "Type-2"
            ],
            [
                29,
                39,
                "EQ-1"
            ],
            [
                49,
                57,
                "EQ-2"
            ],
            [
                59,
                64,
                "Returned"
            ]
        ]
    },
    {
        "id": 123556,
        "text": "If this operation is not supported, Policy.UNSUPPORTED_EMPTY_COLLECTION is returned.",
        "meta": {
            "doc_index": 287215,
            "doc_name": "java.security.PolicySpi.engineGetPermissions(java.security.CodeSource).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                71,
                "Returned"
            ]
        ]
    },
    {
        "id": 123557,
        "text": "The created engine Id or null if given arr is null or its length == 0;",
        "meta": {
            "doc_index": 276496,
            "doc_name": "com.sun.jmx.snmp.SnmpEngineId.createEngineId(byte[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Returned"
            ],
            [
                25,
                29,
                "Returned"
            ],
            [
                33,
                42,
                "EQ-1"
            ],
            [
                46,
                50,
                "EQ-2"
            ],
            [
                54,
                64,
                "EQ-1"
            ],
            [
                68,
                69,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123560,
        "text": "True if the caller should stop and return true which allows the scanner to switch to a new scanning driver.",
        "meta": {
            "doc_index": 277897,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.ContentDriver.scanRootElementHook().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                42,
                46,
                "Returned"
            ]
        ]
    },
    {
        "id": 123562,
        "text": "true if a call to currentClassLoader has a non-null return value.",
        "meta": {
            "doc_index": 285086,
            "doc_name": "java.lang.SecurityManager.inClassLoader().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                18,
                36,
                "Returns-1"
            ],
            [
                41,
                64,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123563,
        "text": "true if name exists as part of the DTD, otherwise returns false",
        "meta": {
            "doc_index": 298644,
            "doc_name": "javax.swing.text.html.parser.DTD.elementExists(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                58,
                63,
                "Returned"
            ]
        ]
    },
    {
        "id": 123564,
        "text": "The timer notification type or null if the identifier is not mapped to any timer notification registered for this timer MBean.",
        "meta": {
            "doc_index": 293936,
            "doc_name": "javax.management.timer.TimerMBean.getNotificationType(java.lang.Integer).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Returned"
            ],
            [
                31,
                35,
                "Returned"
            ]
        ]
    },
    {
        "id": 123567,
        "text": "Note that the result will be true if the argument is the empty string or is equal to this String object as determined by the equals(Object) method.",
        "meta": {
            "doc_index": 280266,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.endsWith(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                20,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ],
            [
                37,
                49,
                "EQ-1"
            ],
            [
                53,
                69,
                "EQ-2"
            ],
            [
                85,
                103,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123571,
        "text": "the resulting relative path, or an empty path if both paths are equal",
        "meta": {
            "doc_index": 286420,
            "doc_name": "java.nio.file.Path.relativize(java.nio.file.Path).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Returned"
            ],
            [
                32,
                45,
                "Returned"
            ]
        ]
    },
    {
        "id": 123573,
        "text": "the attribute; if the value is SQL NULL, returns null",
        "meta": {
            "doc_index": 287875,
            "doc_name": "java.sql.SQLInput.readTimestamp().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                18,
                27,
                "EQ-1"
            ],
            [
                31,
                39,
                "EQ-2"
            ],
            [
                49,
                53,
                "Returned"
            ],
            [
                0,
                13,
                "Returned"
            ]
        ]
    },
    {
        "id": 123574,
        "text": "the cause of this XMLSignatureException or null if the cause is nonexistent or unknown.",
        "meta": {
            "doc_index": 299619,
            "doc_name": "javax.xml.crypto.dsig.XMLSignatureException.getCause().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "Returned"
            ],
            [
                43,
                47,
                "Returned"
            ]
        ]
    },
    {
        "id": 123577,
        "text": "1 if and only if the context node is in the set of nodes returned by the reference to the key function; 0, otherwise",
        "meta": {
            "doc_index": 277483,
            "doc_name": "com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex.containsKey(int,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                1,
                "Returned"
            ],
            [
                104,
                105,
                "Returned"
            ]
        ]
    },
    {
        "id": 123578,
        "text": "The point (0,0) returns by default.",
        "meta": {
            "doc_index": 299070,
            "doc_name": "javax.swing.TransferHandler.getDragImageOffset().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "Returned"
            ]
        ]
    },
    {
        "id": 123579,
        "text": "true if two HTTP cookies equal to each other; otherwise, false",
        "meta": {
            "doc_index": 285531,
            "doc_name": "java.net.HttpCookie.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                57,
                62,
                "Returned"
            ]
        ]
    },
    {
        "id": 123581,
        "text": "the actual number of bytes read, -1 is returned when the end of the stream is reached.",
        "meta": {
            "doc_index": 283955,
            "doc_name": "java.io.ObjectInput.read(byte[],int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "Returned"
            ],
            [
                33,
                35,
                "Returned"
            ]
        ]
    },
    {
        "id": 123584,
        "text": "May return null if the property isn't indexed or is write-only.",
        "meta": {
            "doc_index": 283717,
            "doc_name": "java.beans.IndexedPropertyDescriptor.getIndexedReadMethod().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                15,
                "Returned"
            ]
        ]
    },
    {
        "id": 123587,
        "text": "the starting offset >= 0 and < getEndOffset();",
        "meta": {
            "doc_index": 298348,
            "doc_name": "javax.swing.text.Element.getStartOffset().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                23,
                24,
                "GE-2"
            ],
            [
                31,
                45,
                "LT-2"
            ]
        ]
    },
    {
        "id": 123589,
        "text": "true if the Reference type indicates that this Reference points to a Manifest",
        "meta": {
            "doc_index": 279527,
            "doc_name": "com.sun.org.apache.xml.internal.security.signature.Reference.typeIsReferenceToManifest().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123590,
        "text": "If columnIdentifiers does not have an entry for this index, returns the default name provided by the superclass.",
        "meta": {
            "doc_index": 298029,
            "doc_name": "javax.swing.table.DefaultTableModel.getColumnName(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                68,
                84,
                "Returned"
            ]
        ]
    },
    {
        "id": 123591,
        "text": "If the specified field is present, this method returns a non-null non-negative Number object that represents its value.",
        "meta": {
            "doc_index": 278158,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl.getField(javax.xml.datatype.DatatypeConstants.Field).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                46,
                "Returns-1"
            ],
            [
                55,
                92,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123594,
        "text": "a long value with a single one-bit, in the position of the highest-order one-bit in the specified value, or zero if the specified value is itself equal to zero.",
        "meta": {
            "doc_index": 284646,
            "doc_name": "java.lang.Long.highestOneBit(long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                116,
                135,
                "EQ-1"
            ],
            [
                155,
                159,
                "EQ-2"
            ],
            [
                0,
                34,
                "Returned"
            ],
            [
                108,
                112,
                "Returned"
            ]
        ]
    },
    {
        "id": 123595,
        "text": "If m_token is null, returns false (or true if s is also null), or return true if the current token matches the string, else false.",
        "meta": {
            "doc_index": 280564,
            "doc_name": "com.sun.org.apache.xpath.internal.compiler.XPathParser.tokenIs(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ],
            [
                28,
                33,
                "Returned"
            ],
            [
                38,
                42,
                "Returned"
            ],
            [
                46,
                47,
                "EQ-1"
            ],
            [
                56,
                60,
                "EQ-2"
            ],
            [
                73,
                77,
                "Returned"
            ],
            [
                124,
                129,
                "Returned"
            ]
        ]
    },
    {
        "id": 123597,
        "text": "true if it represents an enum type",
        "meta": {
            "doc_index": 275914,
            "doc_name": "com.sun.javadoc.Doc.isEnum().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123598,
        "text": "if the value for key is a String, return the String object; otherwise return null",
        "meta": {
            "doc_index": 299203,
            "doc_name": "javax.swing.UIDefaults.getString(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                41,
                58,
                "Returned"
            ],
            [
                77,
                81,
                "Returned"
            ],
            [
                3,
                20,
                "Type-1"
            ],
            [
                26,
                32,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123599,
        "text": "the index of the first occurrence of the object argument in this vector at position index or later in the vector; returns -1 if the object is not found.",
        "meta": {
            "doc_index": 280034,
            "doc_name": "com.sun.org.apache.xml.internal.utils.NodeVector.indexOf(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                122,
                124,
                "Returned"
            ],
            [
                0,
                56,
                "Returned"
            ]
        ]
    },
    {
        "id": 123600,
        "text": "The default behavior of is_local() is to return false.",
        "meta": {
            "doc_index": 300582,
            "doc_name": "org.omg.CORBA.portable.Delegate.is_local(org.omg.CORBA.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                34,
                "Returns-1"
            ],
            [
                48,
                53,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123601,
        "text": "the error or warning message for this SOAPException or, if it has none, the message of the embedded Throwable object, if there is one",
        "meta": {
            "doc_index": 299859,
            "doc_name": "javax.xml.soap.SOAPException.getMessage().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                51,
                "Returned"
            ],
            [
                72,
                116,
                "Returned"
            ]
        ]
    },
    {
        "id": 123602,
        "text": "Returns the parent \"stack frame\" of the one popped.",
        "meta": {
            "doc_index": 279796,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.ElemContext.pop().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                50,
                "Returned"
            ]
        ]
    },
    {
        "id": 123604,
        "text": "If no matching target lines are supported, an array of length 0 is returned.",
        "meta": {
            "doc_index": 295065,
            "doc_name": "javax.sound.sampled.AudioSystem.getTargetLineInfo(javax.sound.sampled.Line.Info).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                55,
                61,
                "EQ-1"
            ],
            [
                62,
                63,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123605,
        "text": "true if the file type is supported, otherwise false",
        "meta": {
            "doc_index": 294928,
            "doc_name": "javax.sound.midi.MidiSystem.isFileTypeSupported(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                46,
                51,
                "Returned"
            ]
        ]
    },
    {
        "id": 123608,
        "text": "true if this reverb type is the same as obj; false otherwise",
        "meta": {
            "doc_index": 295180,
            "doc_name": "javax.sound.sampled.ReverbType.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                45,
                50,
                "Returned"
            ],
            [
                8,
                24,
                "EQ-1"
            ],
            [
                40,
                43,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123609,
        "text": "the column value ; if the value is a SQL NULL the value returned is null",
        "meta": {
            "doc_index": 287817,
            "doc_name": "java.sql.ResultSet.getRowId(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                22,
                31,
                "EQ-1"
            ],
            [
                37,
                45,
                "EQ-2"
            ],
            [
                46,
                55,
                "Returned"
            ],
            [
                68,
                72,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123610,
        "text": "a map of the attributes returned; may be empty.",
        "meta": {
            "doc_index": 286458,
            "doc_name": "java.nio.file.spi.FileSystemProvider.readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Returned"
            ]
        ]
    },
    {
        "id": 123611,
        "text": "Always return a non-null valid Schema object.",
        "meta": {
            "doc_index": 300127,
            "doc_name": "javax.xml.validation.SchemaFactory.newSchema(javax.xml.transform.Source[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                44,
                "NotNull"
            ]
        ]
    },
    {
        "id": 123612,
        "text": "If the value returned is equal to the number of children, then the specified children are valid but additional content is required to reach a valid ending state.",
        "meta": {
            "doc_index": 277744,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.dtd.models.DFAContentModel.validate(com.sun.org.apache.xerces.internal.xni.QName[],int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "Returned"
            ],
            [
                34,
                56,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123613,
        "text": "the X location of the end of the range >= 0",
        "meta": {
            "doc_index": 299029,
            "doc_name": "javax.swing.text.WrappedPlainView.drawUnselectedText(java.awt.Graphics,int,int,int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                38,
                "GE-1"
            ],
            [
                42,
                43,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123614,
        "text": "Returns true if the string was skipped.",
        "meta": {
            "doc_index": 277931,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipString(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123615,
        "text": "Returns the next character on the input, if known.",
        "meta": {
            "doc_index": 277925,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanLiteral(int,com.sun.org.apache.xerces.internal.xni.XMLString,boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                39,
                "Returned"
            ]
        ]
    },
    {
        "id": 123617,
        "text": "If no providers are available, a List of length 0 will be returned.",
        "meta": {
            "doc_index": 294943,
            "doc_name": "javax.sound.midi.MidiSystem.getProviders(java.lang.Class).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                41,
                47,
                "EQ-1"
            ],
            [
                48,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123618,
        "text": "true if the file type is supported for this sequence, otherwise false",
        "meta": {
            "doc_index": 295007,
            "doc_name": "javax.sound.midi.spi.MidiFileWriter.isFileTypeSupported(int,javax.sound.midi.Sequence).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                64,
                69,
                "Returned"
            ]
        ]
    },
    {
        "id": 123623,
        "text": "If no properties are recognized, an empty map is returned.",
        "meta": {
            "doc_index": 295037,
            "doc_name": "javax.sound.sampled.AudioFileFormat.properties().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                45,
                "Returned"
            ]
        ]
    },
    {
        "id": 123624,
        "text": "If it is not present, return null.",
        "meta": {
            "doc_index": 278158,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl.getField(javax.xml.datatype.DatatypeConstants.Field).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                33,
                "Returned"
            ]
        ]
    },
    {
        "id": 123626,
        "text": "the value returned by the PrivilegedAction's run method.",
        "meta": {
            "doc_index": 294805,
            "doc_name": "javax.security.auth.Subject.doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedAction<T>,java.security.AccessControlContext).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "ReturnsBy-1"
            ],
            [
                22,
                55,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123627,
        "text": "the alignment >= 0.0f && <= 1.0f",
        "meta": {
            "doc_index": 295589,
            "doc_name": "javax.swing.BoxLayout.getLayoutAlignmentX(java.awt.Container).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "GE-1"
            ],
            [
                17,
                21,
                "GE-2"
            ],
            [
                28,
                32,
                "LE-2"
            ]
        ]
    },
    {
        "id": 123628,
        "text": "If the YEARS field is not present, return 0.",
        "meta": {
            "doc_index": 278159,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl.getYears().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                42,
                43,
                "Returned"
            ]
        ]
    },
    {
        "id": 123630,
        "text": "the event type of the element read (START_ELEMENT or END_ELEMENT)",
        "meta": {
            "doc_index": 300007,
            "doc_name": "javax.xml.stream.XMLStreamReader.nextTag().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                34,
                "EQ-1"
            ],
            [
                36,
                49,
                "EQ-2"
            ],
            [
                53,
                64,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123631,
        "text": "If no file types are supported, an array of length 0 is returned.",
        "meta": {
            "doc_index": 295088,
            "doc_name": "javax.sound.sampled.AudioSystem.getAudioFileTypes(javax.sound.sampled.AudioInputStream).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                50,
                "EQ-1"
            ],
            [
                51,
                52,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123634,
        "text": "a Blob object representing the SQL BLOB value at the head of this stream; if the value is SQL NULL, return null",
        "meta": {
            "doc_index": 295387,
            "doc_name": "javax.sql.rowset.serial.SQLInputImpl.readBlob().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                77,
                86,
                "EQ-1"
            ],
            [
                90,
                98,
                "EQ-2"
            ],
            [
                107,
                111,
                "Returned"
            ]
        ]
    },
    {
        "id": 123635,
        "text": "True if object is an ObjectName whose canonical form is equal to that of this ObjectName.",
        "meta": {
            "doc_index": 293526,
            "doc_name": "javax.management.ObjectName.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                14,
                "Type-1"
            ],
            [
                21,
                31,
                "Type-2"
            ],
            [
                38,
                52,
                "EQ-1"
            ],
            [
                65,
                88,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123636,
        "text": "true if and only if o is an MBeanConstructorInfo such that its getName(), getDescription(), getSignature(), and getDescriptor() values are equal (not necessarily identical) to those of this MBeanConstructorInfo.",
        "meta": {
            "doc_index": 293302,
            "doc_name": "javax.management.MBeanConstructorInfo.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                20,
                21,
                "Type-1"
            ],
            [
                28,
                48,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123637,
        "text": "if the value for key and Locale is a Dimension, return the Dimension object; otherwise return null",
        "meta": {
            "doc_index": 299212,
            "doc_name": "javax.swing.UIDefaults.getDimension(java.lang.Object,java.util.Locale).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                31,
                "Type-1"
            ],
            [
                37,
                46,
                "Type-2"
            ],
            [
                55,
                75,
                "Returned"
            ],
            [
                94,
                98,
                "Returned"
            ]
        ]
    },
    {
        "id": 123639,
        "text": "If there are no extensions present at all, then this method returns null.",
        "meta": {
            "doc_index": 287021,
            "doc_name": "java.security.cert.X509Extension.getCriticalExtensionOIDs().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                48,
                59,
                "Returns-1"
            ],
            [
                68,
                72,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123640,
        "text": "the span the view would like to be rendered into >=0.",
        "meta": {
            "doc_index": 298241,
            "doc_name": "javax.swing.text.ComponentView.getPreferredSpan(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                51,
                52,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123641,
        "text": "the cause of this throwable or null if the cause is nonexistent or unknown.",
        "meta": {
            "doc_index": 285309,
            "doc_name": "java.lang.Throwable.getCause().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "Returned"
            ],
            [
                31,
                35,
                "Returned"
            ]
        ]
    },
    {
        "id": 123642,
        "text": "A new array is returned each time this method is called.",
        "meta": {
            "doc_index": 287334,
            "doc_name": "java.security.spec.EllipticCurve.getSeed().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                45,
                "ReturnsBy-2"
            ],
            [
                0,
                11,
                "ReturnsBy-1"
            ]
        ]
    },
    {
        "id": 123643,
        "text": "true if types generated by this round will not be subject to a subsequent round of annotation processing; returns false otherwise",
        "meta": {
            "doc_index": 292592,
            "doc_name": "javax.annotation.processing.RoundEnvironment.processingOver().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                114,
                119,
                "Returned"
            ]
        ]
    },
    {
        "id": 123644,
        "text": "the character at the new position or DONE if the current position is equal to getBeginIndex().",
        "meta": {
            "doc_index": 288013,
            "doc_name": "java.text.CharacterIterator.previous().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                33,
                "Returned"
            ],
            [
                37,
                41,
                "Returned"
            ],
            [
                45,
                65,
                "EQ-1"
            ],
            [
                78,
                93,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123645,
        "text": "all this element's annotations for the specified annotation type if directly or indirectly present on this element, else an array of length zero",
        "meta": {
            "doc_index": 284945,
            "doc_name": "java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(java.lang.Class<T>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                133,
                139,
                "EQ-1"
            ],
            [
                140,
                144,
                "EQ-2"
            ],
            [
                0,
                64,
                "Returned"
            ]
        ]
    },
    {
        "id": 123650,
        "text": "Returns null if it has not been set.",
        "meta": {
            "doc_index": 294639,
            "doc_name": "javax.script.ScriptContext.getBindings(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123652,
        "text": "true if hasContent(DataFormat.PLAIN_TEXT) returns true, false otherwise",
        "meta": {
            "doc_index": 274820,
            "doc_name": "javafx.scene.input.Clipboard.hasString().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                56,
                61,
                "Returned"
            ],
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                41,
                "Returns-1"
            ],
            [
                50,
                54,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123655,
        "text": "For SECONDS, this method returns a BigDecimal.",
        "meta": {
            "doc_index": 278158,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl.getField(javax.xml.datatype.DatatypeConstants.Field).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                13,
                24,
                "Returns-1"
            ],
            [
                33,
                45,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123658,
        "text": "If there is no back buffer, returns null.",
        "meta": {
            "doc_index": 281556,
            "doc_name": "java.awt.Component.BltBufferStrategy.getBackBuffer().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                40,
                "Returned"
            ]
        ]
    },
    {
        "id": 123659,
        "text": "the zero-based index of the character under Point p; if Point is invalid return -1.",
        "meta": {
            "doc_index": 297856,
            "doc_name": "javax.swing.ProgressMonitor.AccessibleProgressMonitor.getIndexAtPoint(java.awt.Point).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                80,
                82,
                "Returned"
            ],
            [
                0,
                51,
                "Returned"
            ]
        ]
    },
    {
        "id": 123660,
        "text": "When the OID is found, it returns the next position.",
        "meta": {
            "doc_index": 276172,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpMibTable.getInsertionPoint(com.sun.jmx.snmp.SnmpOid,boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                25,
                "Returns-1"
            ],
            [
                34,
                51,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123661,
        "text": "the InputMap for the given condition; if create is false and the InputMap hasn't been created, returns null",
        "meta": {
            "doc_index": 295940,
            "doc_name": "javax.swing.JComponent.getInputMap(int,boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                41,
                47,
                "EQ-1"
            ],
            [
                51,
                56,
                "EQ-2"
            ],
            [
                103,
                107,
                "Returned"
            ],
            [
                0,
                36,
                "Returned"
            ]
        ]
    },
    {
        "id": 123662,
        "text": "0 if date1 and date2 are equal, a value less than 0 if date1 is less than date2, a value greater than 0 if date1 is greater than date2",
        "meta": {
            "doc_index": 277783,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.compareOrder(com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData,com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                1,
                "Returned"
            ],
            [
                5,
                10,
                "EQ-1"
            ],
            [
                15,
                20,
                "EQ-2"
            ],
            [
                50,
                51,
                "LT-2"
            ],
            [
                55,
                60,
                "LT-1"
            ],
            [
                74,
                79,
                "LT-2"
            ],
            [
                32,
                39,
                "LT-1"
            ],
            [
                81,
                88,
                "GT-1"
            ],
            [
                102,
                103,
                "GT-2"
            ],
            [
                107,
                112,
                "GT-1"
            ],
            [
                129,
                134,
                "GT-2"
            ]
        ]
    },
    {
        "id": 123664,
        "text": "boolean True if the type is derived by extension for the reference type",
        "meta": {
            "doc_index": 278085,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl.isDerivedByExtension(java.lang.String,java.lang.String,int,com.sun.org.apache.xerces.internal.xs.XSTypeDefinition).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123666,
        "text": "the relationship between this Durationand duration parameter as DatatypeConstants#LESSER, DatatypeConstants#EQUAL, DatatypeConstants#GREATER or DatatypeConstants#INDETERMINATE.",
        "meta": {
            "doc_index": 299720,
            "doc_name": "javax.xml.datatype.Duration.compare(javax.xml.datatype.Duration).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                60,
                "EQ-1"
            ],
            [
                64,
                88,
                "EQ-2"
            ],
            [
                90,
                113,
                "EQ-2"
            ],
            [
                115,
                140,
                "EQ-2"
            ],
            [
                144,
                175,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123667,
        "text": "A return value of false indicates that the content driver should continue as normal.",
        "meta": {
            "doc_index": 277897,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.ContentDriver.scanRootElementHook().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                2,
                14,
                "EQ-1"
            ],
            [
                18,
                23,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123668,
        "text": "a float array with length equal to the number of components in this ColorSpace.",
        "meta": {
            "doc_index": 281439,
            "doc_name": "java.awt.color.ICC_ColorSpace.fromRGB(float[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                19,
                25,
                "EQ-1"
            ],
            [
                35,
                78,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123669,
        "text": "Returns null if the index is out of bounds, or an element of type T that is related to the given index.",
        "meta": {
            "doc_index": 274603,
            "doc_name": "javafx.scene.control.MultipleSelectionModelBase.getModelItem(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                47,
                67,
                "Returned"
            ]
        ]
    },
    {
        "id": 123670,
        "text": "For YEARS, MONTHS, DAYS, HOURS, and MINUTES, this method returns a java.math.BigInteger object.",
        "meta": {
            "doc_index": 299712,
            "doc_name": "javax.xml.datatype.Duration.getField(javax.xml.datatype.DatatypeConstants.Field).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                56,
                "Returns-1"
            ],
            [
                65,
                94,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123671,
        "text": "The value returned by the script.",
        "meta": {
            "doc_index": 294652,
            "doc_name": "javax.script.ScriptEngine.eval(java.lang.String,javax.script.Bindings).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "ReturnsBy-1"
            ],
            [
                22,
                32,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123672,
        "text": "this construct's annotations for the specified annotation type if present on this construct, else an empty array",
        "meta": {
            "doc_index": 292961,
            "doc_name": "javax.lang.model.AnnotatedConstruct.getAnnotationsByType(java.lang.Class<A>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                98,
                112,
                "Returned"
            ],
            [
                0,
                62,
                "Returned"
            ]
        ]
    },
    {
        "id": 123675,
        "text": "true if millis <= other.millis using double arithmetic",
        "meta": {
            "doc_index": 275543,
            "doc_name": "javafx.util.Duration.lessThanOrEqualTo(javafx.util.Duration).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                14,
                "LE-1"
            ],
            [
                18,
                30,
                "LE-2"
            ]
        ]
    },
    {
        "id": 123676,
        "text": "The _is_local() method returns true if the servant incarnating the object is located in the same process as the stub and they both share the same ORB instance.",
        "meta": {
            "doc_index": 275593,
            "doc_name": "com.sun.corba.se.impl.javax.rmi.CORBA.Util.isLocal(javax.rmi.CORBA.Stub).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Returns-1"
            ],
            [
                31,
                35,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123677,
        "text": "Cannot return null",
        "meta": {
            "doc_index": 274558,
            "doc_name": "javafx.scene.control.Control.loadClass(java.lang.String,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                18,
                "NotReturned"
            ]
        ]
    },
    {
        "id": 123678,
        "text": "true if greater than or equal to minimum degree, false otherwise.",
        "meta": {
            "doc_index": 293796,
            "doc_name": "javax.management.relation.RoleInfo.checkMinDegree(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                49,
                54,
                "Returned"
            ]
        ]
    },
    {
        "id": 123680,
        "text": "true if this is equal to the specified rules",
        "meta": {
            "doc_index": 289345,
            "doc_name": "java.time.temporal.WeekFields.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "EQ-1"
            ],
            [
                25,
                44,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123681,
        "text": "the index of the property if found; return -1 if not",
        "meta": {
            "doc_index": 278378,
            "doc_name": "com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager.getIndex(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                43,
                45,
                "Returned"
            ],
            [
                0,
                25,
                "Returned"
            ]
        ]
    },
    {
        "id": 123682,
        "text": "Null is returned if there was no \"?\"",
        "meta": {
            "doc_index": 280228,
            "doc_name": "com.sun.org.apache.xml.internal.utils.URI.getQueryString().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123683,
        "text": "The return value will be one of INITIATE_ONLY, ACCEPT_ONLY, and INITIATE_AND_ACCEPT.",
        "meta": {
            "doc_index": 300347,
            "doc_name": "org.ietf.jgss.GSSCredential.getUsage().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "EQ-1"
            ],
            [
                32,
                58,
                "EQ-2"
            ],
            [
                64,
                83,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123684,
        "text": "The content type or null if the file type is not recognized",
        "meta": {
            "doc_index": 286459,
            "doc_name": "java.nio.file.spi.FileTypeDetector.probeContentType(java.nio.file.Path).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                20,
                24,
                "Returned"
            ]
        ]
    },
    {
        "id": 123685,
        "text": "AccessibleText if supported by object; else return null",
        "meta": {
            "doc_index": 296570,
            "doc_name": "javax.swing.JSpinner.AccessibleJSpinner.getAccessibleText().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                51,
                55,
                "Returned"
            ],
            [
                0,
                14,
                "Returned"
            ]
        ]
    },
    {
        "id": 123687,
        "text": "the number of child elements >= 0",
        "meta": {
            "doc_index": 298351,
            "doc_name": "javax.swing.text.Element.getElementCount().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "GE-1"
            ],
            [
                32,
                33,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123688,
        "text": "The content type or Locator#DEFAULT_CONTENT_TYPE if not able to be determined or unsupported.",
        "meta": {
            "doc_index": 273059,
            "doc_name": "com.sun.media.jfxmediaimpl.MediaUtils.fileSignatureToContentType(byte[],int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                20,
                48,
                "Returned"
            ]
        ]
    },
    {
        "id": 123690,
        "text": "true if the specified object is equal to this map",
        "meta": {
            "doc_index": 289641,
            "doc_name": "java.util.AbstractMap.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123692,
        "text": "Returns the DOMObject associated to the given key on this node, or null if there was none.",
        "meta": {
            "doc_index": 280212,
            "doc_name": "com.sun.org.apache.xml.internal.utils.UnImplNode.getUserData(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                21,
                "Returned"
            ],
            [
                67,
                71,
                "Returned"
            ]
        ]
    },
    {
        "id": 123693,
        "text": "the actions (always returns \"read\").",
        "meta": {
            "doc_index": 294794,
            "doc_name": "javax.security.auth.PrivateCredentialPermission.getActions().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                28,
                34,
                "Returned"
            ]
        ]
    },
    {
        "id": 123694,
        "text": "true if the interior of the Shape entirely contains the specified rectangular area; false otherwise or, if the Shape contains the rectangular area and the intersects method returns true and the containment calculations would be too expensive to perform.",
        "meta": {
            "doc_index": 272688,
            "doc_name": "com.sun.javafx.geom.Shape.contains(float,float,float,float).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                84,
                89,
                "Returned"
            ],
            [
                151,
                172,
                "Returns-1"
            ],
            [
                181,
                185,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123696,
        "text": "true if the two ExtendedType objects are equal.",
        "meta": {
            "doc_index": 279000,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.ExtendedType.equals(com.sun.org.apache.xml.internal.dtm.ref.ExtendedType).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123697,
        "text": "Never returns null or an empty list.",
        "meta": {
            "doc_index": 299531,
            "doc_name": "javax.xml.crypto.dsig.keyinfo.KeyInfo.getContent().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                18,
                "NotReturned"
            ],
            [
                22,
                35,
                "NotReturned"
            ]
        ]
    },
    {
        "id": 123699,
        "text": "boolean Returns true if this node defines a subtree within which the specified feature is supported, false otherwise.",
        "meta": {
            "doc_index": 277664,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.NodeImpl.isSupported(java.lang.String,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                20,
                "Returned"
            ],
            [
                101,
                106,
                "Returned"
            ]
        ]
    },
    {
        "id": 123703,
        "text": "JoinRowSet.INNER_JOIN is returned as the default JOIN type is no type has been explicitly set.",
        "meta": {
            "doc_index": 295271,
            "doc_name": "javax.sql.rowset.JoinRowSet.getJoinType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Returned"
            ]
        ]
    },
    {
        "id": 123706,
        "text": "the type of dialog to be displayed: JFileChooser.OPEN_DIALOG JFileChooser.SAVE_DIALOG JFileChooser.CUSTOM_DIALOG",
        "meta": {
            "doc_index": 296050,
            "doc_name": "javax.swing.JFileChooser.getDialogType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                34,
                "EQ-1"
            ],
            [
                36,
                60,
                "EQ-2"
            ],
            [
                61,
                85,
                "EQ-2"
            ],
            [
                86,
                112,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123707,
        "text": "the value 0 if this Byte is equal to the argument Byte; a value less than 0 if this Byte is numerically less than the argument Byte; and a value greater than 0 if this Byte is numerically greater than the argument Byte (signed comparison).",
        "meta": {
            "doc_index": 284168,
            "doc_name": "java.lang.Byte.compareTo(java.lang.Byte).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                10,
                11,
                "EQ-2"
            ],
            [
                15,
                24,
                "EQ-1"
            ],
            [
                37,
                54,
                "EQ-2"
            ],
            [
                56,
                63,
                "LT-1"
            ],
            [
                74,
                75,
                "LT-2"
            ],
            [
                79,
                88,
                "LT-1"
            ],
            [
                114,
                131,
                "LT-2"
            ],
            [
                137,
                144,
                "GT-1"
            ],
            [
                158,
                159,
                "GT-2"
            ],
            [
                163,
                172,
                "GT-1"
            ],
            [
                201,
                218,
                "GT-2"
            ]
        ]
    },
    {
        "id": 123708,
        "text": "the ending offset >= 0",
        "meta": {
            "doc_index": 298411,
            "doc_name": "javax.swing.text.Highlighter.Highlight.getEndOffset().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                21,
                22,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123711,
        "text": "True if the two object instances are equal, otherwise false.",
        "meta": {
            "doc_index": 293501,
            "doc_name": "javax.management.ObjectInstance.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                54,
                59,
                "Returned"
            ]
        ]
    },
    {
        "id": 123712,
        "text": "This returns no NrageToken.",
        "meta": {
            "doc_index": 277979,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema.parseCharacterClass(boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "NotReturns-1"
            ],
            [
                16,
                26,
                "NotReturns-2"
            ]
        ]
    },
    {
        "id": 123713,
        "text": "Returns null if key was previously unset.",
        "meta": {
            "doc_index": 294680,
            "doc_name": "javax.script.SimpleBindings.put(java.lang.String,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123715,
        "text": "Returns true if this node has any children, false otherwise.",
        "meta": {
            "doc_index": 300872,
            "doc_name": "org.w3c.dom.Node.hasChildNodes().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                44,
                49,
                "Returned"
            ]
        ]
    },
    {
        "id": 123716,
        "text": "the value 0 if the argument string is equal to this string; a value less than 0 if this string is lexicographically less than the string argument; and a value greater than 0 if this string is lexicographically greater than the string argument.",
        "meta": {
            "doc_index": 280882,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.XString.compareTo(com.sun.org.apache.xml.internal.utils.XMLString).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                10,
                11,
                "EQ-2"
            ],
            [
                15,
                34,
                "EQ-1"
            ],
            [
                47,
                58,
                "EQ-2"
            ],
            [
                60,
                67,
                "LT-1"
            ],
            [
                78,
                79,
                "LT-2"
            ],
            [
                83,
                94,
                "LT-1"
            ],
            [
                126,
                145,
                "LT-2"
            ],
            [
                151,
                158,
                "GT-1"
            ],
            [
                172,
                173,
                "GT-2"
            ],
            [
                177,
                188,
                "GT-1"
            ],
            [
                223,
                242,
                "GT-2"
            ]
        ]
    },
    {
        "id": 123717,
        "text": "Returns -1 if no attribute with the given name is defined in any scope.",
        "meta": {
            "doc_index": 294687,
            "doc_name": "javax.script.SimpleScriptContext.getAttributesScope(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                10,
                "Returned"
            ]
        ]
    },
    {
        "id": 123719,
        "text": "true if the type of the specified attribute is ID.",
        "meta": {
            "doc_index": 300138,
            "doc_name": "javax.xml.validation.TypeInfoProvider.isIdAttribute(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                43,
                "EQ-1"
            ],
            [
                47,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123720,
        "text": "always returns false",
        "meta": {
            "doc_index": 295981,
            "doc_name": "javax.swing.JComponent.isValidateRoot().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                20,
                "Returned"
            ]
        ]
    },
    {
        "id": 123723,
        "text": "true if this object is equal to the obj argument; false otherwise.",
        "meta": {
            "doc_index": 275391,
            "doc_name": "javafx.scene.text.Font.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                19,
                "EQ-1"
            ],
            [
                32,
                48,
                "EQ-2"
            ],
            [
                50,
                55,
                "Returned"
            ]
        ]
    },
    {
        "id": 123724,
        "text": "A list of top-level definitions of the specified type in objectType or an empty XSNamedMap if no such definitions exist.",
        "meta": {
            "doc_index": 278114,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl.getComponents(short).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                71,
                90,
                "Returned"
            ],
            [
                0,
                67,
                "Returned"
            ]
        ]
    },
    {
        "id": 123725,
        "text": "true if this is one of multiple adjustment events, otherwise returns false",
        "meta": {
            "doc_index": 281772,
            "doc_name": "java.awt.event.AdjustmentEvent.getValueIsAdjusting().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                69,
                74,
                "Returned"
            ]
        ]
    },
    {
        "id": 123741,
        "text": "the screen coordinates of the character's the bounding box, if index is invalid returns an empty rectangle.",
        "meta": {
            "doc_index": 298440,
            "doc_name": "javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext.getCharacterBounds(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                88,
                106,
                "Returned"
            ],
            [
                0,
                58,
                "Returned"
            ]
        ]
    },
    {
        "id": 123745,
        "text": "Returns true if node was successfully serialized and false in case the node couldn't be serialized.",
        "meta": {
            "doc_index": 279764,
            "doc_name": "com.sun.org.apache.xml.internal.serialize.DOMSerializerImpl.writeToURI(org.w3c.dom.Node,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                53,
                58,
                "Returned"
            ]
        ]
    },
    {
        "id": 123749,
        "text": "Returns true if the specified feature is supported on this node, false otherwise.",
        "meta": {
            "doc_index": 300874,
            "doc_name": "org.w3c.dom.Node.isSupported(java.lang.String,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                65,
                70,
                "Returned"
            ]
        ]
    },
    {
        "id": 123750,
        "text": "a java.io.Reader object that contains the column value; if the value is SQL NULL, the value returned is null in the Java programming language.",
        "meta": {
            "doc_index": 287826,
            "doc_name": "java.sql.ResultSet.getNCharacterStream(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                59,
                68,
                "EQ-1"
            ],
            [
                72,
                80,
                "EQ-2"
            ],
            [
                82,
                91,
                "Returned"
            ],
            [
                104,
                108,
                "EQ-2"
            ],
            [
                0,
                23,
                "Returned"
            ]
        ]
    },
    {
        "id": 123751,
        "text": "This method will never return null.",
        "meta": {
            "doc_index": 277910,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLEntityManager.resolveEntity(com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "NotReturns-1"
            ],
            [
                30,
                34,
                "NotReturns-2"
            ]
        ]
    },
    {
        "id": 123753,
        "text": "For KEY_TYPED events, the keyCode is VK_UNDEFINED.)",
        "meta": {
            "doc_index": 281803,
            "doc_name": "java.awt.event.KeyEvent.getKeyCode().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                22,
                33,
                "EQ-1"
            ],
            [
                37,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123758,
        "text": "returns either HEAP (generated), FILE, or ZIP",
        "meta": {
            "doc_index": 276847,
            "doc_name": "com.sun.org.apache.bcel.internal.classfile.JavaClass.getSource().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                19,
                "Returned"
            ],
            [
                33,
                37,
                "Returned"
            ],
            [
                42,
                45,
                "Returned"
            ]
        ]
    },
    {
        "id": 123759,
        "text": "true if the specified object is equal to this map entry",
        "meta": {
            "doc_index": 289648,
            "doc_name": "java.util.AbstractMap.SimpleEntry.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                55,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123760,
        "text": "The list of SnmpVarBind objects returned by the manager or the null value if the request is in progress.",
        "meta": {
            "doc_index": 276308,
            "doc_name": "com.sun.jmx.snmp.daemon.SnmpInformRequest.getResponseVarBindList().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "ReturnsBy-1"
            ],
            [
                44,
                55,
                "ReturnsBy-2"
            ],
            [
                59,
                73,
                "Returned"
            ]
        ]
    },
    {
        "id": 123761,
        "text": "If the nodes, and possibly subtrees are equal, true otherwise false.",
        "meta": {
            "doc_index": 278669,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode.isEqualNode(org.w3c.dom.Node).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                47,
                51,
                "Returned"
            ],
            [
                62,
                67,
                "Returned"
            ]
        ]
    },
    {
        "id": 123762,
        "text": "true if the strings are equal according to the collation rules.",
        "meta": {
            "doc_index": 288044,
            "doc_name": "java.text.Collator.equals(java.lang.String,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123764,
        "text": "Handle of attribute of the required type, or DTM.NULL to indicate none exists.",
        "meta": {
            "doc_index": 279087,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM2.getTypedAttribute(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                40,
                "Returned"
            ],
            [
                45,
                53,
                "Returned"
            ]
        ]
    },
    {
        "id": 123766,
        "text": "the span the view would like to be rendered into >= 0.",
        "meta": {
            "doc_index": 298192,
            "doc_name": "javax.swing.text.AsyncBoxView.getMaximumSpan(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                52,
                53,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123775,
        "text": "a java.io.Reader object that contains the column value; if the value is SQL NULL, the value returned is null in the Java programming language",
        "meta": {
            "doc_index": 287827,
            "doc_name": "java.sql.ResultSet.getNCharacterStream(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Returned"
            ],
            [
                59,
                68,
                "EQ-1"
            ],
            [
                72,
                80,
                "EQ-2"
            ],
            [
                82,
                91,
                "Returned"
            ],
            [
                104,
                108,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123777,
        "text": "the starting offset into the model >= 0",
        "meta": {
            "doc_index": 299013,
            "doc_name": "javax.swing.text.View.getStartOffset().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                34,
                "GE-1"
            ],
            [
                38,
                39,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123778,
        "text": "the largest (closest to positive infinity) int value that is less than or equal to the algebraic quotient.",
        "meta": {
            "doc_index": 285141,
            "doc_name": "java.lang.StrictMath.floorDiv(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                52,
                "LE-1"
            ],
            [
                83,
                105,
                "LE-2"
            ]
        ]
    },
    {
        "id": 123779,
        "text": "The non-null string containing the string representation of this exception.",
        "meta": {
            "doc_index": 294197,
            "doc_name": "javax.naming.NamingException.toString().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                13,
                19,
                "NotNull"
            ]
        ]
    },
    {
        "id": 123780,
        "text": "Return true if the given node is whitespace.",
        "meta": {
            "doc_index": 279035,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM.isWhitespace(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                11,
                "Returned"
            ]
        ]
    },
    {
        "id": 123781,
        "text": "true if the specified Object is equal equal to this NTDomainPrincipal.",
        "meta": {
            "doc_index": 281174,
            "doc_name": "com.sun.security.auth.NTDomainPrincipal.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                47,
                69,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123783,
        "text": "True if this object equals this string value",
        "meta": {
            "doc_index": 279795,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.CharInfo.CharKey.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                19,
                "EQ-1"
            ],
            [
                27,
                44,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123785,
        "text": "the line number >= 0",
        "meta": {
            "doc_index": 296849,
            "doc_name": "javax.swing.JTextArea.getLineOfOffset(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                15,
                "GE-1"
            ],
            [
                19,
                20,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123786,
        "text": "False return indicates that the actual value was not equal to the expected value.",
        "meta": {
            "doc_index": 290047,
            "doc_name": "java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                5,
                "Returned"
            ],
            [
                28,
                44,
                "NEQ-1"
            ],
            [
                62,
                80,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 123787,
        "text": "true if the element is in XML Signature namespace and the local name equals the supplied one",
        "meta": {
            "doc_index": 279732,
            "doc_name": "com.sun.org.apache.xml.internal.security.utils.XMLUtils.elementIsInSignature11Space(org.w3c.dom.Element,java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                54,
                68,
                "EQ-1"
            ],
            [
                76,
                92,
                "EQ-2"
            ],
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123788,
        "text": "A reference to the Exception if one was thrown; null if no Exception was thrown or if this InvocationEvent does not catch exceptions",
        "meta": {
            "doc_index": 281794,
            "doc_name": "java.awt.event.InvocationEvent.getException().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "Returned"
            ],
            [
                32,
                35,
                "Thrown"
            ],
            [
                48,
                52,
                "Returned"
            ],
            [
                59,
                68,
                "NotThrown"
            ]
        ]
    },
    {
        "id": 123789,
        "text": "The rules for converting the scripting variable returned by the script method to a Java Object are implementation-specific.",
        "meta": {
            "doc_index": 294635,
            "doc_name": "javax.script.Invocable.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object...).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                60,
                77,
                "ReturnsBy-2"
            ],
            [
                0,
                47,
                "ReturnsBy-1"
            ]
        ]
    },
    {
        "id": 123793,
        "text": "the tab stop, measured in points >= 0",
        "meta": {
            "doc_index": 299032,
            "doc_name": "javax.swing.text.WrappedPlainView.nextTabStop(float,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "GE-1"
            ],
            [
                36,
                37,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123796,
        "text": "Note that this guarantees that the return value will be >= 0 if and only if the key is found.",
        "meta": {
            "doc_index": 289707,
            "doc_name": "java.util.Arrays.binarySearch(int[],int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                47,
                "GE-1"
            ],
            [
                59,
                60,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123797,
        "text": "a view of the portion of this map whose keys are greater than or equal to fromKey",
        "meta": {
            "doc_index": 291846,
            "doc_name": "java.util.SortedMap.tailMap(K).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                44,
                "GE-1"
            ],
            [
                74,
                81,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123798,
        "text": "The return value cannot be null.",
        "meta": {
            "doc_index": 275451,
            "doc_name": "javafx.scene.web.WebEngine.impl_getDebugger().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "NEQ-1"
            ],
            [
                27,
                31,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 123799,
        "text": "true if the sets are equal, false otherwise",
        "meta": {
            "doc_index": 298853,
            "doc_name": "javax.swing.text.SimpleAttributeSet.isEqual(javax.swing.text.AttributeSet).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                28,
                33,
                "Returned"
            ]
        ]
    },
    {
        "id": 123800,
        "text": "all of the PropertyChangeListeners associated with the named property; if no such listeners have been added or if propertyName is null, an empty array is returned",
        "meta": {
            "doc_index": 281589,
            "doc_name": "java.awt.Component.getPropertyChangeListeners(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                114,
                126,
                "EQ-1"
            ],
            [
                130,
                134,
                "EQ-2"
            ],
            [
                136,
                150,
                "Returned"
            ],
            [
                0,
                69,
                "Returned"
            ]
        ]
    },
    {
        "id": 123806,
        "text": "this component's foreground color; if this component does not have a foreground color, the foreground color of its parent is returned",
        "meta": {
            "doc_index": 281506,
            "doc_name": "java.awt.Component.getForeground().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                33,
                "Returned"
            ],
            [
                87,
                121,
                "Returned"
            ]
        ]
    },
    {
        "id": 123807,
        "text": "the content type, null if no editor kit set",
        "meta": {
            "doc_index": 296014,
            "doc_name": "javax.swing.JEditorPane.getContentType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                18,
                22,
                "Returned"
            ]
        ]
    },
    {
        "id": 123808,
        "text": "true if the specified object is equal to this attribute set.",
        "meta": {
            "doc_index": 294258,
            "doc_name": "javax.print.attribute.AttributeSet.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                59,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123809,
        "text": "a java.io.Reader object that contains the parameter value; if the value is SQL NULL, the value returned is null in the Java programming language",
        "meta": {
            "doc_index": 287465,
            "doc_name": "java.sql.CallableStatement.getCharacterStream(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Returned"
            ],
            [
                62,
                71,
                "EQ-1"
            ],
            [
                75,
                83,
                "EQ-2"
            ],
            [
                85,
                94,
                "Returned"
            ],
            [
                107,
                111,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123810,
        "text": "the trailing end of the tab expansion >= 0",
        "meta": {
            "doc_index": 298609,
            "doc_name": "javax.swing.text.html.LineView.nextTabStop(float,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                37,
                "GE-1"
            ],
            [
                41,
                42,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123811,
        "text": "number of units to scroll, or an undefined value if getScrollType returns MouseWheelEvent.WHEEL_BLOCK_SCROLL",
        "meta": {
            "doc_index": 281823,
            "doc_name": "java.awt.event.MouseWheelEvent.getScrollAmount().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "Returned"
            ],
            [
                30,
                48,
                "Returned"
            ],
            [
                52,
                65,
                "Returns-1"
            ],
            [
                74,
                108,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123812,
        "text": "an object of the same type with the specified adjustment made, not null",
        "meta": {
            "doc_index": 289260,
            "doc_name": "java.time.temporal.Temporal.with(java.time.temporal.TemporalAdjuster).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "NEQ-1"
            ],
            [
                67,
                71,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 123814,
        "text": "Returns null, since returning the previous value would require an unnecessary call to the getter method.",
        "meta": {
            "doc_index": 272542,
            "doc_name": "com.sun.javafx.fxml.BeanAdapter.put(java.lang.String,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123816,
        "text": "an array of Strings containing the (non-localized) names of available compression types, or null.",
        "meta": {
            "doc_index": 292728,
            "doc_name": "javax.imageio.ImageWriteParam.getCompressionTypes().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "NEQ-1"
            ],
            [
                92,
                96,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 123820,
        "text": "returns the same result as getAttributes(String)",
        "meta": {
            "doc_index": 291209,
            "doc_name": "java.util.jar.Manifest.getTrustedAttributes(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                48,
                "Returned"
            ]
        ]
    },
    {
        "id": 123821,
        "text": "If no file types are supported, returns an array of length 0.",
        "meta": {
            "doc_index": 295005,
            "doc_name": "javax.sound.midi.spi.MidiFileWriter.getMidiFileTypes(javax.sound.midi.Sequence).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                58,
                "EQ-1"
            ],
            [
                59,
                60,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123822,
        "text": "The object returned by the action, which represents the result of invoking the action on the MBean specified.",
        "meta": {
            "doc_index": 293249,
            "doc_name": "javax.management.DynamicMBean.invoke(java.lang.String,java.lang.Object[],java.lang.String[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "ReturnsBy-1"
            ],
            [
                23,
                33,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123823,
        "text": "true if obj is a value for this composite type, false otherwise.",
        "meta": {
            "doc_index": 293559,
            "doc_name": "javax.management.openmbean.CompositeType.isValue(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                48,
                53,
                "Returned"
            ],
            [
                8,
                11,
                "Type-1"
            ],
            [
                27,
                46,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123825,
        "text": "the direct superclass, or a NoType if there is none",
        "meta": {
            "doc_index": 293025,
            "doc_name": "javax.lang.model.element.TypeElement.getSuperclass().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Returned"
            ],
            [
                26,
                34,
                "Returned"
            ]
        ]
    },
    {
        "id": 123829,
        "text": "true if the objects are equal, false otherwise",
        "meta": {
            "doc_index": 286953,
            "doc_name": "java.security.cert.X509CertSelector.equalNames(java.util.Collection<?>,java.util.Collection<?>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                31,
                36,
                "Returned"
            ]
        ]
    },
    {
        "id": 123830,
        "text": "The return value from eval(Reader, ScriptContext)",
        "meta": {
            "doc_index": 294624,
            "doc_name": "javax.script.AbstractScriptEngine.eval(java.io.Reader).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "ReturnsBy-1"
            ],
            [
                22,
                49,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123831,
        "text": "Returns a document fragment containing any copied or extracted nodes.",
        "meta": {
            "doc_index": 277709,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.RangeImpl.traverseCommonEndContainer(org.w3c.dom.Node,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                27,
                "Returned"
            ]
        ]
    },
    {
        "id": 123832,
        "text": "true if the specified object is equal to this OpenMBeanInfoSupport instance.",
        "meta": {
            "doc_index": 293592,
            "doc_name": "javax.management.openmbean.OpenMBeanInfoSupport.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                75,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123833,
        "text": "If the returned EndpointReference is of type W3CEndpointReference then it MUST contain the the specified referenceParameters.",
        "meta": {
            "doc_index": 300173,
            "doc_name": "javax.xml.ws.Endpoint.getEndpointReference(java.lang.Class<T>,org.w3c.dom.Element...).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                33,
                "Returned"
            ],
            [
                45,
                65,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123835,
        "text": "returns a non-null valid Duration object",
        "meta": {
            "doc_index": 299717,
            "doc_name": "javax.xml.datatype.Duration.multiply(java.math.BigDecimal).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                19,
                40,
                "NotNull"
            ]
        ]
    },
    {
        "id": 123836,
        "text": "The attribute's type, \"CDATA\" if the type is unknown, or null if the index is out of bounds.",
        "meta": {
            "doc_index": 300958,
            "doc_name": "org.xml.sax.helpers.AttributesImpl.getType(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                22,
                29,
                "Returned"
            ],
            [
                0,
                20,
                "Returned"
            ],
            [
                57,
                61,
                "Returned"
            ]
        ]
    },
    {
        "id": 123838,
        "text": "true if containsKey(DataFormat.HTML) returns true, false otherwise",
        "meta": {
            "doc_index": 274838,
            "doc_name": "javafx.scene.input.ClipboardContent.hasHtml().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                36,
                "Returns-1"
            ],
            [
                45,
                49,
                "Returns-2"
            ],
            [
                51,
                56,
                "Returned"
            ]
        ]
    },
    {
        "id": 123839,
        "text": "Returns the associated namespace URI or null if none is found.",
        "meta": {
            "doc_index": 300913,
            "doc_name": "org.w3c.dom.xpath.XPathNSResolver.lookupNamespaceURI(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                36,
                "Returned"
            ],
            [
                40,
                44,
                "Returned"
            ]
        ]
    },
    {
        "id": 123840,
        "text": "Always return a non-null valid String object.",
        "meta": {
            "doc_index": 278155,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl.toString().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                44,
                "NotNull"
            ]
        ]
    },
    {
        "id": 123841,
        "text": "The contained message; returns null if no message is present in this message context",
        "meta": {
            "doc_index": 300180,
            "doc_name": "javax.xml.ws.handler.LogicalMessageContext.getMessage().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Returned"
            ],
            [
                31,
                35,
                "Returned"
            ]
        ]
    },
    {
        "id": 123842,
        "text": "the query result, null may be returned (defined by the query)",
        "meta": {
            "doc_index": 289064,
            "doc_name": "java.time.MonthDay.query(java.time.temporal.TemporalQuery<R>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "CanEQ-1"
            ],
            [
                18,
                22,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 123843,
        "text": "the specification version, null is returned if it is not known.",
        "meta": {
            "doc_index": 284880,
            "doc_name": "java.lang.Package.getSpecificationVersion().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "Returned"
            ],
            [
                27,
                31,
                "Returned"
            ]
        ]
    },
    {
        "id": 123844,
        "text": "the 1-based position from the top of the stack where the object is located; the return value -1 indicates that the object is not on the stack.",
        "meta": {
            "doc_index": 291937,
            "doc_name": "java.util.Stack.search(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                76,
                92,
                "EQ-1"
            ],
            [
                93,
                95,
                "EQ-2"
            ],
            [
                0,
                46,
                "Returned"
            ]
        ]
    },
    {
        "id": 123845,
        "text": "If the current position is at the end of the text used by this LineBreakMeasurer, null is returned",
        "meta": {
            "doc_index": 281942,
            "doc_name": "java.awt.font.LineBreakMeasurer.nextLayout(float,int,boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                82,
                86,
                "Returned"
            ]
        ]
    },
    {
        "id": 123849,
        "text": "if the value for key and Locale is a Border, return the Border object; otherwise return null",
        "meta": {
            "doc_index": 299202,
            "doc_name": "javax.swing.UIDefaults.getBorder(java.lang.Object,java.util.Locale).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                31,
                "Type-1"
            ],
            [
                37,
                43,
                "Type-2"
            ],
            [
                52,
                69,
                "Returned"
            ],
            [
                88,
                92,
                "Returned"
            ]
        ]
    },
    {
        "id": 123851,
        "text": "If l is the actual ClassLoader with that name, and r is the returned value, then either: r is identical to l; or the result of r.loadClass(s) is the same as l.loadClass(s) for any string s.",
        "meta": {
            "doc_index": 293341,
            "doc_name": "javax.management.MBeanServer.getClassLoader(javax.management.ObjectName).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                89,
                90,
                "EQ-1"
            ],
            [
                107,
                108,
                "EQ-2"
            ],
            [
                113,
                141,
                "EQ-1"
            ],
            [
                157,
                171,
                "EQ-2"
            ],
            [
                51,
                52,
                "EQ-1"
            ],
            [
                56,
                74,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123852,
        "text": "true if the arguments are equal to each other and false otherwise",
        "meta": {
            "doc_index": 291493,
            "doc_name": "java.util.Objects.equals(java.lang.Object,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                50,
                55,
                "Returned"
            ]
        ]
    },
    {
        "id": 123855,
        "text": "the preferred span; given that we do not support resizing of frames, the maximum span returned is the same as the preferred span",
        "meta": {
            "doc_index": 298534,
            "doc_name": "javax.swing.text.html.FrameView.getMaximumSpan(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Returned"
            ],
            [
                69,
                85,
                "Returned"
            ],
            [
                110,
                128,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123856,
        "text": "Returns the URI string representing the expanded system identifier.",
        "meta": {
            "doc_index": 277911,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLEntityManager.expandSystemId(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                22,
                "Returned"
            ]
        ]
    },
    {
        "id": 123857,
        "text": "the Object returned by UIDefaults#put",
        "meta": {
            "doc_index": 299251,
            "doc_name": "javax.swing.UIManager.put(java.lang.Object,java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "ReturnsBy-1"
            ],
            [
                23,
                37,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123858,
        "text": "boolean True if the type is derived by restriciton for the reference type",
        "meta": {
            "doc_index": 277821,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.isDerivedByAny(java.lang.String,java.lang.String,com.sun.org.apache.xerces.internal.xs.XSTypeDefinition).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123867,
        "text": "the index of the last occurrence of the character in the character sequence represented by this object that is less than or equal to fromIndex, or -1 if the character does not occur before that point.",
        "meta": {
            "doc_index": 280893,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.XString.lastIndexOf(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                75,
                "Returned"
            ],
            [
                133,
                142,
                "LE-2"
            ],
            [
                147,
                149,
                "Returned"
            ]
        ]
    },
    {
        "id": 123869,
        "text": "If the newAttr attribute replaces an existing attribute with the same local name and namespace URI, the replaced Attr node is returned, otherwise null is returned.",
        "meta": {
            "doc_index": 300828,
            "doc_name": "org.w3c.dom.Element.setAttributeNodeNS(org.w3c.dom.Attr).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                100,
                122,
                "Returned"
            ],
            [
                146,
                150,
                "Returned"
            ]
        ]
    },
    {
        "id": 123870,
        "text": "the value 0 if x == y; a value less than 0 if x < y as unsigned values; and a value greater than 0 if x > y as unsigned values",
        "meta": {
            "doc_index": 284643,
            "doc_name": "java.lang.Long.compareUnsigned(long,long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                10,
                11,
                "EQ-2"
            ],
            [
                15,
                16,
                "EQ-1"
            ],
            [
                20,
                21,
                "EQ-2"
            ],
            [
                23,
                30,
                "LT-1"
            ],
            [
                41,
                42,
                "LT-2"
            ],
            [
                46,
                47,
                "LT-1"
            ],
            [
                50,
                51,
                "LT-2"
            ],
            [
                76,
                83,
                "GT-1"
            ],
            [
                97,
                98,
                "GT-2"
            ],
            [
                102,
                103,
                "GT-1"
            ],
            [
                106,
                107,
                "GT-2"
            ]
        ]
    },
    {
        "id": 123871,
        "text": "the value returned by the action's run method.",
        "meta": {
            "doc_index": 286714,
            "doc_name": "java.security.AccessController.doPrivileged(java.security.PrivilegedAction<T>,java.security.AccessControlContext,java.security.Permission...).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "ReturnsBy-1"
            ],
            [
                22,
                45,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 123873,
        "text": "i+1 if a character was written, i+2 if two characters were written out, else return i.",
        "meta": {
            "doc_index": 279872,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.ToStream.accumDefaultEscape(java.io.Writer,char,int,char[],int,boolean,boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                3,
                "Returned"
            ],
            [
                32,
                35,
                "Returned"
            ],
            [
                84,
                85,
                "Returned"
            ]
        ]
    },
    {
        "id": 123875,
        "text": "true if the specified object is equal to this enum constant.",
        "meta": {
            "doc_index": 284394,
            "doc_name": "java.lang.Enum.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                59,
                "EQ-2"
            ],
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123876,
        "text": "the value 0 if this Long is equal to the argument Long; a value less than 0 if this Long is numerically less than the argument Long; and a value greater than 0 if this Long is numerically greater than the argument Long (signed comparison).",
        "meta": {
            "doc_index": 284641,
            "doc_name": "java.lang.Long.compareTo(java.lang.Long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                10,
                11,
                "EQ-2"
            ],
            [
                15,
                24,
                "EQ-1"
            ],
            [
                37,
                54,
                "EQ-2"
            ],
            [
                56,
                63,
                "LT-1"
            ],
            [
                74,
                75,
                "LT-2"
            ],
            [
                79,
                88,
                "LT-1"
            ],
            [
                114,
                131,
                "LT-2"
            ],
            [
                137,
                144,
                "GT-1"
            ],
            [
                158,
                159,
                "GT-2"
            ],
            [
                163,
                172,
                "GT-1"
            ],
            [
                201,
                218,
                "GT-2"
            ]
        ]
    },
    {
        "id": 123877,
        "text": "the return state of the file chooser on popdown: JFileChooser.CANCEL_OPTION JFile, Chooser.APPROVE_OPTION JFile, Chooser.ERROR_OPTION if an error occurs or the dialog is dismissed",
        "meta": {
            "doc_index": 296046,
            "doc_name": "javax.swing.JFileChooser.showSaveDialog(java.awt.Component).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                47,
                "EQ-1"
            ],
            [
                49,
                75,
                "EQ-2"
            ],
            [
                78,
                105,
                "EQ-2"
            ],
            [
                108,
                133,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123879,
        "text": "The returned object will be serialized as an instance of the non-public class javax.management.BinaryRelQueryExp with a relOp equal to EQ.",
        "meta": {
            "doc_index": 293682,
            "doc_name": "javax.management.Query.eq(javax.management.ValueExp,javax.management.ValueExp).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                78,
                112,
                "Type-2"
            ],
            [
                118,
                125,
                "EQ-1"
            ],
            [
                135,
                137,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123881,
        "text": "For YEARS, MONTHS, DAYS, HOURS, and MINUTES, this method returns a BigInteger object.",
        "meta": {
            "doc_index": 278158,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl.getField(javax.xml.datatype.DatatypeConstants.Field).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                56,
                "Returns-1"
            ],
            [
                65,
                84,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123883,
        "text": "If no MBean satisfies the query an empty list is returned.",
        "meta": {
            "doc_index": 276015,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.queryMBeans(javax.management.ObjectName,javax.management.QueryExp).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                45,
                "Returned"
            ]
        ]
    },
    {
        "id": 123885,
        "text": "If this PopupControl does not have an inline style, an empty String is returned.",
        "meta": {
            "doc_index": 274606,
            "doc_name": "javafx.scene.control.PopupControl.getStyle().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                52,
                67,
                "Returned"
            ]
        ]
    },
    {
        "id": 123887,
        "text": "true if the Strings are equal; false otherwise.",
        "meta": {
            "doc_index": 280257,
            "doc_name": "com.sun.org.apache.xml.internal.utils.XMLString.equals(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                31,
                36,
                "Returned"
            ]
        ]
    },
    {
        "id": 123889,
        "text": "true if this date-time is equal to the specified date-time",
        "meta": {
            "doc_index": 288968,
            "doc_name": "java.time.LocalDateTime.isEqual(java.time.chrono.ChronoLocalDateTime<?>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                22,
                "EQ-1"
            ],
            [
                35,
                58,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123890,
        "text": "If the attribute has zero values, an empty enumeration is returned.",
        "meta": {
            "doc_index": 294010,
            "doc_name": "javax.naming.directory.Attribute.getAll().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                54,
                "Returned"
            ]
        ]
    },
    {
        "id": 123892,
        "text": "bundle.expire is true upon return if the bundle in the cache has expired.",
        "meta": {
            "doc_index": 291741,
            "doc_name": "java.util.ResourceBundle.findBundleInCache(java.util.ResourceBundle.CacheKey,java.util.ResourceBundle.Control).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123893,
        "text": "default: returns false]",
        "meta": {
            "doc_index": 276154,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpMibTable.isCreationEnabled().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                22,
                "Returned"
            ]
        ]
    },
    {
        "id": 123896,
        "text": "zero after the end of the underlying input stream has been reached, otherwise always returns 1",
        "meta": {
            "doc_index": 292396,
            "doc_name": "java.util.zip.DeflaterInputStream.available().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                93,
                94,
                "Returned"
            ],
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123900,
        "text": "true if these Objects are equal; false otherwise.",
        "meta": {
            "doc_index": 286609,
            "doc_name": "java.rmi.activation.ActivationGroupDesc.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                33,
                38,
                "Returned"
            ]
        ]
    },
    {
        "id": 123902,
        "text": "If object is an instance of interfaceName, object is returned downcast to type Attribute; otherwise an exception is thrown.",
        "meta": {
            "doc_index": 294271,
            "doc_name": "javax.print.attribute.AttributeSetUtilities.verifyAttributeValue(java.lang.Object,java.lang.Class<?>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "Type-1"
            ],
            [
                28,
                41,
                "Type-2"
            ],
            [
                43,
                49,
                "Returned"
            ],
            [
                79,
                88,
                "Type-2"
            ],
            [
                100,
                112,
                "Thrown"
            ]
        ]
    },
    {
        "id": 123903,
        "text": "the element index >= 0",
        "meta": {
            "doc_index": 298161,
            "doc_name": "javax.swing.text.AbstractDocument.LeafElement.getElementIndex(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "GE-1"
            ],
            [
                21,
                22,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123904,
        "text": "a unary operator that always returns its input argument",
        "meta": {
            "doc_index": 291092,
            "doc_name": "java.util.function.UnaryOperator.identity().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returns-1"
            ],
            [
                37,
                55,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123905,
        "text": "allways return true.",
        "meta": {
            "doc_index": 276444,
            "doc_name": "com.sun.jmx.snmp.IPAcl.NetMaskImpl.removeMember(java.security.Principal).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                19,
                "Returned"
            ]
        ]
    },
    {
        "id": 123908,
        "text": "a List of XPathType objects (never null or empty)",
        "meta": {
            "doc_index": 299587,
            "doc_name": "javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec.getXPathList().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                27,
                "NEQ-1"
            ],
            [
                35,
                39,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 123909,
        "text": "If the sum of offset and count exceeds the length, then all 16-bit units to the end of the data are returned.",
        "meta": {
            "doc_index": 300775,
            "doc_name": "org.w3c.dom.CharacterData.substringData(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                30,
                "GT-1"
            ],
            [
                39,
                49,
                "GT-2"
            ],
            [
                56,
                95,
                "Returned"
            ]
        ]
    },
    {
        "id": 123910,
        "text": "Typically, this is the same object that was returned from earlier marshal(Object,Object) or updateJAXB(Object) method invocation, but it maybe a different object, for example when the name of the XML element has changed.",
        "meta": {
            "doc_index": 299366,
            "doc_name": "javax.xml.bind.Binder.updateJAXB(XmlNode).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                15,
                "EQ-1"
            ],
            [
                66,
                88,
                "EQ-2"
            ],
            [
                92,
                110,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123911,
        "text": "returns true if the cancel was successful",
        "meta": {
            "doc_index": 274193,
            "doc_name": "javafx.concurrent.Worker.cancel().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123912,
        "text": "If the result is more than one top-level node, the first one is returned.",
        "meta": {
            "doc_index": 300850,
            "doc_name": "org.w3c.dom.ls.LSParser.parseWithContext(org.w3c.dom.ls.LSInput,org.w3c.dom.Node,short).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                47,
                60,
                "Returned"
            ]
        ]
    },
    {
        "id": 123913,
        "text": "If it does not occur as a substring, -1 is returned.",
        "meta": {
            "doc_index": 284127,
            "doc_name": "java.lang.AbstractStringBuilder.lastIndexOf(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                39,
                "Returned"
            ]
        ]
    },
    {
        "id": 123914,
        "text": "true if the current compression type is lossless.",
        "meta": {
            "doc_index": 292731,
            "doc_name": "javax.imageio.ImageWriteParam.isCompressionLossless().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123916,
        "text": "The embedded exception, or null if there is none.",
        "meta": {
            "doc_index": 301028,
            "doc_name": "org.xml.sax.SAXException.getException().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                22,
                "Returned"
            ],
            [
                27,
                31,
                "Returned"
            ]
        ]
    },
    {
        "id": 123923,
        "text": "a Set of Strings containing the names of all available algorithms or types for the specified Java cryptographic service or an empty set if no provider supports the specified service.",
        "meta": {
            "doc_index": 287265,
            "doc_name": "java.security.Security.getAlgorithms(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                123,
                135,
                "Returned"
            ]
        ]
    },
    {
        "id": 123924,
        "text": "a TypeVariable if the type is a type variable, or null if it is not.",
        "meta": {
            "doc_index": 275985,
            "doc_name": "com.sun.javadoc.Type.asTypeVariable().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Returned"
            ],
            [
                50,
                54,
                "Returned"
            ]
        ]
    },
    {
        "id": 123925,
        "text": "returns the namespace prefix",
        "meta": {
            "doc_index": 277963,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.getNamespacePrefix(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                28,
                "Returned"
            ]
        ]
    },
    {
        "id": 123927,
        "text": "true if s1 is equal to s2",
        "meta": {
            "doc_index": 280792,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.EqualComparator.compareStrings(com.sun.org.apache.xml.internal.utils.XMLString,com.sun.org.apache.xml.internal.utils.XMLString).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                10,
                "EQ-1"
            ],
            [
                23,
                25,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123929,
        "text": "Number of units to scroll vertically, zero if the text-based vertical scrolling data is not available getTextDeltaYUnits() returns NONE",
        "meta": {
            "doc_index": 275002,
            "doc_name": "javafx.scene.input.ScrollEvent.getTextDeltaY().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                102,
                122,
                "Returns-1"
            ],
            [
                131,
                135,
                "Returns-2"
            ],
            [
                38,
                42,
                "Returned"
            ],
            [
                0,
                36,
                "Returned"
            ]
        ]
    },
    {
        "id": 123931,
        "text": "true if this is equal to the instant of the specified time",
        "meta": {
            "doc_index": 289207,
            "doc_name": "java.time.OffsetTime.isEqual(java.time.OffsetTime).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "EQ-1"
            ],
            [
                25,
                58,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123937,
        "text": "A list of top-level definition of the specified type in objectType or an empty XSNamedMap if no such definitions exist.",
        "meta": {
            "doc_index": 278511,
            "doc_name": "com.sun.org.apache.xerces.internal.xs.XSNamespaceItem.getComponents(short).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                70,
                89,
                "Returned"
            ],
            [
                0,
                52,
                "Returned"
            ]
        ]
    },
    {
        "id": 123938,
        "text": "true if obj is equal to this composite name, false otherwise.",
        "meta": {
            "doc_index": 293957,
            "doc_name": "javax.naming.CompositeName.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                11,
                "EQ-1"
            ],
            [
                24,
                43,
                "EQ-2"
            ],
            [
                45,
                50,
                "Returned"
            ]
        ]
    },
    {
        "id": 123942,
        "text": "true if the specified object is equal to this OpenMBeanOperationInfoSupport instance.",
        "meta": {
            "doc_index": 293603,
            "doc_name": "javax.management.openmbean.OpenMBeanOperationInfoSupport.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                84,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123943,
        "text": "true if the two insets are equal; otherwise false.",
        "meta": {
            "doc_index": 283024,
            "doc_name": "java.awt.Insets.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                44,
                49,
                "Returned"
            ]
        ]
    },
    {
        "id": 123944,
        "text": "an AccessibleTable if supported by object; otherwise return null",
        "meta": {
            "doc_index": 292484,
            "doc_name": "javax.accessibility.AccessibleContext.getAccessibleTable().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Returned"
            ],
            [
                60,
                64,
                "Returned"
            ]
        ]
    },
    {
        "id": 123945,
        "text": "Returns true if the contentSpecIndex was found.",
        "meta": {
            "doc_index": 277747,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec.Provider.getContentSpec(int,com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123946,
        "text": "Returns null is the name does not exist in the given scope.",
        "meta": {
            "doc_index": 294685,
            "doc_name": "javax.script.SimpleScriptContext.getAttribute(java.lang.String,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 123958,
        "text": "the exception, or null if none",
        "meta": {
            "doc_index": 290544,
            "doc_name": "java.util.concurrent.ForkJoinTask.getThrowableException().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Returned"
            ],
            [
                18,
                22,
                "Returned"
            ]
        ]
    },
    {
        "id": 123959,
        "text": "The returned object will be serialized as an instance of the non-public class javax.management.BinaryRelQueryExp with a relOp equal to LT.",
        "meta": {
            "doc_index": 293681,
            "doc_name": "javax.management.Query.lt(javax.management.ValueExp,javax.management.ValueExp).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                78,
                112,
                "Type-2"
            ],
            [
                118,
                125,
                "EQ-1"
            ],
            [
                135,
                137,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123960,
        "text": "The content associated with this type, or null if there is none",
        "meta": {
            "doc_index": 274818,
            "doc_name": "javafx.scene.input.Clipboard.getContent(javafx.scene.input.DataFormat).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                37,
                "Returned"
            ],
            [
                42,
                46,
                "Returned"
            ]
        ]
    },
    {
        "id": 123961,
        "text": "If the value was SQL NULL, the value null is returned.",
        "meta": {
            "doc_index": 287457,
            "doc_name": "java.sql.CallableStatement.getNClob(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                17,
                25,
                "EQ-2"
            ],
            [
                37,
                41,
                "Returned"
            ]
        ]
    },
    {
        "id": 123962,
        "text": "the index into the text of the start of the selection >= 0",
        "meta": {
            "doc_index": 283469,
            "doc_name": "java.awt.TextComponent.AccessibleAWTTextComponent.getSelectionStart().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                53,
                "GE-1"
            ],
            [
                57,
                58,
                "GE-2"
            ]
        ]
    },
    {
        "id": 123964,
        "text": "Always return NULL for this axis.",
        "meta": {
            "doc_index": 278873,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBaseTraversers.RootTraverser.next(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                18,
                "Returned"
            ]
        ]
    },
    {
        "id": 123967,
        "text": "Otherwise, null is returned",
        "meta": {
            "doc_index": 298764,
            "doc_name": "javax.swing.text.JTextComponent.AccessibleJTextComponent.getTextSequenceBefore(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                15,
                "Returned"
            ]
        ]
    },
    {
        "id": 123968,
        "text": "Normally this will return \"null\", indicating that no special editor has been registered, so the PropertyEditorManager should be used to locate a suitable PropertyEditor.",
        "meta": {
            "doc_index": 283751,
            "doc_name": "java.beans.PropertyDescriptor.getPropertyEditorClass().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                13,
                "Returns-1"
            ],
            [
                26,
                32,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123970,
        "text": "the key corresponding to the given type (\"Z\", \"C\", etc...) return null if the given elementClassName is not a primitive wrapper class name.",
        "meta": {
            "doc_index": 293531,
            "doc_name": "javax.management.openmbean.ArrayType.getPrimitiveTypeKey(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                39,
                "Returned"
            ],
            [
                66,
                70,
                "Returned"
            ],
            [
                74,
                100,
                "NEQ-1"
            ],
            [
                108,
                138,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 123971,
        "text": "true if the argument is a TransformAttribute whose transform is equal to this TransformAttribute's transform.",
        "meta": {
            "doc_index": 282054,
            "doc_name": "java.awt.font.TransformAttribute.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                20,
                "Type-1"
            ],
            [
                26,
                44,
                "Type-2"
            ],
            [
                51,
                60,
                "EQ-1"
            ],
            [
                73,
                108,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123974,
        "text": "This function returns true if capacity asked is available.",
        "meta": {
            "doc_index": 277930,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.arrangeCapacity(int,boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Returns-1"
            ],
            [
                22,
                26,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123975,
        "text": "true if the identities are considered equal, false otherwise.",
        "meta": {
            "doc_index": 287055,
            "doc_name": "java.security.Identity.identityEquals(java.security.Identity).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                45,
                50,
                "Returned"
            ]
        ]
    },
    {
        "id": 123976,
        "text": "True if the given object is of type CLASS_NULL",
        "meta": {
            "doc_index": 280804,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.XNull.equals(com.sun.org.apache.xpath.internal.objects.XObject).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                24,
                "Type-1"
            ],
            [
                36,
                46,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123977,
        "text": "The returned object will be serialized as an instance of the non-public class javax.management.InstanceOfQueryExp.",
        "meta": {
            "doc_index": 293704,
            "doc_name": "javax.management.Query.isInstanceOf(javax.management.StringValueExp).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                78,
                113,
                "Type-2"
            ]
        ]
    },
    {
        "id": 123979,
        "text": "If the how parameter was DELETE_CONTENTS, the return value is null.",
        "meta": {
            "doc_index": 277709,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.RangeImpl.traverseCommonEndContainer(org.w3c.dom.Node,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                25,
                40,
                "EQ-2"
            ],
            [
                62,
                66,
                "EQ-2"
            ],
            [
                42,
                58,
                "EQ-1"
            ]
        ]
    },
    {
        "id": 123980,
        "text": "returns the prefix of the qualified name, or null if there is no prefix.",
        "meta": {
            "doc_index": 279840,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.SerializerBase.getPrefixPart(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                40,
                "Returned"
            ],
            [
                45,
                49,
                "Returned"
            ]
        ]
    },
    {
        "id": 123986,
        "text": "if the value for key and Locale is an Insets, return the Insets object; otherwise return null",
        "meta": {
            "doc_index": 299210,
            "doc_name": "javax.swing.UIDefaults.getInsets(java.lang.Object,java.util.Locale).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                31,
                "Type-1"
            ],
            [
                38,
                44,
                "Type-2"
            ],
            [
                53,
                70,
                "Returned"
            ],
            [
                89,
                93,
                "Returned"
            ]
        ]
    },
    {
        "id": 123987,
        "text": "return the number of completed elements",
        "meta": {
            "doc_index": 292199,
            "doc_name": "java.util.stream.SliceOps.SliceTask.completedSize(long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                39,
                "Returned"
            ]
        ]
    },
    {
        "id": 123990,
        "text": "If the source String is null, a null CollationKey is returned.",
        "meta": {
            "doc_index": 288043,
            "doc_name": "java.text.Collator.getCollationKey(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ],
            [
                32,
                36,
                "Returned"
            ]
        ]
    },
    {
        "id": 123993,
        "text": "true if no additional blocking is necessary (i.e., if isReleasable would return true)",
        "meta": {
            "doc_index": 290535,
            "doc_name": "java.util.concurrent.ForkJoinPool.ManagedBlocker.block().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                54,
                66,
                "Returns-1"
            ],
            [
                80,
                84,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 123994,
        "text": "True if 'fromType' can be passed to an argument of 'toType'",
        "meta": {
            "doc_index": 284486,
            "doc_name": "java.lang.invoke.AbstractValidatingLambdaMetafactory.isAdaptableTo(java.lang.Class<?>,java.lang.Class<?>,boolean).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 123995,
        "text": "an array of the selected items on this scrolling list; if no item is selected, a zero-length array is returned.",
        "meta": {
            "doc_index": 283083,
            "doc_name": "java.awt.List.getSelectedItems().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                79,
                98,
                "Returned"
            ],
            [
                0,
                53,
                "Returned"
            ]
        ]
    },
    {
        "id": 123997,
        "text": "true if this is equal to the other chronology",
        "meta": {
            "doc_index": 288341,
            "doc_name": "java.time.chrono.Chronology.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                12,
                "EQ-1"
            ],
            [
                25,
                45,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 123998,
        "text": "VALUE_TYPE if the encrypted data is contained as CipherValue or REFERENCE_TYPE if the encrypted data is contained as CipherReference.",
        "meta": {
            "doc_index": 279260,
            "doc_name": "com.sun.org.apache.xml.internal.security.encryption.CipherData.getDataType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Returned"
            ],
            [
                64,
                78,
                "Returned"
            ]
        ]
    },
    {
        "id": 124003,
        "text": "the selected item on the list; if no item is selected, or if multiple items are selected, null is returned.",
        "meta": {
            "doc_index": 283082,
            "doc_name": "java.awt.List.getSelectedItem().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                90,
                94,
                "Returned"
            ],
            [
                0,
                29,
                "Returned"
            ]
        ]
    },
    {
        "id": 124007,
        "text": "true if containsKey(DataFormat.IMAGE) returns true, false otherwise",
        "meta": {
            "doc_index": 274844,
            "doc_name": "javafx.scene.input.ClipboardContent.hasImage().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                37,
                "Returns-1"
            ],
            [
                46,
                50,
                "Returns-2"
            ],
            [
                52,
                57,
                "Returned"
            ]
        ]
    },
    {
        "id": 124010,
        "text": "The returned object will be serialized as an instance of the non-public class javax.management.InQueryExp.",
        "meta": {
            "doc_index": 293689,
            "doc_name": "javax.management.Query.in(javax.management.ValueExp,javax.management.ValueExp[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                78,
                105,
                "Type-2"
            ]
        ]
    },
    {
        "id": 124015,
        "text": "true if and only if this stream has encountered an IOException other than InterruptedIOException, or the setError method has been invoked",
        "meta": {
            "doc_index": 284016,
            "doc_name": "java.io.PrintStream.checkError().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                51,
                62,
                "Thrown"
            ],
            [
                74,
                96,
                "NotThrown"
            ]
        ]
    },
    {
        "id": 124016,
        "text": "If null, it means there is no link detail message for this exception.",
        "meta": {
            "doc_index": 294163,
            "doc_name": "javax.naming.LinkException.getLinkExplanation().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                7,
                "Returned"
            ]
        ]
    },
    {
        "id": 124017,
        "text": "True if this type is derived from ancestorType using only derivation methods from the derivationMethod .",
        "meta": {
            "doc_index": 278524,
            "doc_name": "com.sun.org.apache.xerces.internal.xs.XSTypeDefinition.derivedFromType(com.sun.org.apache.xerces.internal.xs.XSTypeDefinition,short).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 124018,
        "text": "true if the two arrays are equal",
        "meta": {
            "doc_index": 289726,
            "doc_name": "java.util.Arrays.equals(char[],char[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 124019,
        "text": "the screen coordinates of the character's bounding box, if index is invalid return an empty rectangle.",
        "meta": {
            "doc_index": 292554,
            "doc_name": "javax.accessibility.AccessibleText.getCharacterBounds(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                83,
                101,
                "Returned"
            ],
            [
                0,
                54,
                "Returned"
            ]
        ]
    },
    {
        "id": 124020,
        "text": "New XMLGregorianCalendar with all date/time datatype fields set to DatatypeConstants#FIELD_UNDEFINED or null.",
        "meta": {
            "doc_index": 299693,
            "doc_name": "javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                30,
                59,
                "EQ-1"
            ],
            [
                67,
                100,
                "EQ-2"
            ],
            [
                104,
                108,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124021,
        "text": "The nonmatching MIME headers are returned as an Iterator object.",
        "meta": {
            "doc_index": 299785,
            "doc_name": "javax.xml.soap.AttachmentPart.getNonMatchingMimeHeaders(java.lang.String[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                28,
                "Returned"
            ],
            [
                48,
                56,
                "Type-2"
            ]
        ]
    },
    {
        "id": 124023,
        "text": "the locale of the applet; if no locale has been set, the default locale is returned.",
        "meta": {
            "doc_index": 281288,
            "doc_name": "java.applet.Applet.getLocale().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Returned"
            ],
            [
                53,
                71,
                "Returned"
            ]
        ]
    },
    {
        "id": 124024,
        "text": "true if and only if they are equal, false otherwise.",
        "meta": {
            "doc_index": 285848,
            "doc_name": "java.net.URLStreamHandler.hostsEqual(java.net.URL,java.net.URL).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                36,
                41,
                "Returned"
            ]
        ]
    },
    {
        "id": 124025,
        "text": "A double representing the fixed cell size of this control, or a value less than or equal to zero if fixed cell size mode is disabled.",
        "meta": {
            "doc_index": 274768,
            "doc_name": "javafx.scene.control.TreeTableView.getFixedCellSize().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                8,
                "Returned"
            ],
            [
                62,
                69,
                "Returned"
            ],
            [
                92,
                96,
                "LE-2"
            ]
        ]
    },
    {
        "id": 124029,
        "text": "the specification vendor, null is returned if it is not known.",
        "meta": {
            "doc_index": 284881,
            "doc_name": "java.lang.Package.getSpecificationVendor().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Returned"
            ],
            [
                26,
                30,
                "Returned"
            ]
        ]
    },
    {
        "id": 124030,
        "text": "Null is also returned if the transformation from local to Scene is not invertible.",
        "meta": {
            "doc_index": 275227,
            "doc_name": "javafx.scene.Node.sceneToLocal(double,double,double).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ]
    },
    {
        "id": 124031,
        "text": "the number of zero bits following the lowest-order (\"rightmost\") one-bit in the two's complement binary representation of the specified int value, or 32 if the value is equal to zero.",
        "meta": {
            "doc_index": 284475,
            "doc_name": "java.lang.Integer.numberOfTrailingZeros(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                156,
                165,
                "EQ-1"
            ],
            [
                178,
                182,
                "EQ-2"
            ],
            [
                0,
                23,
                "Returned"
            ],
            [
                150,
                152,
                "Returned"
            ]
        ]
    },
    {
        "id": 124033,
        "text": "the value 0 if x == y; a value less than 0 if x < y; and a value greater than 0 if x > y",
        "meta": {
            "doc_index": 284169,
            "doc_name": "java.lang.Byte.compare(byte,byte).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "EQ-1"
            ],
            [
                10,
                11,
                "EQ-2"
            ],
            [
                15,
                16,
                "EQ-1"
            ],
            [
                20,
                21,
                "EQ-2"
            ],
            [
                23,
                30,
                "LT-1"
            ],
            [
                41,
                42,
                "LT-2"
            ],
            [
                46,
                47,
                "LT-1"
            ],
            [
                50,
                51,
                "LT-2"
            ],
            [
                57,
                64,
                "GT-1"
            ],
            [
                78,
                79,
                "GT-2"
            ],
            [
                83,
                84,
                "GT-1"
            ],
            [
                87,
                88,
                "GT-2"
            ]
        ]
    },
    {
        "id": 124035,
        "text": "the result returned by one of the tasks",
        "meta": {
            "doc_index": 290496,
            "doc_name": "java.util.concurrent.ExecutorService.invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "ReturnsBy-1"
            ],
            [
                23,
                39,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 124036,
        "text": "The value returned by the method, or null if no such method exists.",
        "meta": {
            "doc_index": 272541,
            "doc_name": "com.sun.javafx.fxml.BeanAdapter.get(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "ReturnsBy-1"
            ],
            [
                22,
                32,
                "ReturnsBy-2"
            ],
            [
                37,
                41,
                "Returned"
            ]
        ]
    },
    {
        "id": 124037,
        "text": "true if this Locale is equal to the specified object.",
        "meta": {
            "doc_index": 291333,
            "doc_name": "java.util.Locale.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                19,
                "EQ-1"
            ],
            [
                32,
                52,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124038,
        "text": "months - can be negative only for duration types; For duration types, it returns years*12 + months",
        "meta": {
            "doc_index": 278460,
            "doc_name": "com.sun.org.apache.xerces.internal.xs.datatypes.XSDateTime.getMonths().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                6,
                "Negativeable"
            ],
            [
                70,
                72,
                "Returns-1"
            ],
            [
                81,
                98,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 124039,
        "text": "the current span of the view along the given axis, >= 0",
        "meta": {
            "doc_index": 298215,
            "doc_name": "javax.swing.text.BoxView.getSpanOnAxis(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                49,
                "GE-1"
            ],
            [
                54,
                55,
                "GE-2"
            ]
        ]
    },
    {
        "id": 124043,
        "text": "For SECONDS, this method returns a java.math.BigDecimal.",
        "meta": {
            "doc_index": 299712,
            "doc_name": "javax.xml.datatype.Duration.getField(javax.xml.datatype.DatatypeConstants.Field).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                13,
                24,
                "Returns-1"
            ],
            [
                33,
                55,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 124044,
        "text": "the column value (full precision); if the value is SQL NULL, the value returned is null in the Java programming language.",
        "meta": {
            "doc_index": 287778,
            "doc_name": "java.sql.ResultSet.getBigDecimal(int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                38,
                47,
                "EQ-1"
            ],
            [
                51,
                59,
                "EQ-2"
            ],
            [
                61,
                70,
                "Returned"
            ],
            [
                83,
                87,
                "EQ-2"
            ],
            [
                0,
                16,
                "Returned"
            ]
        ]
    },
    {
        "id": 124050,
        "text": "this event's type (Type#OPEN, Type#CLOSE, Type#START, or Type#STOP)",
        "meta": {
            "doc_index": 295150,
            "doc_name": "javax.sound.sampled.LineEvent.getType().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "EQ-1"
            ],
            [
                19,
                28,
                "EQ-2"
            ],
            [
                30,
                40,
                "EQ-2"
            ],
            [
                42,
                52,
                "EQ-2"
            ],
            [
                57,
                66,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124052,
        "text": "the smallest (closest to negative infinity) floating-point value that is greater than or equal to the argument and is equal to a mathematical integer.",
        "meta": {
            "doc_index": 284808,
            "doc_name": "java.lang.Math.ceil(double).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                127,
                149,
                "EQ-2"
            ],
            [
                0,
                64,
                "Returned"
            ],
            [
                98,
                110,
                "GE-2"
            ]
        ]
    },
    {
        "id": 124054,
        "text": "true if the specified object is equal to this SimpleType instance.",
        "meta": {
            "doc_index": 293634,
            "doc_name": "javax.management.openmbean.SimpleType.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                28,
                "EQ-1"
            ],
            [
                41,
                65,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124057,
        "text": "The Default value is returned if the field is missing or malformed.",
        "meta": {
            "doc_index": 285815,
            "doc_name": "java.net.URLConnection.getHeaderFieldLong(java.lang.String,long).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                17,
                "Returned"
            ]
        ]
    },
    {
        "id": 124058,
        "text": "Never returns null",
        "meta": {
            "doc_index": 300151,
            "doc_name": "javax.xml.ws.Binding.getBindingID().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                14,
                18,
                "NotReturned"
            ]
        ]
    },
    {
        "id": 124059,
        "text": "A null return can also indicate that the map previously associated null with key.)",
        "meta": {
            "doc_index": 291151,
            "doc_name": "java.util.IdentityHashMap.put(K,V).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                2,
                6,
                "Returned"
            ]
        ]
    },
    {
        "id": 124060,
        "text": "an immutable list of HttpCookie, return empty list if no cookies match the given URI",
        "meta": {
            "doc_index": 285479,
            "doc_name": "java.net.CookieStore.get(java.net.URI).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                31,
                "Returned"
            ],
            [
                40,
                50,
                "Returned"
            ]
        ]
    },
    {
        "id": 124061,
        "text": "instance of EqualizerBand if the band was added, null if a band with the centerFrequency already exists.",
        "meta": {
            "doc_index": 272999,
            "doc_name": "com.sun.media.jfxmedia.effects.AudioEqualizer.addBand(double,double,double).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                49,
                53,
                "Returned"
            ],
            [
                0,
                25,
                "Returned"
            ]
        ]
    },
    {
        "id": 124065,
        "text": "true if this XMLString can return a string without creating one.",
        "meta": {
            "doc_index": 280911,
            "doc_name": "com.sun.org.apache.xpath.internal.objects.XStringForChars.hasString().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                22,
                "Returns-1"
            ],
            [
                34,
                42,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 124066,
        "text": "true if the tag equals com.sun.jmx.snmp.SnmpDataTypeEnums#errEndOfMibViewTag, false otherwise.",
        "meta": {
            "doc_index": 276545,
            "doc_name": "com.sun.jmx.snmp.SnmpNull.isEndOfMibViewValue().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                15,
                "EQ-1"
            ],
            [
                23,
                76,
                "EQ-2"
            ],
            [
                78,
                83,
                "Returned"
            ]
        ]
    },
    {
        "id": 124067,
        "text": "Returns null if not found.",
        "meta": {
            "doc_index": 294674,
            "doc_name": "javax.script.ScriptEngineManager.getEngineByMimeType(java.lang.String).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 124073,
        "text": "The returned object will be serialized as an instance of the non-public class javax.management.BinaryOpValueExp with an op equal to DIV.",
        "meta": {
            "doc_index": 293700,
            "doc_name": "javax.management.Query.div(javax.management.ValueExp,javax.management.ValueExp).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                78,
                111,
                "Type-2"
            ],
            [
                117,
                122,
                "EQ-1"
            ],
            [
                132,
                135,
                "GE-2"
            ]
        ]
    },
    {
        "id": 124075,
        "text": "the location in the model of the word end >= 0",
        "meta": {
            "doc_index": 298992,
            "doc_name": "javax.swing.text.Utilities.getWordEnd(javax.swing.text.JTextComponent,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                41,
                "GE-1"
            ],
            [
                45,
                46,
                "GE-2"
            ]
        ]
    },
    {
        "id": 124076,
        "text": "a file attribute view of the specified type, or null if the attribute view type is not available",
        "meta": {
            "doc_index": 286456,
            "doc_name": "java.nio.file.spi.FileSystemProvider.getFileAttributeView(java.nio.file.Path,java.lang.Class<V>,java.nio.file.LinkOption...).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                43,
                "Returned"
            ],
            [
                48,
                52,
                "Returned"
            ]
        ]
    },
    {
        "id": 124077,
        "text": "the value returned by the action's run method",
        "meta": {
            "doc_index": 286716,
            "doc_name": "java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction<T>).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "ReturnsBy-1"
            ],
            [
                22,
                45,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "id": 124078,
        "text": "the next SQLException in the chain; null if none",
        "meta": {
            "doc_index": 287894,
            "doc_name": "java.sql.SQLWarning.getNextWarning().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                34,
                "Returned"
            ],
            [
                36,
                40,
                "Returned"
            ]
        ]
    },
    {
        "id": 124079,
        "text": "Loosely speaking, this method returns true if it prevents one or more scheduled executions from taking place.)",
        "meta": {
            "doc_index": 292279,
            "doc_name": "java.util.TimerTask.cancel().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                18,
                29,
                "Returns-1"
            ],
            [
                38,
                42,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 124080,
        "text": "an array of the selected indexes on this scrolling list; if no item is selected, a zero-length array is returned.",
        "meta": {
            "doc_index": 283081,
            "doc_name": "java.awt.List.getSelectedIndexes().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                81,
                100,
                "Returned"
            ],
            [
                0,
                55,
                "Returned"
            ]
        ]
    },
    {
        "id": 124081,
        "text": "Returns the updated JAXB object.",
        "meta": {
            "doc_index": 299366,
            "doc_name": "javax.xml.bind.Binder.updateJAXB(XmlNode).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                31,
                "Returned"
            ]
        ]
    },
    {
        "id": 124082,
        "text": "Null is returned if there was no \"#\" in the URI spec, empty string if there was a \"#\" but no fragment following it.",
        "meta": {
            "doc_index": 279930,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.utils.URI.getFragment().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                54,
                66,
                "Returned"
            ]
        ]
    },
    {
        "id": 124083,
        "text": "Returns true if the nodes are the same, false otherwise.",
        "meta": {
            "doc_index": 278673,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode.isSameNode(org.w3c.dom.Node).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                40,
                45,
                "Returned"
            ]
        ]
    },
    {
        "id": 124084,
        "text": "The return value may be null if the component is not displayable.",
        "meta": {
            "doc_index": 281541,
            "doc_name": "java.awt.Component.createVolatileImage(int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "CanEQ-1"
            ],
            [
                24,
                28,
                "CanEQ-2"
            ]
        ]
    },
    {
        "id": 124086,
        "text": "the type variables declared by the formal type parameters, or an empty list if there are none",
        "meta": {
            "doc_index": 293048,
            "doc_name": "javax.lang.model.type.ExecutableType.getTypeVariables().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                62,
                75,
                "Returned"
            ],
            [
                0,
                57,
                "Returned"
            ]
        ]
    },
    {
        "id": 124090,
        "text": "This function will return the first occurrence of the target value, or -1 if the target value cannot be found.",
        "meta": {
            "doc_index": 277608,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl.binarySearch(int[],int,int,int).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "Returns-1"
            ],
            [
                26,
                66,
                "Returns-2"
            ],
            [
                71,
                73,
                "Returned"
            ]
        ]
    },
    {
        "id": 124092,
        "text": "true if and only if o is an MBeanAttributeInfo such that its getName(), getType(), getDescription(), isReadable(), isWritable(), and isIs() values are equal (not necessarily identical) to those of this MBeanAttributeInfo.",
        "meta": {
            "doc_index": 293300,
            "doc_name": "javax.management.MBeanAttributeInfo.equals(java.lang.Object).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                20,
                21,
                "Type-1"
            ],
            [
                25,
                46,
                "Type-2"
            ]
        ]
    },
    {
        "id": 124093,
        "text": "If no target lines are currently open from this mixer, an array of length 0 is returned.",
        "meta": {
            "doc_index": 295162,
            "doc_name": "javax.sound.sampled.Mixer.getTargetLines().<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                67,
                73,
                "EQ-1"
            ],
            [
                74,
                75,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124098,
        "text": "the location within the model that best represents the given point in the view >= 0",
        "meta": {
            "doc_index": 298252,
            "doc_name": "javax.swing.text.CompositeView.viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias[]).<R>",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                29,
                "GE-1"
            ],
            [
                82,
                83,
                "GE-2"
            ]
        ]
    },
    {
        "text": "Returns the default value of the named attribute, if it is not explicitly present within the named element, as a String, or null if no default value is available.",
        "labels": [
            [
                8,
                48,
                "Returned"
            ],
            [
                124,
                128,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40465,
            "doc_name": "getAttributeDefaultValue(String elementName, String attrName)"
        }
    },
    {
        "text": "The map may be empty but never null.",
        "labels": [
            [
                0,
                7,
                "NEQ-1"
            ],
            [
                31,
                35,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 56791,
            "doc_name": "javax.security.auth.x500.X500Principal.getName(java.lang.String,java.util.Map<java.lang.String,java.lang.String>).<P>oidMap"
        }
    },
    {
        "text": "The possibly null protocol-dependent identification to be used for authorization.",
        "labels": [
            [
                18,
                51,
                "Nullable"
            ]
        ],
        "meta": {
            "doc_index": 56806,
            "doc_name": "javax.security.sasl.SaslClientFactory.createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,?>,javax.security.auth.callback.CallbackHandler).<P>authorizationId"
        }
    },
    {
        "text": "If a client wants to locate a printer supporting a resolution greater than some required minimum, then it may be necessary to exclude this attribute from a lookup request and to directly query the set of supported resolutions, and specify the one that most closely meets the client's requirements.",
        "labels": [
            [
                49,
                61,
                "GT-1"
            ],
            [
                75,
                96,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 3556,
            "doc_name": "javax.print.attribute.standard.PrinterResolution"
        }
    },
    {
        "text": "If myByteHolder is an instance of ByteHolder, the value stored in its value field can be accessed with myByteHolder.value.",
        "labels": [
            [
                3,
                15,
                "Type-1"
            ],
            [
                34,
                44,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 5879,
            "doc_name": "org.omg.CORBA.ByteHolder"
        }
    },
    {
        "text": "Creates a new SOAPFactory object that is an instance of the default implementation (SOAP 1.1), This method uses the following ordered lookup procedure to determine the SOAPFactory implementation class to load: Use the javax.xml.soap.SOAPFactory system property.",
        "labels": [
            [
                8,
                32,
                "Type-1"
            ],
            [
                56,
                82,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 50000,
            "doc_name": "newInstance()"
        }
    },
    {
        "text": "Primitive and object read calls issued from within a readExternal method behave in the same manner--if the stream is already positioned at the end of data written by the corresponding writeExternal method, object reads will throw OptionalDataExceptions with eof set to true, bytewise reads will return -1, and primitive reads will throw EOFExceptions.",
        "labels": [
            [
                206,
                218,
                "Throws-1"
            ],
            [
                230,
                252,
                "Throws-2"
            ],
            [
                275,
                289,
                "Returns-1"
            ],
            [
                302,
                304,
                "Returns-2"
            ],
            [
                310,
                325,
                "Throws-1"
            ],
            [
                337,
                350,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 666,
            "doc_name": "java.io.ObjectInputStream"
        }
    },
    {
        "text": "The name may be null if the style is unnamed, but the caller is responsible for managing the reference returned as an unnamed style can't be fetched by name.",
        "labels": [
            [
                0,
                8,
                "CanEQ-1"
            ],
            [
                16,
                20,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 57393,
            "doc_name": "javax.swing.JTextPane.addStyle(java.lang.String,javax.swing.text.Style).<P>nm"
        }
    },
    {
        "text": "This exception is raised when, in a role, the number of referenced MBeans in given value is less than expected minimum degree, or the number of referenced MBeans in provided value exceeds expected maximum degree, or one referenced MBean in the value is not an Object of the MBean class expected for that role, or an MBean provided for that role does not exist.",
        "labels": [
            [
                0,
                14,
                "Thrown"
            ],
            [
                42,
                88,
                "LT-1"
            ],
            [
                102,
                125,
                "LT-2"
            ],
            [
                130,
                179,
                "GT-1"
            ],
            [
                188,
                211,
                "GT-2"
            ],
            [
                216,
                249,
                "NotType-1"
            ],
            [
                274,
                285,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 3274,
            "doc_name": "javax.management.relation.InvalidRoleValueException"
        }
    },
    {
        "text": "There are no guarantees concerning the order in which the elements are returned (unless this collection is an instance of some class that provides a guarantee).",
        "labels": [
            [
                88,
                103,
                "Type-1"
            ],
            [
                122,
                158,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 26441,
            "doc_name": "iterator()"
        }
    },
    {
        "text": "If this thread never called that method, the result is the value its parent thread would have obtained from getMBeanServer at the moment of the creation of this thread, or null if there is no parent thread.",
        "labels": [
            [
                55,
                64,
                "Returned"
            ],
            [
                108,
                122,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 41207,
            "doc_name": "getMBeanServer()"
        }
    },
    {
        "text": "Returns an empty Set if there is no provider that supports the specified service or if serviceName is null.",
        "labels": [
            [
                8,
                20,
                "Returned"
            ],
            [
                87,
                98,
                "EQ-1"
            ],
            [
                102,
                106,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 20050,
            "doc_name": "getAlgorithms(String serviceName)"
        }
    },
    {
        "text": "if cl is null",
        "labels": [
            [
                3,
                5,
                "EQ-1"
            ],
            [
                9,
                13,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 61597,
            "doc_name": "java.rmi.server.RMIClassLoaderSpi.getClassAnnotation(java.lang.Class<?>).NullPointerException"
        }
    },
    {
        "text": "It returns an empty Vector if the RenderedImage object has no immediate sources.",
        "labels": [
            [
                0,
                2,
                "Returns-1"
            ],
            [
                11,
                26,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 31077,
            "doc_name": "getSources()"
        }
    },
    {
        "text": "This class provides support for AccessibleHypertext, and is used in instances where the EditorKit installed in this JEditorPane is an instance of HTMLEditorKit.",
        "labels": [
            [
                84,
                97,
                "Type-1"
            ],
            [
                146,
                159,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 4048,
            "doc_name": "javax.swing.JEditorPane.AccessibleJEditorPaneHTML"
        }
    },
    {
        "text": "The getAWTEventListeners method of Toolkit can return a mixture of AWTEventListener and AWTEventListenerProxy objects.",
        "labels": [
            [
                0,
                31,
                "Returns-1"
            ],
            [
                54,
                117,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 125,
            "doc_name": "java.awt.event.AWTEventListenerProxy"
        }
    },
    {
        "text": "* Maximum length of string allowed as a key (80 characters).",
        "labels": [
            [
                2,
                26,
                "EQ-1"
            ],
            [
                45,
                58,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 17017,
            "doc_name": "java.util.prefs.Preferences.MAX_KEY_LENGTH"
        }
    },
    {
        "text": "An invocation of this method of the form  str.subSequence(begin, end) behaves in exactly the same way as the invocation  str.substring(begin, end)",
        "labels": [
            [
                42,
                69,
                "SameUsage-1"
            ],
            [
                121,
                146,
                "SameUsage-2"
            ]
        ],
        "meta": {
            "doc_index": 33156,
            "doc_name": "subSequence(int beginIndex, int endIndex)"
        }
    },
    {
        "text": "Second, if the months are zero, the years are added if non-zero, otherwise the combination of years and months is added if non-zero.",
        "labels": [
            [
                11,
                21,
                "EQ-1"
            ],
            [
                26,
                30,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 37232,
            "doc_name": "addTo(Temporal temporal)"
        }
    },
    {
        "text": "if offset < 0 or len < 0 or offset+len > str.length",
        "labels": [
            [
                3,
                9,
                "LT-1"
            ],
            [
                12,
                13,
                "LT-2"
            ],
            [
                17,
                20,
                "LT-1"
            ],
            [
                23,
                24,
                "LT-2"
            ],
            [
                28,
                38,
                "GT-1"
            ],
            [
                41,
                51,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 60097,
            "doc_name": "java.lang.AbstractStringBuilder.append(char[],int,int).IndexOutOfBoundsException"
        }
    },
    {
        "text": "if the target is null or if the filters array is null",
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ],
            [
                28,
                45,
                "EQ-1"
            ],
            [
                49,
                53,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 60309,
            "doc_name": "java.lang.invoke.MethodHandles.filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...).NullPointerException"
        }
    },
    {
        "text": "An ObjectName may be a property list pattern.",
        "labels": [
            [
                0,
                13,
                "CanEQ-1"
            ],
            [
                21,
                44,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 3234,
            "doc_name": "javax.management.ObjectName"
        }
    },
    {
        "text": "Note that as a particular instance of the {@linkplain javax.lang.model.element general accuracy requirements} and the ordering behavior required of this interface, the list of enclosed elements will be returned in the natural order for the originating source of information about the type.",
        "labels": [
            [
                164,
                193,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40610,
            "doc_name": "getEnclosedElements()"
        }
    },
    {
        "text": "the input stream, not null",
        "labels": [
            [
                0,
                16,
                "NEQ-1"
            ],
            [
                22,
                26,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 54434,
            "doc_name": "java.time.zone.ZoneRules.readExternal(java.io.DataInput).<P>in"
        }
    },
    {
        "text": "the format style to use, not null",
        "labels": [
            [
                0,
                16,
                "NEQ-1"
            ],
            [
                29,
                33,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 53845,
            "doc_name": "java.time.format.DateTimeFormatterBuilder.appendLocalizedOffset(java.time.format.TextStyle).<P>style"
        }
    },
    {
        "text": "if index < 0 or >= getValueCount",
        "labels": [
            [
                3,
                8,
                "LT-1"
            ],
            [
                11,
                12,
                "LT-2"
            ],
            [
                19,
                32,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 65059,
            "doc_name": "javax.swing.RowFilter.Entry.getValue(int).IndexOutOfBoundsException"
        }
    },
    {
        "text": "The caller must provide a non-null error handler.",
        "labels": [
            [
                35,
                48,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 58502,
            "doc_name": "javax.xml.bind.annotation.DomHandler.marshal(ElementT,javax.xml.bind.ValidationEventHandler).<P>errorHandler"
        }
    },
    {
        "text": "if divisor==0, or roundingMode==ROUND_UNNECESSARY and this.scale() is insufficient to represent the result of the division exactly.",
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                12,
                13,
                "EQ-2"
            ],
            [
                18,
                30,
                "EQ-1"
            ],
            [
                32,
                49,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 60552,
            "doc_name": "java.math.BigDecimal.divide(java.math.BigDecimal,int).ArithmeticException"
        }
    },
    {
        "text": "if factoryClassName is null, or the factory class cannot be loaded, instantiated.",
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65726,
            "doc_name": "javax.xml.transform.TransformerFactory.newInstance(java.lang.String,java.lang.ClassLoader).javax.xml.transform.TransformerFactoryConfigurationError"
        }
    },
    {
        "text": "if nrtype is null",
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 60348,
            "doc_name": "java.lang.invoke.MethodType.changeReturnType(java.lang.Class<?>).NullPointerException"
        }
    },
    {
        "text": "an array of objects containing the values of the arguments passed in the method invocation on the proxy instance, or null if interface method takes no arguments.",
        "labels": [
            [
                0,
                19,
                "Returned"
            ],
            [
                117,
                121,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 52014,
            "doc_name": "java.lang.reflect.InvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).<P>args"
        }
    },
    {
        "text": "The natural ordering for a class C is said to be consistent with equals if and only if e1.compareTo(e2) == 0 has the same boolean value as e1.equals(e2) for every e1 and e2 of class C. Note that null is not an instance of any class, and e.compareTo(null) should throw a NullPointerException even though e.equals(null) returns false.",
        "labels": [
            [
                87,
                108,
                "EQ-1"
            ],
            [
                139,
                152,
                "EQ-2"
            ],
            [
                195,
                199,
                "NotType-1"
            ],
            [
                222,
                231,
                "NotType-2"
            ],
            [
                237,
                254,
                "Throws-1"
            ],
            [
                270,
                290,
                "Throws-2"
            ],
            [
                303,
                317,
                "EQ-1"
            ],
            [
                326,
                331,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 783,
            "doc_name": "java.lang.Comparable"
        }
    },
    {
        "text": "If no output DOM source is set, the transformation will create a Document node as the holder for the result of the transformation, which may be retrieved with getNode().",
        "labels": [
            [
                32,
                50,
                "Returns-1"
            ],
            [
                63,
                78,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 5758,
            "doc_name": "javax.xml.transform.dom.DOMResult"
        }
    },
    {
        "text": "The model is of a directed duration, meaning that the duration may be negative.",
        "labels": [
            [
                50,
                62,
                "Negativeable"
            ]
        ],
        "meta": {
            "doc_index": 1791,
            "doc_name": "java.time.Duration"
        }
    },
    {
        "text": "This returns opaque black (0xFF000000).",
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                13,
                38,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 45066,
            "doc_name": "getBlack()"
        }
    },
    {
        "text": "If FileView returns null for any method, JFileChooser then uses the L&F specific view to get the information.",
        "labels": [
            [
                3,
                11,
                "Returns-1"
            ],
            [
                20,
                24,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 3983,
            "doc_name": "javax.swing.filechooser.FileView"
        }
    },
    {
        "text": "Returns the representation of the data to be transferred, or null if the component's property is null",
        "labels": [
            [
                8,
                38,
                "Returned"
            ],
            [
                61,
                65,
                "Returned"
            ],
            [
                69,
                93,
                "EQ-1"
            ],
            [
                97,
                101,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 47774,
            "doc_name": "createTransferable(JComponent c)"
        }
    },
    {
        "text": "Pixel sizes larger than 16 bits are not supported by this class.",
        "labels": [
            [
                0,
                11,
                "GT-1"
            ],
            [
                24,
                26,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 314,
            "doc_name": "java.awt.image.IndexColorModel"
        }
    },
    {
        "text": "Creates a new object of the same class and with the same contents as this object.",
        "labels": [
            [
                8,
                38,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42491,
            "doc_name": "clone()"
        }
    },
    {
        "text": "The range of a duration requires the storage of a number larger than a long.",
        "labels": [
            [
                33,
                56,
                "GT-1"
            ],
            [
                69,
                75,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 1791,
            "doc_name": "java.time.Duration"
        }
    },
    {
        "text": "The range of an instant requires the storage of a number larger than a long.",
        "labels": [
            [
                33,
                56,
                "GT-1"
            ],
            [
                69,
                75,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 1825,
            "doc_name": "java.time.Instant"
        }
    },
    {
        "text": "Returns this doc flavor object's media subtype (from the MIME type).",
        "labels": [
            [
                8,
                46,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42109,
            "doc_name": "getMediaSubtype()"
        }
    },
    {
        "text": "Returns null if the map contains no mapping for this key.",
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42282,
            "doc_name": "get(Object key)"
        }
    },
    {
        "text": "If a value is present, isPresent() will return true and getAsLong() will return the value.",
        "labels": [
            [
                23,
                34,
                "Returns-1"
            ],
            [
                47,
                51,
                "Returns-2"
            ],
            [
                56,
                67,
                "Returns-1"
            ],
            [
                80,
                89,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 2490,
            "doc_name": "java.util.OptionalLong"
        }
    },
    {
        "text": "Returns a key-value mapping associated with the greatest key strictly less than the given key, or null if there is no such key.",
        "labels": [
            [
                8,
                27,
                "Returned"
            ],
            [
                44,
                60,
                "LT-1"
            ],
            [
                80,
                93,
                "LT-2"
            ],
            [
                98,
                102,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39060,
            "doc_name": "lowerEntry(K key)"
        }
    },
    {
        "text": "Returns the currently set Locale, or null if only a default Locale is supported.",
        "labels": [
            [
                8,
                32,
                "Returned"
            ],
            [
                37,
                41,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40437,
            "doc_name": "getLocale()"
        }
    },
    {
        "text": "Exactly one of getRenderedImage and getRaster will return a non-null value.",
        "labels": [
            [
                8,
                45,
                "Returns-1"
            ],
            [
                58,
                74,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 2990,
            "doc_name": "javax.imageio.IIOImage"
        }
    },
    {
        "text": "Returns a key-value mapping associated with the least key greater than or equal to the given key, or null if there is no such key.",
        "labels": [
            [
                8,
                27,
                "Returned"
            ],
            [
                44,
                57,
                "GE-1"
            ],
            [
                83,
                96,
                "GE-2"
            ],
            [
                101,
                105,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39062,
            "doc_name": "ceilingEntry(K key)"
        }
    },
    {
        "text": "The height of the matrix must be equal to the number of bands in the destination.",
        "labels": [
            [
                0,
                24,
                "EQ-1"
            ],
            [
                42,
                61,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 287,
            "doc_name": "java.awt.image.BandCombineOp"
        }
    },
    {
        "text": "If a value is present, isPresent() will return true and get() will return the value.",
        "labels": [
            [
                23,
                34,
                "Returns-1"
            ],
            [
                47,
                51,
                "Returns-2"
            ],
            [
                56,
                61,
                "Returns-1"
            ],
            [
                74,
                83,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 2487,
            "doc_name": "java.util.Optional"
        }
    },
    {
        "text": "Thrown by a method invocation on a proxy instance if its invocation handler's invoke method throws a checked exception (a Throwable that is not assignable to RuntimeException or Error) that is not assignable to any of the exception types declared in the throws clause of the method that was invoked on the proxy instance and dispatched to the invocation handler.",
        "labels": [
            [
                53,
                91,
                "Throws-1"
            ],
            [
                99,
                118,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 977,
            "doc_name": "java.lang.reflect.UndeclaredThrowableException"
        }
    },
    {
        "text": "The output will be '+0000' when the offset is zero.",
        "labels": [
            [
                0,
                10,
                "EQ-1"
            ],
            [
                19,
                26,
                "EQ-2"
            ],
            [
                32,
                42,
                "EQ-1"
            ],
            [
                46,
                50,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 1793,
            "doc_name": "java.time.format.DateTimeFormatter"
        }
    },
    {
        "text": "Returns null if the attribute is not defined.",
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47723,
            "doc_name": "getAttribute(AttributedCharacterIterator.Attribute attribute)"
        }
    },
    {
        "text": "When the cellRenderer is null, the JTable uses a default renderer based on the class of the cells in that column.",
        "labels": [
            [
                5,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 46822,
            "doc_name": "getCellRenderer()"
        }
    },
    {
        "text": "In general, this method should return the value of a field (or a function of one or more fields) of the CountedCompleter object that holds the result upon completion.",
        "labels": [
            [
                12,
                23,
                "Returns-1"
            ],
            [
                38,
                127,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 2146,
            "doc_name": "java.util.concurrent.CountedCompleter"
        }
    },
    {
        "text": "Returns null if this resource bundle does not contain an object for the given key.",
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39289,
            "doc_name": "handleGetObject(String key)"
        }
    },
    {
        "text": "When first constructed, an X509CRLSelector has no criteria enabled and each of the get methods return a default value (null).",
        "labels": [
            [
                71,
                94,
                "Returns-1"
            ],
            [
                119,
                123,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 1523,
            "doc_name": "java.security.cert.X509CRLSelector"
        }
    },
    {
        "text": "The returned map will throw an IllegalArgumentException on an attempt to insert a key outside its range.",
        "labels": [
            [
                0,
                16,
                "Throws-1"
            ],
            [
                28,
                55,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 39360,
            "doc_name": "tailMap(K fromKey)"
        }
    },
    {
        "text": "mon is the month (Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec).",
        "labels": [
            [
                0,
                3,
                "EQ-1"
            ],
            [
                18,
                21,
                "EQ-2"
            ],
            [
                23,
                26,
                "EQ-2"
            ],
            [
                28,
                31,
                "EQ-2"
            ],
            [
                33,
                36,
                "EQ-2"
            ],
            [
                38,
                41,
                "EQ-2"
            ],
            [
                43,
                46,
                "EQ-2"
            ],
            [
                48,
                51,
                "EQ-2"
            ],
            [
                53,
                56,
                "EQ-2"
            ],
            [
                58,
                61,
                "EQ-2"
            ],
            [
                63,
                66,
                "EQ-2"
            ],
            [
                68,
                71,
                "EQ-2"
            ],
            [
                73,
                76,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 38584,
            "doc_name": "toGMTString()"
        }
    },
    {
        "text": "The DynValue interface can represent both null and non-null value types.",
        "labels": [
            [
                0,
                12,
                "Nullable"
            ]
        ],
        "meta": {
            "doc_index": 6194,
            "doc_name": "org.omg.DynamicAny._DynValueStub"
        }
    },
    {
        "text": "If the type is null, a shared internal persistence delegate is returned that encodes null value.",
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ],
            [
                21,
                59,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 31646,
            "doc_name": "getPersistenceDelegate(Class<?> type)"
        }
    },
    {
        "text": "A null group class name indicates the system's default ActivationGroup implementation.",
        "labels": [
            [
                2,
                6,
                "EQ-1"
            ],
            [
                7,
                23,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 35096,
            "doc_name": "getClassName()"
        }
    },
    {
        "text": "Returns an empty set (immutable).",
        "labels": [
            [
                8,
                20,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37858,
            "doc_name": "emptySet()"
        }
    },
    {
        "text": "Returns null otherwise.",
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40625,
            "doc_name": "getConstantValue()"
        }
    },
    {
        "text": "This may be null.",
        "labels": [
            [
                0,
                4,
                "CanEQ-1"
            ],
            [
                12,
                16,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 47317,
            "doc_name": "getAltView()"
        }
    },
    {
        "text": "This may be useful if a URL can't be formed from the description, in which case the associated URL would be null.",
        "labels": [
            [
                80,
                98,
                "EQ-1"
            ],
            [
                108,
                112,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 42983,
            "doc_name": "getDescription()"
        }
    },
    {
        "text": "Method cancel has the same effect as completeExceptionally(new CancellationException()).",
        "labels": [
            [
                0,
                13,
                "SameUsage-1"
            ],
            [
                37,
                87,
                "SameUsage-2"
            ]
        ],
        "meta": {
            "doc_index": 2022,
            "doc_name": "java.util.concurrent.CompletableFuture"
        }
    },
    {
        "text": "The reflected field may be a class (static) field or an instance field.",
        "labels": [
            [
                0,
                19,
                "CanEQ-1"
            ],
            [
                27,
                49,
                "CanEQ-2"
            ],
            [
                53,
                70,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 954,
            "doc_name": "java.lang.reflect.Field"
        }
    },
    {
        "text": "If x is negative then the result will be a signed value beginning with '-' ('\\u002d').",
        "labels": [
            [
                3,
                4,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "Since the event is an instance of ItemEvent, the processEvent method examines the event and passes it along to processItemEvent.",
        "labels": [
            [
                6,
                15,
                "Type-1"
            ],
            [
                34,
                43,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 29,
            "doc_name": "java.awt.CheckboxMenuItem"
        }
    },
    {
        "text": "A proxy instance is an instance of a proxy class.",
        "labels": [
            [
                0,
                16,
                "Type-1"
            ],
            [
                35,
                48,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 967,
            "doc_name": "java.lang.reflect.Proxy"
        }
    },
    {
        "text": "Returns the null type.",
        "labels": [
            [
                8,
                22,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40682,
            "doc_name": "getNullType()"
        }
    },
    {
        "text": "This method will return null in such implementations if this class was loaded by the bootstrap class loader.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                24,
                28,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 32100,
            "doc_name": "getClassLoader()"
        }
    },
    {
        "text": "If iterables and sets containing null are passed as arguments to methods in this class, a NullPointerException will be thrown.",
        "labels": [
            [
                90,
                110,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 3104,
            "doc_name": "javax.lang.model.util.ElementFilter"
        }
    },
    {
        "text": "The returned string may be empty but may not be null.",
        "labels": [
            [
                0,
                19,
                "CanNEQ-1"
            ],
            [
                48,
                52,
                "CanNEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 47537,
            "doc_name": "paramString()"
        }
    },
    {
        "text": "That is, it must be nonnull for OBJECT_REMOVED and OBJECT_CHANGED.",
        "labels": [
            [
                9,
                11,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 41695,
            "doc_name": "getOldBinding()"
        }
    },
    {
        "text": "When 'value' is valid, 'value' is returned.",
        "labels": [
            [
                23,
                30,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40956,
            "doc_name": "getAttribute(String attrName)"
        }
    },
    {
        "text": "Also, the Lookup.in method may produce a lookup object with fewer access modes than the original lookup object.",
        "labels": [
            [
                5,
                26,
                "Returns-1"
            ],
            [
                39,
                54,
                "Returns-2"
            ],
            [
                66,
                78,
                "LT-1"
            ],
            [
                84,
                110,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 863,
            "doc_name": "java.lang.invoke.MethodHandles.Lookup"
        }
    },
    {
        "text": "If this method returns null then it will not be added to the combo box.",
        "labels": [
            [
                3,
                14,
                "Returns-1"
            ],
            [
                23,
                27,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 44754,
            "doc_name": "getKeyListener()"
        }
    },
    {
        "text": "Returns a key-value mapping associated with the least key strictly greater than the given key, or null if there is no such key.",
        "labels": [
            [
                8,
                27,
                "Returned"
            ],
            [
                44,
                57,
                "GT-1"
            ],
            [
                80,
                93,
                "GT-2"
            ],
            [
                98,
                102,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39063,
            "doc_name": "higherEntry(K key)"
        }
    },
    {
        "text": "Unless otherwise noted, passing a null argument to a method of this class will cause a NullPointerException to be thrown.",
        "labels": [
            [
                34,
                38,
                "EQ-1"
            ],
            [
                39,
                47,
                "EQ-2"
            ],
            [
                85,
                107,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 1921,
            "doc_name": "java.util.Base64.Decoder"
        }
    },
    {
        "text": "If myIntHolder is an instance of IntHolder, the value stored in its value field can be accessed with myIntHolder.value.",
        "labels": [
            [
                3,
                14,
                "Type-1"
            ],
            [
                33,
                42,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 5934,
            "doc_name": "org.omg.CORBA.IntHolder"
        }
    },
    {
        "text": "Returns the first ancestor of the component which is not an instance of JLayer.",
        "labels": [
            [
                8,
                43,
                "Returned"
            ],
            [
                72,
                78,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 46755,
            "doc_name": "getUnwrappedParent(Component component)"
        }
    },
    {
        "text": "The returned set will throw an IllegalArgumentException on an attempt to insert an element outside its range.",
        "labels": [
            [
                0,
                16,
                "Throws-1"
            ],
            [
                28,
                55,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 39367,
            "doc_name": "tailSet(E fromElement)"
        }
    },
    {
        "text": "This returns the value of getBlack().",
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                13,
                36,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 45100,
            "doc_name": "getAcceleratorSelectedForeground()"
        }
    },
    {
        "text": "If myDoubleHolder is an instance of DoubleHolder, the value stored in its value field can be accessed with myDoubleHolder.value.",
        "labels": [
            [
                3,
                17,
                "Type-1"
            ],
            [
                36,
                48,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 5902,
            "doc_name": "org.omg.CORBA.DoubleHolder"
        }
    },
    {
        "text": "The source returned by getSource will be an instance of JTree.",
        "labels": [
            [
                0,
                10,
                "ReturnsBy-1"
            ],
            [
                23,
                32,
                "ReturnsBy-2"
            ],
            [
                56,
                61,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 3967,
            "doc_name": "javax.swing.event.TreeExpansionEvent"
        }
    },
    {
        "text": "No rehash operations will ever occur if the initial capacity is greater than the maximum number of entries the Hashtable will contain divided by its load factor.",
        "labels": [
            [
                40,
                60,
                "GT-1"
            ],
            [
                77,
                106,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 2368,
            "doc_name": "java.util.Hashtable"
        }
    },
    {
        "text": "If both have dimension less than zero, then the result will have at least one dimension less than zero.",
        "labels": [
            [
                13,
                22,
                "LT-1"
            ],
            [
                33,
                37,
                "LT-2"
            ],
            [
                74,
                87,
                "LT-1"
            ],
            [
                98,
                102,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 31362,
            "doc_name": "union(Rectangle r)"
        }
    },
    {
        "text": "The period is modeled as a directed amount of time, meaning that individual parts of the period may be negative.",
        "labels": [
            [
                65,
                95,
                "Negativeable"
            ]
        ],
        "meta": {
            "doc_index": 1832,
            "doc_name": "java.time.Period"
        }
    },
    {
        "text": "If the value is negative and the '(' flag is given, then a '(' ('\\u0028') is prepended and a ')' ('\\u0029') is appended.",
        "labels": [
            [
                3,
                12,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "If myFloatHolder is an instance of FloatHolder, the value stored in its value field can be accessed with myFloatHolder.value.",
        "labels": [
            [
                3,
                16,
                "Type-1"
            ],
            [
                35,
                46,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 5922,
            "doc_name": "org.omg.CORBA.FloatHolder"
        }
    },
    {
        "text": "Since the event is an instance of ActionEvent, the processEvent method examines the event and passes it along to processActionEvent.",
        "labels": [
            [
                6,
                15,
                "Type-1"
            ],
            [
                34,
                45,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 378,
            "doc_name": "java.awt.MenuItem"
        }
    },
    {
        "text": "If myBooleanHolder is an instance of BooleanHolder, the value stored in its value field can be accessed with myBooleanHolder.value.",
        "labels": [
            [
                3,
                18,
                "Type-1"
            ],
            [
                37,
                50,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 5875,
            "doc_name": "org.omg.CORBA.BooleanHolder"
        }
    },
    {
        "text": "If myTypeCodeHolder is an instance of TypeCodeHolder, the value stored in its value field can be accessed with myTypeCodeHolder.value.",
        "labels": [
            [
                3,
                19,
                "Type-1"
            ],
            [
                38,
                52,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 6038,
            "doc_name": "org.omg.CORBA.TypeCodeHolder"
        }
    },
    {
        "text": "If myObjectHolder is an instance of ObjectHolder, the value stored in its value field can be accessed with myObjectHolder.value.",
        "labels": [
            [
                3,
                17,
                "Type-1"
            ],
            [
                36,
                48,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 5961,
            "doc_name": "org.omg.CORBA.ObjectHolder"
        }
    },
    {
        "text": "If myValueBaseHolder is an instance of ValueBaseHolder, the value stored in its value field can be accessed with myValueBaseHolder.value.",
        "labels": [
            [
                3,
                20,
                "Type-1"
            ],
            [
                39,
                54,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 6057,
            "doc_name": "org.omg.CORBA.ValueBaseHolder"
        }
    },
    {
        "text": "If the value of width or height is negative, the behavior of some methods defined by other objects is undefined.",
        "labels": [
            [
                3,
                31,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 92,
            "doc_name": "java.awt.Dimension"
        }
    },
    {
        "text": "If the '0' flag is given and the value is negative, then the zero padding will occur after the sign.",
        "labels": [
            [
                29,
                38,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "Characters whose code points are greater than U+FFFF are called supplementary characters.",
        "labels": [
            [
                17,
                28,
                "GT-1"
            ],
            [
                46,
                52,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 747,
            "doc_name": "java.lang.Character"
        }
    },
    {
        "text": "If the length of the converted value is less than the width then the output will be padded by spaces ('\\u0020') until the total number of characters equals width.",
        "labels": [
            [
                3,
                36,
                "LT-1"
            ],
            [
                50,
                59,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "The amount of used and committed memory will always be less than or equal to max if max is defined.",
        "labels": [
            [
                0,
                39,
                "LE-1"
            ],
            [
                77,
                80,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 892,
            "doc_name": "java.lang.management.MemoryUsage"
        }
    },
    {
        "text": "If n is non-negative, the call merely subtracts n from the scale.",
        "labels": [
            [
                3,
                4,
                "Nonnegative"
            ]
        ],
        "meta": {
            "doc_index": 33336,
            "doc_name": "movePointRight(int n)"
        }
    },
    {
        "text": "Then the character at index k in the new character sequence is equal to the character at index k in the old character sequence, if k is less than n; otherwise, it is equal to the character at index k-n in the argument sb.",
        "labels": [
            [
                5,
                59,
                "EQ-1"
            ],
            [
                72,
                126,
                "EQ-2"
            ],
            [
                131,
                132,
                "LT-1"
            ],
            [
                146,
                147,
                "LT-2"
            ],
            [
                160,
                162,
                "EQ-1"
            ],
            [
                175,
                220,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 33221,
            "doc_name": "append(StringBuffer sb)"
        }
    },
    {
        "text": "If myLongHolder is an instance of LongHolder, the value stored in its value field can be accessed with myLongHolder.value.",
        "labels": [
            [
                3,
                15,
                "Type-1"
            ],
            [
                34,
                44,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 5944,
            "doc_name": "org.omg.CORBA.LongHolder"
        }
    },
    {
        "text": "The final menu item is a submenu labeled \"More Examples\", and this submenu is an instance of Menu.",
        "labels": [
            [
                62,
                74,
                "Type-1"
            ],
            [
                93,
                97,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 378,
            "doc_name": "java.awt.MenuItem"
        }
    },
    {
        "text": "If m is positive-zero or negative-zero, then the exponent will be \"+00\".",
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                21,
                "EQ-2"
            ],
            [
                25,
                38,
                "EQ-2"
            ],
            [
                45,
                57,
                "EQ-1"
            ],
            [
                66,
                71,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "Subsequent crossings of the low threshold value do not cause further notifications unless the attribute value becomes equal to or greater than the high threshold value.",
        "labels": [
            [
                90,
                109,
                "GE-1"
            ],
            [
                143,
                167,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 3206,
            "doc_name": "javax.management.monitor.GaugeMonitor"
        }
    },
    {
        "text": "The result will be negative if the end is before the start.",
        "labels": [
            [
                0,
                10,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 36967,
            "doc_name": "until(ChronoLocalDate endDateExclusive)"
        }
    },
    {
        "text": "If the value is negative (or floating-point negative zero) and '(' flag is not given, then a '-' ('\\u002d') is prepended.",
        "labels": [
            [
                3,
                12,
                "Negative"
            ],
            [
                29,
                57,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "Subclasses of this root AWTEvent class defined outside of the java.awt.event package should define event ID values greater than the value defined by RESERVED_ID_MAX.",
        "labels": [
            [
                99,
                114,
                "GT-1"
            ],
            [
                128,
                164,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 10,
            "doc_name": "java.awt.AWTEvent"
        }
    },
    {
        "text": "If this difference is negative, the value of the derived gauge is incremented by the value of the modulus.",
        "labels": [
            [
                3,
                18,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 3203,
            "doc_name": "javax.management.monitor.CounterMonitor"
        }
    },
    {
        "text": "If myStringHolder is an instance of StringHolder, the value stored in its value field can be accessed with myStringHolder.value.",
        "labels": [
            [
                3,
                17,
                "Type-1"
            ],
            [
                36,
                48,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 6023,
            "doc_name": "org.omg.CORBA.StringHolder"
        }
    },
    {
        "text": "Components with indexes greater than this position are shifted down (toward index 0) by one.",
        "labels": [
            [
                16,
                23,
                "GT-1"
            ],
            [
                37,
                50,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 41805,
            "doc_name": "remove(int posn)"
        }
    },
    {
        "text": "If n is non-negative, the call merely adds n to the scale.",
        "labels": [
            [
                3,
                4,
                "Nonnegative"
            ]
        ],
        "meta": {
            "doc_index": 33335,
            "doc_name": "movePointLeft(int n)"
        }
    },
    {
        "text": "A line join is trimmed when the ratio of miter length to stroke width is greater than the miterlimit value.",
        "labels": [
            [
                28,
                69,
                "GT-1"
            ],
            [
                86,
                106,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 16,
            "doc_name": "java.awt.BasicStroke"
        }
    },
    {
        "text": "If the value associated with this key is an instance of UIDefaults, then the values in that defaults table will override the standard Nimbus defaults in UIManager, but for that component instance only.",
        "labels": [
            [
                3,
                37,
                "Type-1"
            ],
            [
                56,
                66,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 4787,
            "doc_name": "javax.swing.plaf.nimbus.NimbusStyle"
        }
    },
    {
        "text": "If the given size is greater than or equal to the file's current size then the file is not modified.",
        "labels": [
            [
                3,
                17,
                "GE-1"
            ],
            [
                46,
                69,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 34111,
            "doc_name": "truncate(long size)"
        }
    },
    {
        "text": "The Java virtual machine may release memory to the system and committed could be less than init.",
        "labels": [
            [
                62,
                71,
                "LT-1"
            ],
            [
                91,
                95,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 892,
            "doc_name": "java.lang.management.MemoryUsage"
        }
    },
    {
        "text": "The value returned by this method may not be the same as previously set with setShape(shape), but it is guaranteed to represent the same shape.",
        "labels": [
            [
                0,
                9,
                "ReturnsBy-1"
            ],
            [
                22,
                33,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 31561,
            "doc_name": "getShape()"
        }
    },
    {
        "text": "When the timer fires, if the magic caret position is still null it is reset to the current caret position.",
        "labels": [
            [
                25,
                49,
                "EQ-1"
            ],
            [
                59,
                63,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 5084,
            "doc_name": "javax.swing.text.DefaultCaret"
        }
    },
    {
        "text": "Unless otherwise specified, passing a null argument to any method or constructor in this class will cause a NullPointerException to be thrown.",
        "labels": [
            [
                38,
                42,
                "EQ-1"
            ],
            [
                43,
                51,
                "EQ-2"
            ],
            [
                108,
                128,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 2898,
            "doc_name": "java.util.UnknownFormatFlagsException"
        }
    },
    {
        "text": "Returns the CompositeData value whose index is key, or null if there is no value mapping to key, in this TabularData instance.",
        "labels": [
            [
                8,
                31,
                "Returned"
            ],
            [
                55,
                59,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 41156,
            "doc_name": "get(Object[] key)"
        }
    },
    {
        "text": "If the standard output of the subprocess has been redirected using ProcessBuilder.redirectOutput then this method will return a null input stream.",
        "labels": [
            [
                102,
                113,
                "Returns-1"
            ],
            [
                126,
                145,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 32961,
            "doc_name": "getInputStream()"
        }
    },
    {
        "text": "Normally the values of width and height are non-negative integers.",
        "labels": [
            [
                9,
                39,
                "Nonnegative"
            ]
        ],
        "meta": {
            "doc_index": 92,
            "doc_name": "java.awt.Dimension"
        }
    },
    {
        "text": "If the true result had a negative dimension and was therefore non-existant along one or both axes, the stored dimensions will be negative numbers in those axes.",
        "labels": [
            [
                34,
                43,
                "Negative"
            ],
            [
                99,
                120,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 419,
            "doc_name": "java.awt.Rectangle"
        }
    },
    {
        "text": "Returns the public key of the subject (target) of the certification path, including any inherited public key parameters if applicable.",
        "labels": [
            [
                8,
                72,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 35333,
            "doc_name": "getPublicKey()"
        }
    },
    {
        "text": "This method returns the single offset in the Normal case, and in the Gap or Overlap case it returns the offset before the transition.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                20,
                37,
                "Returns-2"
            ],
            [
                89,
                91,
                "Returns-1"
            ],
            [
                100,
                132,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 37424,
            "doc_name": "getOffset(LocalDateTime localDateTime)"
        }
    },
    {
        "text": "This method returns an empty list if there is no input argument to the Java virtual machine.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                20,
                33,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 32930,
            "doc_name": "getInputArguments()"
        }
    },
    {
        "text": "If the precision is less than the number of digits which would appear after the decimal point in the string returned by Float#toString(float) or Double#toString(double) respectively, then the value will be rounded using the {@linkplain java.math.BigDecimal#ROUND_HALF_UP round half up algorithm}.",
        "labels": [
            [
                3,
                16,
                "LT-1"
            ],
            [
                30,
                50,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "The iterators returned by the iterator method of the collections returned by all of this class's collection view methods are fail-fast: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove method, the iterator will throw a ConcurrentModificationException.",
        "labels": [
            [
                0,
                13,
                "ReturnsBy-1"
            ],
            [
                26,
                45,
                "ReturnsBy-2"
            ],
            [
                275,
                287,
                "Throws-1"
            ],
            [
                301,
                332,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 2419,
            "doc_name": "java.util.LinkedHashMap"
        }
    },
    {
        "text": "If the value is negative infinity, then the output will be \"(Infinity)\" if the '(' flag is given otherwise the output will be \"-Infinity\".",
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                33,
                "EQ-2"
            ],
            [
                40,
                50,
                "EQ-1"
            ],
            [
                59,
                71,
                "EQ-2"
            ],
            [
                107,
                117,
                "EQ-1"
            ],
            [
                126,
                137,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "If myServiceInformationHolder is an instance of ServiceInformationHolder, the value stored in its value field can be accessed with myServiceInformationHolder.value.",
        "labels": [
            [
                3,
                29,
                "Type-1"
            ],
            [
                48,
                72,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 6017,
            "doc_name": "org.omg.CORBA.ServiceInformationHolder"
        }
    },
    {
        "text": "If myShortHolder is an instance of ShortHolder, the value stored in its value field can be accessed with myShortHolder.value.",
        "labels": [
            [
                3,
                16,
                "Type-1"
            ],
            [
                35,
                46,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 6020,
            "doc_name": "org.omg.CORBA.ShortHolder"
        }
    },
    {
        "text": "If the value to be written is an instance of SQLData, the driver will create an instance of SQLOutputImpl and pass it to the method SQLData.writeSQL.",
        "labels": [
            [
                3,
                12,
                "Type-1"
            ],
            [
                45,
                52,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 3812,
            "doc_name": "javax.sql.rowset.serial.SQLOutputImpl"
        }
    },
    {
        "text": "Returns a key-value mapping associated with the least key greater than or equal to the given key, or null if there is no such entry.",
        "labels": [
            [
                8,
                27,
                "Returned"
            ],
            [
                44,
                57,
                "GE-1"
            ],
            [
                83,
                96,
                "GE-2"
            ],
            [
                101,
                105,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 38220,
            "doc_name": "ceilingEntry(K key)"
        }
    },
    {
        "text": "As a result of this, getLength returns one less than the length of the Content.",
        "labels": [
            [
                21,
                30,
                "Returns-1"
            ],
            [
                39,
                78,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 5054,
            "doc_name": "javax.swing.text.AbstractDocument"
        }
    },
    {
        "text": "If the upper bound is less than the lower bound, it denotes a null range (no values).",
        "labels": [
            [
                3,
                18,
                "LT-1"
            ],
            [
                32,
                47,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 3491,
            "doc_name": "javax.print.attribute.SetOfIntegerSyntax"
        }
    },
    {
        "text": "If x is negative or a negative-zero value then the result will begin with '-' ('\\u002d').",
        "labels": [
            [
                3,
                4,
                "Negative"
            ],
            [
                22,
                41,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "If myAnyHolder is an instance of AnyHolder, the value stored in its value field can be accessed with myAnyHolder.value.",
        "labels": [
            [
                3,
                14,
                "Type-1"
            ],
            [
                33,
                42,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 5860,
            "doc_name": "org.omg.CORBA.AnyHolder"
        }
    },
    {
        "text": "If the '+' flag is given and the value is positive or zero (or floating-point positive zero), then a '+' ('\\u002b') will be prepended.",
        "labels": [
            [
                29,
                38,
                "Positive"
            ],
            [
                54,
                58,
                "EQ-2"
            ],
            [
                63,
                91,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "the temporal object to convert, not null",
        "labels": [
            [
                0,
                30,
                "NEQ-1"
            ],
            [
                36,
                40,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 54548,
            "doc_name": "java.time.ZoneOffset.from(java.time.temporal.TemporalAccessor).<P>temporal"
        }
    },
    {
        "text": "indent specifies whether the Transformer may * add additional whitespace when outputting the result tree; the value * must be yes or no. *",
        "labels": [
            [
                106,
                115,
                "EQ-1"
            ],
            [
                126,
                129,
                "EQ-2"
            ],
            [
                133,
                135,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 28849,
            "doc_name": "javax.xml.transform.OutputKeys.INDENT"
        }
    },
    {
        "text": "if the value of the default \"AuditoryCues.actionMap\" is not an ActionMap, or the value of the default \"AuditoryCues.cueList\" is not an Object[]",
        "labels": [
            [
                3,
                52,
                "NotType-1"
            ],
            [
                63,
                72,
                "NotType-2"
            ],
            [
                77,
                124,
                "NotType-1"
            ],
            [
                135,
                143,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 65015,
            "doc_name": "javax.swing.plaf.basic.BasicLookAndFeel.getAudioActionMap().ClassCastException"
        }
    },
    {
        "text": "Neither the key nor the value can be null.",
        "labels": [
            [
                8,
                29,
                "NEQ-1"
            ],
            [
                37,
                41,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 31368,
            "doc_name": "put(Object key, Object value)"
        }
    },
    {
        "text": "The end argument must be greater than or equal to start, and less than or equal to the length of s.",
        "labels": [
            [
                0,
                16,
                "GE-1"
            ],
            [
                50,
                55,
                "GE-2"
            ],
            [
                83,
                98,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 32049,
            "doc_name": "insert(int dstOffset, CharSequence s, int start, int end)"
        }
    },
    {
        "text": "If the value of key for the given Locale is a Border return it, otherwise return null.",
        "labels": [
            [
                3,
                40,
                "Type-1"
            ],
            [
                46,
                52,
                "Type-2"
            ],
            [
                60,
                62,
                "Returned"
            ],
            [
                81,
                85,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47909,
            "doc_name": "getBorder(Object key, Locale l)"
        }
    },
    {
        "text": "if referenceParameter is null.",
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65813,
            "doc_name": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.referenceParameter(org.w3c.dom.Element).java.lang.IllegalArgumentException"
        }
    },
    {
        "text": "If node parameter is null",
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                21,
                25,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65257,
            "doc_name": "javax.xml.bind.Binder.updateJAXB(XmlNode).IllegalArgumentException"
        }
    },
    {
        "text": "a non-null reference to the region of the component c",
        "labels": [
            [
                11,
                20,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 57648,
            "doc_name": "javax.swing.plaf.nimbus.NimbusLookAndFeel.getStyle(javax.swing.JComponent,javax.swing.plaf.synth.Region).<P>r"
        }
    },
    {
        "text": "if the given array is null",
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63606,
            "doc_name": "java.util.Spliterators.spliterator(double[],int,int,int).NullPointerException"
        }
    },
    {
        "text": "The offset within the array of the first int to be read; must be non-negative and no larger than array.length",
        "labels": [
            [
                0,
                55,
                "Nonnegative"
            ],
            [
                97,
                109,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52754,
            "doc_name": "java.nio.IntBuffer.put(int[],int,int).<P>offset"
        }
    },
    {
        "text": "if any of the specified elements are null, or if rest is null",
        "labels": [
            [
                3,
                32,
                "EQ-1"
            ],
            [
                37,
                41,
                "EQ-2"
            ],
            [
                49,
                53,
                "EQ-1"
            ],
            [
                57,
                61,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63289,
            "doc_name": "java.util.EnumSet.of(E,E...).NullPointerException"
        }
    },
    {
        "text": "If the format is null",
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 60085,
            "doc_name": "java.io.PrintWriter.format(java.util.Locale,java.lang.String,java.lang.Object...).NullPointerException"
        }
    },
    {
        "text": "If null is returned, the preferred size will be calculated by the component's layout manager instead (this is the preferred approach for any component with a specific layout manager installed).",
        "labels": [
            [
                3,
                7,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 44766,
            "doc_name": "getPreferredSize(JComponent c)"
        }
    },
    {
        "text": "If the value of key for the given Locale is a Dimension return it, otherwise return null.",
        "labels": [
            [
                3,
                19,
                "Type-1"
            ],
            [
                44,
                55,
                "Type-2"
            ],
            [
                63,
                65,
                "Returned"
            ],
            [
                84,
                88,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47915,
            "doc_name": "getDimension(Object key, Locale l)"
        }
    },
    {
        "text": "if the number of bits in a pixel is greater than 16",
        "labels": [
            [
                3,
                32,
                "GT-1"
            ],
            [
                49,
                51,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 59840,
            "doc_name": "java.awt.image.IndexColorModel.createCompatibleWritableRaster(int,int).UnsupportedOperationException"
        }
    },
    {
        "text": "if val is null.",
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65288,
            "doc_name": "javax.xml.bind.DatatypeConverterInterface.printDate(java.util.Calendar).IllegalArgumentException"
        }
    },
    {
        "text": "the temporal to convert, not null",
        "labels": [
            [
                0,
                23,
                "NEQ-1"
            ],
            [
                29,
                33,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 53535,
            "doc_name": "java.time.chrono.Chronology.from(java.time.temporal.TemporalAccessor).<P>temporal"
        }
    },
    {
        "text": "To compute the return value's TimeZone field, when parameter timeZone is non-null, it is the timezone field.",
        "labels": [
            [
                51,
                69,
                "NotNull"
            ],
            [
                83,
                85,
                "EQ-1"
            ],
            [
                89,
                107,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 48534,
            "doc_name": "toGregorianCalendar(java.util.TimeZone timezone, java.util.Locale aLocale, XMLGregorianCalendar defaults)"
        }
    },
    {
        "text": "if either argument is null.",
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 64654,
            "doc_name": "javax.script.ScriptEngine.eval(java.io.Reader,javax.script.Bindings).NullPointerException"
        }
    },
    {
        "text": "if fromElement or toElement is null",
        "labels": [
            [
                3,
                27,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63160,
            "doc_name": "java.util.concurrent.ConcurrentSkipListSet.subSet(E,E).NullPointerException"
        }
    },
    {
        "text": "If null is passed as icon, this method returns null.",
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                21,
                25,
                "EQ-2"
            ],
            [
                27,
                38,
                "Returns-1"
            ],
            [
                47,
                51,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 44957,
            "doc_name": "getDisabledSelectedIcon(JComponent component, Icon icon)"
        }
    },
    {
        "text": "Right/trailing justification is useful if the required size of the field text is smaller than the size allocated to it.",
        "labels": [
            [
                42,
                77,
                "LT-1"
            ],
            [
                94,
                102,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 4169,
            "doc_name": "javax.swing.JTextField"
        }
    },
    {
        "text": "This method is the same as NamingManager.getObjectInstance except for the following differences: It accepts an Attributes parameter that contains attributes associated with the object.",
        "labels": [
            [
                0,
                11,
                "SameUsage-1"
            ],
            [
                27,
                58,
                "SameUsage-2"
            ]
        ],
        "meta": {
            "doc_index": 41890,
            "doc_name": "getObjectInstance(Object refInfo, Name name, Context nameCtx, Hashtable<?, ?> environment, Attributes attrs)"
        }
    },
    {
        "text": "if toKey is null and this map uses natural ordering, or its comparator does not permit null keys",
        "labels": [
            [
                3,
                8,
                "EQ-1"
            ],
            [
                11,
                16,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63690,
            "doc_name": "java.util.TreeMap.headMap(K).NullPointerException"
        }
    },
    {
        "text": "if maxSize is negative",
        "labels": [
            [
                3,
                10,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 63647,
            "doc_name": "java.util.stream.Stream.limit(long).IllegalArgumentException"
        }
    },
    {
        "text": "The non-null list of mechanism names to try.",
        "labels": [
            [
                21,
                36,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 56805,
            "doc_name": "javax.security.sasl.SaslClientFactory.createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,?>,javax.security.auth.callback.CallbackHandler).<P>mechanisms"
        }
    },
    {
        "text": "That is, a null return value may indicate that specifying this attribute is incompatible with the specified DocFlavor.",
        "labels": [
            [
                11,
                15,
                "EQ-1"
            ],
            [
                16,
                28,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 42145,
            "doc_name": "getSupportedAttributeValues(Class<? extends Attribute> category, DocFlavor flavor, AttributeSet attributes)"
        }
    },
    {
        "text": "if priorityList or locales is null",
        "labels": [
            [
                3,
                26,
                "EQ-1"
            ],
            [
                30,
                34,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63386,
            "doc_name": "java.util.Locale.filter(java.util.List<java.util.Locale.LanguageRange>,java.util.Collection<java.util.Locale>).NullPointerException"
        }
    },
    {
        "text": "If the postRegister (MBeanRegistration interface) method of the MBean throws a RuntimeException, the createMBean method will throw a RuntimeMBeanException, although the MBean creation and registration succeeded.",
        "labels": [
            [
                3,
                69,
                "Throws-1"
            ],
            [
                77,
                95,
                "Throws-2"
            ],
            [
                97,
                119,
                "Throws-1"
            ],
            [
                131,
                154,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 64026,
            "doc_name": "javax.management.MBeanServerConnection.createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object[],java.lang.String[]).RuntimeMBeanException"
        }
    },
    {
        "text": "if uri is null",
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65395,
            "doc_name": "javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newRetrievalMethod(java.lang.String,java.lang.String,java.util.List).NullPointerException"
        }
    },
    {
        "text": "This method is the same as the createStatement method above, but it allows the default result set type and concurrency to be overridden.",
        "labels": [
            [
                0,
                11,
                "SameUsage-1"
            ],
            [
                27,
                53,
                "SameUsage-2"
            ]
        ],
        "meta": {
            "doc_index": 35832,
            "doc_name": "createStatement(int resultSetType, int resultSetConcurrency)"
        }
    },
    {
        "text": "The offset within the array of the first float to be read; must be non-negative and no larger than array.length",
        "labels": [
            [
                0,
                57,
                "Nonnegative"
            ],
            [
                99,
                111,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52737,
            "doc_name": "java.nio.FloatBuffer.put(float[],int,int).<P>offset"
        }
    },
    {
        "text": "The new limit value; must be non-negative and no larger than this buffer's capacity",
        "labels": [
            [
                0,
                19,
                "Nonnegative"
            ],
            [
                61,
                83,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52306,
            "doc_name": "java.nio.Buffer.limit(int).<P>newLimit"
        }
    },
    {
        "text": "The input 2011-12-15 for (-5,TUESDAY) will return 2011-11-29 (4 weeks before last in month).",
        "labels": [
            [
                50,
                60,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37275,
            "doc_name": "dayOfWeekInMonth(int ordinal, DayOfWeek dayOfWeek)"
        }
    },
    {
        "text": "if method name is null.",
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 64635,
            "doc_name": "javax.script.Invocable.invokeFunction(java.lang.String,java.lang.Object...).NullPointerException"
        }
    },
    {
        "text": "A non-null String that specifies an output property name, which may be namespace qualified.",
        "labels": [
            [
                11,
                17,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 59057,
            "doc_name": "javax.xml.transform.Transformer.getOutputProperty(java.lang.String).<P>name"
        }
    },
    {
        "text": "The method returns null if no further fallback search is desired.",
        "labels": [
            [
                0,
                10,
                "Returns-1"
            ],
            [
                19,
                23,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 39299,
            "doc_name": "getFallbackLocale(String baseName, Locale locale)"
        }
    },
    {
        "text": "if metadataElement is null.",
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65814,
            "doc_name": "javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.metadata(org.w3c.dom.Element).java.lang.IllegalArgumentException"
        }
    },
    {
        "text": "If x is positive or zero and the '+' flag is given then the result will begin with '+' ('\\u002b').",
        "labels": [
            [
                3,
                4,
                "Positive"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "The latter is in base ten, using the characters '0' through '9' with no leading zeros, and is always prefixed by a sign character '-' ('\\u002D') if the adjusted exponent is negative, '+' ('\\u002B') otherwise).",
        "labels": [
            [
                148,
                169,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 33341,
            "doc_name": "toString()"
        }
    },
    {
        "text": "if start or end are negative or greater than length(), or start is greater than end.",
        "labels": [
            [
                3,
                15,
                "Negative"
            ],
            [
                45,
                53,
                "GT-2"
            ],
            [
                58,
                63,
                "GT-1"
            ],
            [
                80,
                83,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 60104,
            "doc_name": "java.lang.AbstractStringBuilder.substring(int,int).StringIndexOutOfBoundsException"
        }
    },
    {
        "text": "The position within the file at which the mapped region is to start; must be non-negative",
        "labels": [
            [
                0,
                28,
                "Nonnegative"
            ]
        ],
        "meta": {
            "doc_index": 52401,
            "doc_name": "java.nio.channels.FileChannel.map(java.nio.channels.FileChannel.MapMode,long,long).<P>position"
        }
    },
    {
        "text": "The offset within the array of the first int to be written; must be non-negative and no larger than dst.length",
        "labels": [
            [
                0,
                44,
                "Nonnegative"
            ],
            [
                100,
                110,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52749,
            "doc_name": "java.nio.IntBuffer.get(int[],int,int).<P>offset"
        }
    },
    {
        "text": "The offset within the array of the first char to be read; must be non-negative and no larger than array.length",
        "labels": [
            [
                0,
                56,
                "Nonnegative"
            ],
            [
                98,
                110,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52463,
            "doc_name": "java.nio.CharBuffer.put(char[],int,int).<P>offset"
        }
    },
    {
        "text": "The number of doubles to be read from the given array; must be non-negative and no larger than array.length - offset",
        "labels": [
            [
                0,
                53,
                "Nonnegative"
            ],
            [
                95,
                116,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52520,
            "doc_name": "java.nio.DoubleBuffer.put(double[],int,int).<P>length"
        }
    },
    {
        "text": "The maximum number of longs to be written to the given array; must be non-negative and no larger than dst.length - offset",
        "labels": [
            [
                0,
                60,
                "Nonnegative"
            ],
            [
                102,
                121,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52767,
            "doc_name": "java.nio.LongBuffer.get(long[],int,int).<P>length"
        }
    },
    {
        "text": "The number of longs to be read from the given array; must be non-negative and no larger than array.length - offset",
        "labels": [
            [
                0,
                51,
                "Nonnegative"
            ],
            [
                93,
                114,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52772,
            "doc_name": "java.nio.LongBuffer.put(long[],int,int).<P>length"
        }
    },
    {
        "text": "if the maxDepth parameter is negative",
        "labels": [
            [
                3,
                25,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 61278,
            "doc_name": "java.nio.file.Files.find(java.nio.file.Path,int,java.util.function.BiPredicate<java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes>,java.nio.file.FileVisitOption...).IllegalArgumentException"
        }
    },
    {
        "text": "Thus, if the hours is negative, the minutes and seconds must be negative or zero.",
        "labels": [
            [
                9,
                18,
                "Negative"
            ],
            [
                32,
                55,
                "Negative"
            ],
            [
                76,
                80,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 37528,
            "doc_name": "ofHoursMinutesSeconds(int hours, int minutes, int seconds)"
        }
    },
    {
        "text": "If x is positive or a positive-zero value and the '+' flag is given then the result will begin with '+' ('\\u002b').",
        "labels": [
            [
                3,
                4,
                "Positive"
            ],
            [
                20,
                41,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "If the values are not a valid representation of a Duration: if any of the fields (year, month) is negative.",
        "labels": [
            [
                63,
                94,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 65517,
            "doc_name": "javax.xml.datatype.DatatypeFactory.newDurationYearMonth(boolean,int,int).IllegalArgumentException"
        }
    },
    {
        "text": "The offset within the array of the first long to be written; must be non-negative and no larger than dst.length",
        "labels": [
            [
                0,
                27,
                "Nonnegative"
            ],
            [
                101,
                111,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52766,
            "doc_name": "java.nio.LongBuffer.get(long[],int,int).<P>offset"
        }
    },
    {
        "text": "The entire string is prefixed by a minus sign character '-' ('\\u002D') if the unscaled value is less than zero.",
        "labels": [
            [
                74,
                92,
                "LT-1"
            ],
            [
                106,
                110,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 33343,
            "doc_name": "toPlainString()"
        }
    },
    {
        "text": "Else if listener-l is an instance of AWTEventMulticaster, then it removes the old listener from it.",
        "labels": [
            [
                8,
                18,
                "Type-1"
            ],
            [
                37,
                56,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 30375,
            "doc_name": "removeInternal(EventListener l, EventListener oldl)"
        }
    },
    {
        "text": "if pos is less than 1 or if pos is greater than the number of bytes in the Blob or if pos + length is greater than the number of bytes in the Blob",
        "labels": [
            [
                3,
                6,
                "LT-1"
            ],
            [
                20,
                21,
                "LT-2"
            ],
            [
                28,
                31,
                "GT-1"
            ],
            [
                48,
                67,
                "GT-2"
            ],
            [
                86,
                98,
                "GT-1"
            ],
            [
                115,
                134,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 64871,
            "doc_name": "javax.sql.rowset.serial.SerialBlob.getBinaryStream(long,long).java.sql.SQLException"
        }
    },
    {
        "text": "Returns the message to display from the JOptionPane the receiver is providing the look and feel for.",
        "labels": [
            [
                8,
                19,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 44394,
            "doc_name": "getMessage()"
        }
    },
    {
        "text": "A processor may return an empty iterable.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                23,
                40,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 40353,
            "doc_name": "getCompletions(Element element, AnnotationMirror annotation, ExecutableElement member, String userText)"
        }
    },
    {
        "text": "The offset within the array of the first char to be written; must be non-negative and no larger than dst.length",
        "labels": [
            [
                0,
                59,
                "Nonnegative"
            ],
            [
                101,
                111,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 52458,
            "doc_name": "java.nio.CharBuffer.get(char[],int,int).<P>offset"
        }
    },
    {
        "text": "This returns an Instant representing the same point on the time-line as this date-time.",
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                13,
                23,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 37163,
            "doc_name": "toInstant()"
        }
    },
    {
        "text": "Returns the style associated with this Region.",
        "labels": [
            [
                8,
                45,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 46319,
            "doc_name": "getStyle()"
        }
    },
    {
        "text": "if font is null",
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 64964,
            "doc_name": "javax.swing.JComponent.getFontMetrics(java.awt.Font).NullPointerException"
        }
    },
    {
        "text": "This method throws InvalidPathException when the path string cannot be converted to a path.",
        "labels": [
            [
                0,
                11,
                "Throws-1"
            ],
            [
                19,
                39,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 34731,
            "doc_name": "getPath(String first, String... more)"
        }
    },
    {
        "text": "Returns the default CertPathBuilder type as specified by the certpathbuilder.type security property, or the string {@literal \"PKIX\"} if no such property exists.",
        "labels": [
            [
                8,
                40,
                "Returned"
            ],
            [
                104,
                114,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 35282,
            "doc_name": "getDefaultType()"
        }
    },
    {
        "text": "The returned attribute set is unmodifiable.",
        "labels": [
            [
                0,
                26,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42161,
            "doc_name": "getAttributes()"
        }
    },
    {
        "text": "If this field is equal to this throwable itself, * it indicates that the cause of this throwable has not yet been * initialized. * *",
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                26,
                47,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 11928,
            "doc_name": "java.lang.Throwable.cause"
        }
    },
    {
        "text": "Similarly, from this HTML: <a HREF=\"#top\"><img src=\"top-hat.gif\" alt=\"top hat\"></a> this method would return \"top hat\"",
        "labels": [
            [
                84,
                95,
                "Returns-1"
            ],
            [
                109,
                118,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 40299,
            "doc_name": "getAccessibleActionDescription(int i)"
        }
    },
    {
        "text": "The rectangle returned is the actual bounding box of the transformed points.",
        "labels": [
            [
                0,
                13,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 30879,
            "doc_name": "getBounds2D(BufferedImage src)"
        }
    },
    {
        "text": "This returns a color with an rgb hex value of 0x7A8A99.",
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                13,
                54,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 45139,
            "doc_name": "getSecondary1()"
        }
    },
    {
        "text": "If the data needs to be coerced, this method will also return an instance of this ColorModel with the isAlphaPremultiplied flag set appropriately.",
        "labels": [
            [
                33,
                44,
                "Returns-1"
            ],
            [
                62,
                92,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 30966,
            "doc_name": "coerceData(WritableRaster raster, boolean isAlphaPremultiplied)"
        }
    },
    {
        "text": "Get the linked exception",
        "labels": [
            [
                4,
                24,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 48285,
            "doc_name": "getLinkedException()"
        }
    },
    {
        "text": "If this value is less than 1 then daylight saving time is observed * for all AD years. *",
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                28,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 17377,
            "doc_name": "java.util.SimpleTimeZone.startYear"
        }
    },
    {
        "text": "Returns a copy of this LocalDateTime with the time truncated.",
        "labels": [
            [
                8,
                60,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37010,
            "doc_name": "truncatedTo(TemporalUnit unit)"
        }
    },
    {
        "text": "The content and format of the returned string may vary between implementations.",
        "labels": [
            [
                26,
                45,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 43597,
            "doc_name": "paramString()"
        }
    },
    {
        "text": "null if empty",
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 28345,
            "doc_name": "javax.swing.tree.DefaultMutableTreeNode.BreadthFirstEnumeration.Queue.head"
        }
    },
    {
        "text": "Attempts to locate and return a default Mixer that provides lines of the specified type.",
        "labels": [
            [
                30,
                45,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42527,
            "doc_name": "getDefaultMixer(List providers, Line.Info info)"
        }
    },
    {
        "text": "Multiple calls to this method (for the same exchange) will return the same stream.",
        "labels": [
            [
                18,
                29,
                "Returns-1"
            ],
            [
                66,
                81,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 49092,
            "doc_name": "getResponseBody()"
        }
    },
    {
        "text": "Note that this is expected to be called with positive arguments only.",
        "labels": [
            [
                54,
                63,
                "Positive"
            ]
        ],
        "meta": {
            "doc_index": 33410,
            "doc_name": "exactDivideBy3()"
        }
    },
    {
        "text": "If it cannot be found, the first Receiver from that provider will be returned, regardless of name.",
        "labels": [
            [
                23,
                60,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 3726,
            "doc_name": "javax.sound.midi.MidiSystem"
        }
    },
    {
        "text": "The type of the object is an input method specific class.",
        "labels": [
            [
                16,
                22,
                "Type-1"
            ],
            [
                26,
                56,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 30871,
            "doc_name": "getControlObject()"
        }
    },
    {
        "text": "Otherwise, the number of sets of scaling constants may equal the number of Source color components, in which case no rescaling of the alpha component (if present) is performed.",
        "labels": [
            [
                11,
                50,
                "CanEQ-1"
            ],
            [
                61,
                98,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 335,
            "doc_name": "java.awt.image.RescaleOp"
        }
    },
    {
        "text": "Returns the opaque file descriptor object associated with this stream.",
        "labels": [
            [
                8,
                41,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 31988,
            "doc_name": "getFD()"
        }
    },
    {
        "text": "If this factory cannot create a control using the argument supplied, it should return null.",
        "labels": [
            [
                69,
                71,
                "Returns-1"
            ],
            [
                86,
                90,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 41724,
            "doc_name": "getControlInstance(Control ctl)"
        }
    },
    {
        "text": "the text style to use, not null",
        "labels": [
            [
                0,
                14,
                "NEQ-1"
            ],
            [
                27,
                31,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 53849,
            "doc_name": "java.time.format.DateTimeFormatterBuilder.appendChronologyText(java.time.format.TextStyle).<P>textStyle"
        }
    },
    {
        "text": "If the clipboard currently has no contents, it returns null.",
        "labels": [
            [
                44,
                46,
                "Returns-1"
            ],
            [
                55,
                59,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 30296,
            "doc_name": "getContents(Object requestor)"
        }
    },
    {
        "text": "Returns the preferred location to display the popup menu in this component's coordinate system.",
        "labels": [
            [
                8,
                30,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 43216,
            "doc_name": "getPopupLocation(MouseEvent event)"
        }
    },
    {
        "text": "All items in a menu must belong to the class MenuItem, or one of its subclasses.",
        "labels": [
            [
                0,
                19,
                "Type-1"
            ],
            [
                35,
                53,
                "Type-2"
            ],
            [
                58,
                79,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 378,
            "doc_name": "java.awt.MenuItem"
        }
    },
    {
        "text": "Default is null.",
        "labels": [
            [
                0,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 21834,
            "doc_name": "javax.swing.JMenu.menuEvent"
        }
    },
    {
        "text": "A class name pattern can also be empty or the single character \"*\", both of which grant access to any class.",
        "labels": [
            [
                0,
                20,
                "EQ-1"
            ],
            [
                33,
                38,
                "EQ-2"
            ],
            [
                42,
                66,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 3177,
            "doc_name": "javax.management.MBeanPermission"
        }
    },
    {
        "text": "Return the union of the visual bounds of all the components.",
        "labels": [
            [
                7,
                59,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 30583,
            "doc_name": "getVisualBounds()"
        }
    },
    {
        "text": "A key k is reinserted into a map m if m.put(k, v) is invoked when m.containsKey(k) would return true immediately prior to the invocation.)",
        "labels": [
            [
                66,
                82,
                "Returns-1"
            ],
            [
                96,
                100,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 2419,
            "doc_name": "java.util.LinkedHashMap"
        }
    },
    {
        "text": "* The default number of visible rows is 4.",
        "labels": [
            [
                2,
                36,
                "EQ-1"
            ],
            [
                40,
                41,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 9031,
            "doc_name": "java.awt.List.DEFAULT_VISIBLE_ROWS"
        }
    },
    {
        "text": "If returnType is null.",
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65833,
            "doc_name": "javax.xml.xpath.XPathExpression.evaluate(java.lang.Object,javax.xml.namespace.QName).NullPointerException"
        }
    },
    {
        "text": "Returns a copy of this LocalTime with the time truncated.",
        "labels": [
            [
                8,
                56,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37058,
            "doc_name": "truncatedTo(TemporalUnit unit)"
        }
    },
    {
        "text": "If the prefix is \"GMT\", \"UTC\", or \"UT\" a ZoneId with the prefix and the non-zero offset is returned.",
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                22,
                "EQ-2"
            ],
            [
                24,
                29,
                "EQ-2"
            ],
            [
                34,
                38,
                "EQ-2"
            ],
            [
                68,
                87,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37514,
            "doc_name": "ofOffset(String prefix, ZoneOffset offset)"
        }
    },
    {
        "text": "This instance implementing this interface is an MXBean that can be obtained by calling the ManagementFactory#getMemoryMXBean method or from the platform method.",
        "labels": [
            [
                0,
                13,
                "ReturnsBy-1"
            ],
            [
                87,
                131,
                "ReturnsBy-2"
            ],
            [
                140,
                159,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 889,
            "doc_name": "java.lang.management.MemoryMXBean"
        }
    },
    {
        "text": "If the method is called in a headless environment, then the returned BufferedImage will be compatible with the source image.",
        "labels": [
            [
                69,
                82,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 45457,
            "doc_name": "createCompatibleTranslucentImage(int width, int height)"
        }
    },
    {
        "text": "It is only present when the decimal fraction of a second is not zero.",
        "labels": [
            [
                24,
                56,
                "NEQ-1"
            ],
            [
                64,
                68,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 34655,
            "doc_name": "toString()"
        }
    },
    {
        "text": "If the startTimeInstant parameter is null.",
        "labels": [
            [
                3,
                33,
                "EQ-1"
            ],
            [
                37,
                41,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65535,
            "doc_name": "javax.xml.datatype.Duration.normalizeWith(java.util.Calendar).NullPointerException"
        }
    },
    {
        "text": "true if t represents the result of a local drag-n-drop operation.",
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 50714,
            "doc_name": "java.awt.dnd.DropTargetContext.createTransferableProxy(java.awt.datatransfer.Transferable,boolean).<P>local"
        }
    },
    {
        "text": "It returns the set of ObjectInstance objects (containing the ObjectName and the Java Class name) for the selected MBeans.",
        "labels": [
            [
                0,
                2,
                "Returns-1"
            ],
            [
                11,
                44,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 40861,
            "doc_name": "queryMBeans(ObjectName name, QueryExp query)"
        }
    },
    {
        "text": "Returns the file used to create this exception.",
        "labels": [
            [
                8,
                46,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 34735,
            "doc_name": "getFile()"
        }
    },
    {
        "text": "if the specified key is null and this map uses natural ordering, or its comparator does not permit null keys",
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63676,
            "doc_name": "java.util.TreeMap.higherEntry(K).NullPointerException"
        }
    },
    {
        "text": "if mimeType is null.",
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 64660,
            "doc_name": "javax.script.ScriptEngineManager.getEngineByMimeType(java.lang.String).NullPointerException"
        }
    },
    {
        "text": "This method returns the range of the field in the ISO-8601 calendar system.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                20,
                74,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 37243,
            "doc_name": "range()"
        }
    },
    {
        "text": "The preferred width is the sum of the preferred widths of each column (plus inter-cell spacing).",
        "labels": [
            [
                0,
                19,
                "EQ-1"
            ],
            [
                23,
                95,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 44591,
            "doc_name": "getPreferredSize(JComponent c)"
        }
    },
    {
        "text": "if any of the parameters is null.",
        "labels": [
            [
                3,
                24,
                "EQ-1"
            ],
            [
                28,
                32,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 64616,
            "doc_name": "javax.script.AbstractScriptEngine.eval(java.lang.String).NullPointerException"
        }
    },
    {
        "text": "The constructor of the MBean has thrown an exception",
        "labels": [
            [
                0,
                28,
                "Throws-1"
            ],
            [
                40,
                52,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 64028,
            "doc_name": "javax.management.MBeanServerConnection.createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object[],java.lang.String[]).javax.management.MBeanException"
        }
    },
    {
        "text": "Returns the name of the parameter described by this OpenMBeanParameterInfo instance.",
        "labels": [
            [
                8,
                33,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 41124,
            "doc_name": "getName()"
        }
    },
    {
        "text": "This method is equivalent to createMBean(className,.",
        "labels": [
            [
                0,
                11,
                "SameUsage-1"
            ],
            [
                29,
                50,
                "SameUsage-2"
            ]
        ],
        "meta": {
            "doc_index": 40857,
            "doc_name": "createMBean(String className, ObjectName name, ObjectName loaderName)"
        }
    },
    {
        "text": "Computes and returns an arbitrary region of the RenderedImage.",
        "labels": [
            [
                21,
                62,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 31083,
            "doc_name": "getData(Rectangle rect)"
        }
    },
    {
        "text": "Returns the java.text.DecimalFormat object the JFormattedTextField uses to parse and format numbers.",
        "labels": [
            [
                8,
                42,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 43705,
            "doc_name": "getFormat()"
        }
    },
    {
        "text": "Returns a list of one or more XPathType objects.",
        "labels": [
            [
                8,
                47,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 48398,
            "doc_name": "getXPathList()"
        }
    },
    {
        "text": "Removes and returns a key-value mapping associated with the greatest key in this map, or null if the map is empty.",
        "labels": [
            [
                20,
                84,
                "Returned"
            ],
            [
                89,
                93,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39067,
            "doc_name": "pollLastEntry()"
        }
    },
    {
        "text": "Returns the issuer criterion as an X500Principal.",
        "labels": [
            [
                8,
                28,
                "Returned"
            ],
            [
                35,
                48,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 35380,
            "doc_name": "getIssuer()"
        }
    },
    {
        "text": "If the returned attribute set does not include an instance of a particular attribute X or if null is returned, the printer must consult the job's attribute set to obtain the value for attribute X, and if not found there, the printer must use an implementation-dependent default value.",
        "labels": [
            [
                93,
                97,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42161,
            "doc_name": "getAttributes()"
        }
    },
    {
        "text": "The removeNodeSpi, keysSpi, childrenNamesSpi, syncSpi and flushSpi methods are specified to throw BackingStoreException, and the implementation is required to throw this checked exception if it is unable to perform the operation.",
        "labels": [
            [
                0,
                74,
                "Throws-1"
            ],
            [
                98,
                119,
                "Throws-2"
            ],
            [
                125,
                143,
                "Throws-1"
            ],
            [
                165,
                187,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 2491,
            "doc_name": "java.util.prefs.AbstractPreferences"
        }
    },
    {
        "text": "If the model is empty, the width is the fixedCellWidth, if greater than 0, or a hard-coded value of 256.",
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                16,
                21,
                "EQ-2"
            ],
            [
                23,
                32,
                "EQ-1"
            ],
            [
                36,
                54,
                "EQ-2"
            ],
            [
                72,
                73,
                "GT-2"
            ],
            [
                78,
                103,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 43440,
            "doc_name": "getPreferredScrollableViewportSize()"
        }
    },
    {
        "text": "The argument should be the name of the class.",
        "labels": [
            [
                0,
                12,
                "EQ-1"
            ],
            [
                23,
                44,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 664,
            "doc_name": "java.io.NotSerializableException"
        }
    },
    {
        "text": "Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list.",
        "labels": [
            [
                8,
                23,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40201,
            "doc_name": "listIterator(int index)"
        }
    },
    {
        "text": "Retrieves the guarded object, or throws an exception if access to the guarded object is denied by the guard.",
        "labels": [
            [
                10,
                28,
                "Returned"
            ],
            [
                40,
                52,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 35443,
            "doc_name": "getObject()"
        }
    },
    {
        "text": "Return the controlFlag (either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL) for this LoginModule.",
        "labels": [
            [
                7,
                22,
                "Returned"
            ],
            [
                31,
                39,
                "EQ-2"
            ],
            [
                41,
                50,
                "EQ-2"
            ],
            [
                52,
                62,
                "EQ-2"
            ],
            [
                67,
                75,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 42342,
            "doc_name": "getControlFlag()"
        }
    },
    {
        "text": "If all of them return null, a tree consisting of a single root node will be returned.",
        "labels": [
            [
                3,
                14,
                "Returns-1"
            ],
            [
                22,
                26,
                "Returns-2"
            ],
            [
                28,
                67,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40460,
            "doc_name": "getStandardTree()"
        }
    },
    {
        "text": "the list for which an unmodifiable view is to be returned.",
        "labels": [
            [
                0,
                39,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 54660,
            "doc_name": "java.util.Collections.unmodifiableList(java.util.List<? extends T>).<P>list"
        }
    },
    {
        "text": "The offset argument must be greater than or equal to 0, and less than or equal to the {@linkplain #length() length} of this sequence.",
        "labels": [
            [
                0,
                19,
                "GE-1"
            ],
            [
                53,
                54,
                "GE-2"
            ],
            [
                82,
                132,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 32055,
            "doc_name": "insert(int offset, double d)"
        }
    },
    {
        "text": "Returns an empty sorted set (immutable).",
        "labels": [
            [
                8,
                27,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37862,
            "doc_name": "emptySortedSet()"
        }
    },
    {
        "text": "if the specified length is less than 1, or if the specified spacing is less than 0",
        "labels": [
            [
                3,
                23,
                "LT-1"
            ],
            [
                37,
                38,
                "LT-2"
            ],
            [
                46,
                67,
                "LT-1"
            ],
            [
                81,
                82,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 64932,
            "doc_name": "javax.swing.BorderFactory.createDashedBorder(java.awt.Paint,float,float).IllegalArgumentException"
        }
    },
    {
        "text": "Returns a resource bundle using the specified base name, the default locale and the specified control.",
        "labels": [
            [
                8,
                25,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39278,
            "doc_name": "getBundle(String baseName, Control control)"
        }
    },
    {
        "text": "If the length of the converted value is less than the width then the output will be padded by ' ' ('\\u0020') until the total number of characters equals the width.",
        "labels": [
            [
                3,
                36,
                "LT-1"
            ],
            [
                50,
                59,
                "LT-2"
            ],
            [
                115,
                145,
                "EQ-1"
            ],
            [
                153,
                162,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 2300,
            "doc_name": "java.util.Formatter"
        }
    },
    {
        "text": "if the interfaces array argument or any of its elements are null, or if the invocation handler, h, is null",
        "labels": [
            [
                3,
                55,
                "EQ-1"
            ],
            [
                60,
                64,
                "EQ-2"
            ],
            [
                96,
                97,
                "EQ-1"
            ],
            [
                102,
                106,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 60440,
            "doc_name": "java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class<?>[],java.lang.reflect.InvocationHandler).NullPointerException"
        }
    },
    {
        "text": "If header-names is empty then the colon separator will not be present.",
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                24,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 33820,
            "doc_name": "getActions()"
        }
    },
    {
        "text": "This method may return null if the specified client info property has not been set and does not have a default value.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                23,
                27,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 35848,
            "doc_name": "getClientInfo(String name)"
        }
    },
    {
        "text": "If this is a generic element, a prototypical type is returned.",
        "labels": [
            [
                30,
                49,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40589,
            "doc_name": "asType()"
        }
    },
    {
        "text": "The non-null string name to parse.",
        "labels": [
            [
                13,
                24,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 56578,
            "doc_name": "javax.naming.NameParser.parse(java.lang.String).<P>name"
        }
    },
    {
        "text": "This operation may return an empty string since the TypeCode of the value being manipulated may not contain the names of members.",
        "labels": [
            [
                0,
                14,
                "Returns-1"
            ],
            [
                26,
                41,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 49920,
            "doc_name": "current_member_name()"
        }
    },
    {
        "text": "Returns a Spliterator covering the specified range of the specified array.",
        "labels": [
            [
                8,
                73,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37596,
            "doc_name": "spliterator(T[] array, int startInclusive, int endExclusive)"
        }
    },
    {
        "text": "* If the length of a byte array to be sorted is greater than this * constant, counting sort is used in preference to insertion sort.",
        "labels": [
            [
                5,
                44,
                "GT-1"
            ],
            [
                61,
                76,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 16339,
            "doc_name": "java.util.DualPivotQuicksort.COUNTING_SORT_THRESHOLD_FOR_BYTE"
        }
    },
    {
        "text": "Might return null in exceptional cases.",
        "labels": [
            [
                13,
                17,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 30870,
            "doc_name": "getLocale()"
        }
    },
    {
        "text": "None of the names may be null.",
        "labels": [
            [
                8,
                17,
                "NEQ-1"
            ],
            [
                25,
                29,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 41605,
            "doc_name": "composeName(Name name, Name prefix)"
        }
    },
    {
        "text": "true if the low endpoint is to be included in the returned view",
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 55158,
            "doc_name": "java.util.NavigableSet.tailSet(E,boolean).<P>inclusive"
        }
    },
    {
        "text": "If the value returned is null, then no such optional information is provided.",
        "labels": [
            [
                3,
                12,
                "Returned"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 35421,
            "doc_name": "getCertificateChecking()"
        }
    },
    {
        "text": "Return log name as string representation.",
        "labels": [
            [
                7,
                15,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 35139,
            "doc_name": "toString()"
        }
    },
    {
        "text": "If fromElement and toElement are equal, the returned set is empty.)",
        "labels": [
            [
                3,
                14,
                "EQ-1"
            ],
            [
                19,
                28,
                "EQ-2"
            ],
            [
                40,
                56,
                "EQ-1"
            ],
            [
                60,
                65,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 39083,
            "doc_name": "subSet(E fromElement, E toElement)"
        }
    },
    {
        "text": "If the reader parameter is null",
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65346,
            "doc_name": "javax.xml.bind.Unmarshaller.unmarshal(javax.xml.stream.XMLEventReader).IllegalArgumentException"
        }
    },
    {
        "text": "The string takes the form \"XxY U\", where X is the X dimension, Y is the Y dimension, and U is the units name.",
        "labels": [
            [
                41,
                42,
                "EQ-1"
            ],
            [
                46,
                61,
                "EQ-2"
            ],
            [
                63,
                64,
                "EQ-1"
            ],
            [
                68,
                83,
                "EQ-2"
            ],
            [
                89,
                90,
                "EQ-1"
            ],
            [
                94,
                108,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 41949,
            "doc_name": "toString(int units, String unitsName)"
        }
    },
    {
        "text": "The array may also be null when zero elements are required.)",
        "labels": [
            [
                0,
                9,
                "CanEQ-1"
            ],
            [
                22,
                26,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 32572,
            "doc_name": "asSpreader(Class<?> arrayType, int arrayLength)"
        }
    },
    {
        "text": "If parent does not contain the specified location, then null is returned.",
        "labels": [
            [
                56,
                60,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 46732,
            "doc_name": "getDeepestComponentAt(Component parent, int x, int y)"
        }
    },
    {
        "text": "If no replacement is found, returns the lookup object itself.",
        "labels": [
            [
                36,
                60,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 31934,
            "doc_name": "lookup(Object obj)"
        }
    },
    {
        "text": "If the arguments are out of range, an IllegalArgumentException is thrown.",
        "labels": [
            [
                35,
                62,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 40410,
            "doc_name": "readTile(int imageIndex, int tileX, int tileY)"
        }
    },
    {
        "text": "If no nodes are currently viewable, or there is no model, returns null, otherwise it always returns a valid path.",
        "labels": [
            [
                66,
                70,
                "Returned"
            ],
            [
                82,
                84,
                "Returns-1"
            ],
            [
                100,
                112,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 43986,
            "doc_name": "getClosestPathForLocation(int x, int y)"
        }
    },
    {
        "text": "IPP Compatibility: The IPP boolean value is \"true\" for SUPPORTED and \"false\" for NOT_SUPPORTED.",
        "labels": [
            [
                19,
                40,
                "EQ-1"
            ],
            [
                44,
                50,
                "EQ-2"
            ],
            [
                69,
                76,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 3494,
            "doc_name": "javax.print.attribute.standard.ColorSupported"
        }
    },
    {
        "text": "If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.",
        "labels": [
            [
                104,
                113,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 37475,
            "doc_name": "with(TemporalField field, long newValue)"
        }
    },
    {
        "text": "This will throw an IllegalArgumentException if index is outside the range of tabs.",
        "labels": [
            [
                0,
                4,
                "Throws-1"
            ],
            [
                19,
                43,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 47713,
            "doc_name": "getTab(int index)"
        }
    },
    {
        "text": "Returns the current memory usage of the heap that is used for object allocation.",
        "labels": [
            [
                8,
                44,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 32886,
            "doc_name": "getHeapMemoryUsage()"
        }
    },
    {
        "text": "If there is none, the first Clip from the first Mixer with name \"SunClip\" in the list of all mixers (as returned by getMixerInfo) will be returned, or, if not found, the first Clip of the first Mixerthat can be found in the list of all mixers is returned.",
        "labels": [
            [
                18,
                53,
                "Returned"
            ],
            [
                166,
                203,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 3753,
            "doc_name": "javax.sound.sampled.AudioSystem"
        }
    },
    {
        "text": "Returns the abstract pathname of this abstract pathname's parent, or null if this pathname does not name a parent directory.",
        "labels": [
            [
                8,
                64,
                "Returned"
            ],
            [
                69,
                73,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 31860,
            "doc_name": "getParentFile()"
        }
    },
    {
        "text": "If the value has not been set, the return value will be null.",
        "labels": [
            [
                31,
                47,
                "EQ-1"
            ],
            [
                56,
                60,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 43721,
            "doc_name": "getCurrentAccessibleValue()"
        }
    },
    {
        "text": "if an endpoint index value is out of range (fromIndex < 0 || toIndex > size)",
        "labels": [
            [
                44,
                53,
                "LT-1"
            ],
            [
                56,
                57,
                "LT-2"
            ],
            [
                61,
                68,
                "GT-1"
            ],
            [
                71,
                75,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 63714,
            "doc_name": "java.util.Vector.subList(int,int).IndexOutOfBoundsException"
        }
    },
    {
        "text": "the year to create a transition for, not null",
        "labels": [
            [
                4,
                8,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 54424,
            "doc_name": "java.time.zone.ZoneOffsetTransitionRule.createTransition(int).<P>year"
        }
    },
    {
        "text": "Returns the next sibling of this node, or null if the node has no next sibling.",
        "labels": [
            [
                8,
                37,
                "Returned"
            ],
            [
                42,
                46,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40510,
            "doc_name": "getNextSibling()"
        }
    },
    {
        "text": "As the current look and feel may expect certain values to exist, altering the UIDefaults returned from this method could have unexpected results.",
        "labels": [
            [
                74,
                88,
                "ReturnsBy-1"
            ],
            [
                103,
                114,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 47962,
            "doc_name": "getLookAndFeelDefaults()"
        }
    },
    {
        "text": "if the number of bands is greater than the number of banks in this sample model.",
        "labels": [
            [
                3,
                22,
                "GT-1"
            ],
            [
                39,
                58,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 59783,
            "doc_name": "java.awt.image.BandedSampleModel.createSubsetSampleModel(int[]).RasterFormatException"
        }
    },
    {
        "text": "This must be an instance of class Severity.",
        "labels": [
            [
                0,
                4,
                "Type-1"
            ],
            [
                28,
                42,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 56672,
            "doc_name": "javax.print.attribute.standard.PrinterStateReasons.put(javax.print.attribute.standard.PrinterStateReason,javax.print.attribute.standard.Severity).<P>severity"
        }
    },
    {
        "text": "* Indicates that the caret should remain at the same * absolute position in the document regardless of any document * updates, except when the document length becomes less than * the current caret position due to removal.",
        "labels": [
            [
                143,
                158,
                "LT-1"
            ],
            [
                179,
                205,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 26704,
            "doc_name": "javax.swing.text.DefaultCaret.NEVER_UPDATE"
        }
    },
    {
        "text": "if the index is negative or greater than or equal to length().",
        "labels": [
            [
                3,
                12,
                "Negative"
            ],
            [
                50,
                61,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 60100,
            "doc_name": "java.lang.AbstractStringBuilder.deleteCharAt(int).StringIndexOutOfBoundsException"
        }
    },
    {
        "text": "Returns the object responsible for converting values from the model to strings.",
        "labels": [
            [
                8,
                18,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 46831,
            "doc_name": "getStringConverter()"
        }
    },
    {
        "text": "if size is less than 0",
        "labels": [
            [
                3,
                7,
                "LT-1"
            ],
            [
                21,
                22,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 64949,
            "doc_name": "javax.swing.GroupLayout.Group.addGap(int).IllegalArgumentException"
        }
    },
    {
        "text": "Returns a view of the portion of this map whose keys are strictly less than toKey.",
        "labels": [
            [
                8,
                41,
                "Returned"
            ],
            [
                48,
                52,
                "LT-1"
            ],
            [
                76,
                81,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 39359,
            "doc_name": "headMap(K toKey)"
        }
    },
    {
        "text": "If the associated value is not an instance of java.lang.ClassLoader, an java.lang.IllegalArgumentException is thrown.",
        "labels": [
            [
                3,
                23,
                "NotType-1"
            ],
            [
                46,
                67,
                "NotType-2"
            ],
            [
                69,
                106,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 3304,
            "doc_name": "javax.management.remote.JMXConnectorServerFactory"
        }
    },
    {
        "text": "The column index is returned as zero if x lies to the left of the layout for a left-to-right container or to the right of the layout for a right-to-left container.",
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                32,
                36,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 30848,
            "doc_name": "location(int x, int y)"
        }
    },
    {
        "text": "Returns an enumeration of all identities in this identity scope.",
        "labels": [
            [
                8,
                63,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 35457,
            "doc_name": "identities()"
        }
    },
    {
        "text": "If zero or positive, the scale is the number of digits to the right of the decimal point.",
        "labels": [
            [
                21,
                30,
                "EQ-1"
            ],
            [
                34,
                54,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 1033,
            "doc_name": "java.math.BigDecimal"
        }
    },
    {
        "text": "If the target returns a value, the filter must accept that value as its only argument.",
        "labels": [
            [
                3,
                13,
                "Returns-1"
            ],
            [
                22,
                29,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 32740,
            "doc_name": "filterReturnValue(MethodHandle target, MethodHandle filter)"
        }
    },
    {
        "text": "Returns the name of the currently active member.",
        "labels": [
            [
                8,
                47,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 49908,
            "doc_name": "member_name()"
        }
    },
    {
        "text": "Setting the position to a value that is greater than the current size is legal but does not change the size of the entity.",
        "labels": [
            [
                24,
                31,
                "GT-1"
            ],
            [
                53,
                69,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 34136,
            "doc_name": "position(long newPosition)"
        }
    },
    {
        "text": "If null is returned, the maximum size will be calculated by the component's layout manager instead (this is the preferred approach for any component with a specific layout manager installed).",
        "labels": [
            [
                3,
                7,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 44768,
            "doc_name": "getMaximumSize(JComponent c)"
        }
    },
    {
        "text": "Returns the canonical name of this BasicPermission.",
        "labels": [
            [
                8,
                50,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 35236,
            "doc_name": "getCanonicalName()"
        }
    },
    {
        "text": "if any element of valueTypes is void.class, or if pos is negative or greater than the arity of the target, or if the new method handle's type would have too many parameters",
        "labels": [
            [
                50,
                53,
                "Negative"
            ],
            [
                82,
                105,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 60306,
            "doc_name": "java.lang.invoke.MethodHandles.dropArguments(java.lang.invoke.MethodHandle,int,java.util.List<java.lang.Class<?>>).IllegalArgumentException"
        }
    },
    {
        "text": "Returns a map of visual attributes for the abstract level description of the given input method highlight, or null if no mapping is found.",
        "labels": [
            [
                8,
                34,
                "Returned"
            ],
            [
                110,
                114,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 31527,
            "doc_name": "mapInputMethodHighlight(InputMethodHighlight highlight)"
        }
    },
    {
        "text": "if bands is less than 1",
        "labels": [
            [
                3,
                8,
                "LT-1"
            ],
            [
                22,
                23,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 59856,
            "doc_name": "java.awt.image.Raster.createBandedRaster(int,int,int,int,java.awt.Point).ArrayIndexOutOfBoundsException"
        }
    },
    {
        "text": "Returns the Element that has an ID attribute with the given value.",
        "labels": [
            [
                8,
                19,
                "Returned"
            ],
            [
                32,
                44,
                "EQ-1"
            ],
            [
                50,
                65,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 50249,
            "doc_name": "getElementById(String elementId)"
        }
    },
    {
        "text": "However, a subclass must not modify it after it has been returned by getCandidateLocales.",
        "labels": [
            [
                45,
                47,
                "ReturnsBy-1"
            ],
            [
                69,
                88,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 39296,
            "doc_name": "getCandidateLocales(String baseName, Locale locale)"
        }
    },
    {
        "text": "If however the current element is the last element, or the current element is null, then null is returned.",
        "labels": [
            [
                11,
                30,
                "EQ-1"
            ],
            [
                34,
                50,
                "EQ-2"
            ],
            [
                55,
                74,
                "EQ-1"
            ],
            [
                78,
                82,
                "EQ-2"
            ],
            [
                89,
                93,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47022,
            "doc_name": "previous()"
        }
    },
    {
        "text": "Returns a new CompletableFuture that is asynchronously completed by a task running in the given executor after it runs the given action.",
        "labels": [
            [
                8,
                31,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 38022,
            "doc_name": "runAsync(Runnable runnable, Executor executor)"
        }
    },
    {
        "text": "If fromIndex and toIndex are equal, the returned List is empty.)",
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                17,
                24,
                "EQ-2"
            ],
            [
                36,
                53,
                "EQ-1"
            ],
            [
                57,
                62,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 40200,
            "doc_name": "subList(int fromIndex, int toIndex)"
        }
    },
    {
        "text": "This will return the value for the specified field.",
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                17,
                26,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 36873,
            "doc_name": "getValue(TemporalField field)"
        }
    },
    {
        "text": "The Raster that is returned is live, which means that it is updated if the image is changed.",
        "labels": [
            [
                4,
                10,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 30907,
            "doc_name": "getTile(int tileX, int tileY)"
        }
    },
    {
        "text": "If any byte cannot be read for any reason other than end of file, an IOException other than EOFException is thrown.",
        "labels": [
            [
                66,
                80,
                "Thrown"
            ],
            [
                92,
                104,
                "NotThrows-1"
            ]
        ],
        "meta": {
            "doc_index": 626,
            "doc_name": "java.io.DataInput"
        }
    },
    {
        "text": "if any parameters are null",
        "labels": [
            [
                3,
                17,
                "EQ-1"
            ],
            [
                22,
                26,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63288,
            "doc_name": "java.util.EnumSet.of(E,E,E,E,E).NullPointerException"
        }
    },
    {
        "text": "If either off or len is negative, or if off+len is greater than b.length.",
        "labels": [
            [
                10,
                13,
                "Negative"
            ],
            [
                17,
                20,
                "Negative"
            ],
            [
                40,
                47,
                "GT-1"
            ],
            [
                64,
                72,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 60177,
            "doc_name": "java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain).IndexOutOfBoundsException"
        }
    },
    {
        "text": "Returns a Callable object that, when called, runs the given privileged action and returns its result.",
        "labels": [
            [
                8,
                25,
                "Returned"
            ],
            [
                90,
                100,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 38348,
            "doc_name": "callable(final PrivilegedAction<?> action)"
        }
    },
    {
        "text": "If you call this method a third time and pass the index of Enabled in as the lastState, then null would be returned.",
        "labels": [
            [
                93,
                97,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 45777,
            "doc_name": "getNextState(RuntimeState[] states, int[] lastState, int xstate)"
        }
    },
    {
        "text": "Returns a hexadecimal string representation of the float argument.",
        "labels": [
            [
                8,
                65,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 32234,
            "doc_name": "toHexString(float f)"
        }
    },
    {
        "text": "Returns the name of this KeyName.",
        "labels": [
            [
                8,
                32,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 48370,
            "doc_name": "getName()"
        }
    },
    {
        "text": "This returns an Instant, based on this one, with the value for the specified field changed.",
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                13,
                23,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 36912,
            "doc_name": "with(TemporalField field, long newValue)"
        }
    },
    {
        "text": "Returns null if the type is not one with a corresponding element.",
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40675,
            "doc_name": "asElement(TypeMirror t)"
        }
    },
    {
        "text": "A return value of null indicates this is the root node.",
        "labels": [
            [
                2,
                14,
                "EQ-1"
            ],
            [
                18,
                22,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 47874,
            "doc_name": "getParentPath()"
        }
    },
    {
        "text": "This will never return null.",
        "labels": [
            [
                0,
                4,
                "NotReturns-1"
            ],
            [
                23,
                27,
                "NotReturns-2"
            ]
        ],
        "meta": {
            "doc_index": 45753,
            "doc_name": "getStyle(JComponent c, Region r)"
        }
    },
    {
        "text": "Returns the comparator used to order the keys in this map, or null if this map uses the {@linkplain Comparable natural ordering} of its keys.",
        "labels": [
            [
                8,
                22,
                "Returned"
            ],
            [
                62,
                66,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39357,
            "doc_name": "comparator()"
        }
    },
    {
        "text": "If index is negative or not smaller than the buffer's limit, minus one",
        "labels": [
            [
                3,
                8,
                "Negative"
            ],
            [
                41,
                59,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 60720,
            "doc_name": "java.nio.ByteBuffer.putChar(int,char).IndexOutOfBoundsException"
        }
    },
    {
        "text": "This method will return the value of the given column as a Java object.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                24,
                70,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 35948,
            "doc_name": "getObject(String columnLabel)"
        }
    },
    {
        "text": "If there is no conversion returns null.",
        "labels": [
            [
                34,
                38,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47199,
            "doc_name": "fromStyleConstants(StyleConstants key, Object value)"
        }
    },
    {
        "text": "Returns the logical bounds of the specified String in the specified FontRenderContext.",
        "labels": [
            [
                8,
                85,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 30632,
            "doc_name": "getStringBounds(String str, int beginIndex, int limit, FontRenderContext frc)"
        }
    },
    {
        "text": "Otherwise, the provider instance will be the value returned by an invocation of the getDefaultProviderInstance() method.",
        "labels": [
            [
                11,
                32,
                "ReturnsBy-1"
            ],
            [
                63,
                119,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 1431,
            "doc_name": "java.rmi.server.RMIClassLoader"
        }
    },
    {
        "text": "if the specified index is negative or not less than the current size of this track.",
        "labels": [
            [
                3,
                22,
                "Negative"
            ],
            [
                52,
                82,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 64759,
            "doc_name": "javax.sound.midi.Track.get(int).java.lang.ArrayIndexOutOfBoundsException"
        }
    },
    {
        "text": "if the target is null, or if the valueTypes array or any of its elements is null",
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ],
            [
                29,
                72,
                "EQ-1"
            ],
            [
                76,
                80,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 60307,
            "doc_name": "java.lang.invoke.MethodHandles.dropArguments(java.lang.invoke.MethodHandle,int,java.lang.Class<?>...).NullPointerException"
        }
    },
    {
        "text": "Returns a copy of this period with the specified amount of years.",
        "labels": [
            [
                8,
                64,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37218,
            "doc_name": "withYears(int years)"
        }
    },
    {
        "text": "the position to parse from, updated with length parsed and the index of any error, null if parsing whole string",
        "labels": [
            [
                83,
                87,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 53806,
            "doc_name": "java.time.format.DateTimeFormatter.parseResolved0(java.lang.CharSequence,java.text.ParsePosition).<P>position"
        }
    },
    {
        "text": "If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.",
        "labels": [
            [
                38,
                50,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 36797,
            "doc_name": "appendLocalizedOffset(TextStyle style)"
        }
    },
    {
        "text": "If the node is already flat, it is simply returned.",
        "labels": [
            [
                29,
                31,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39778,
            "doc_name": "flattenDouble(Node.OfDouble node)"
        }
    },
    {
        "text": "The result is returned in an enumeration of SearchResults.",
        "labels": [
            [
                0,
                10,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 41666,
            "doc_name": "search(Name name, String filter, SearchControls cons)"
        }
    },
    {
        "text": "the applet; may be null",
        "labels": [
            [
                0,
                10,
                "CanEQ-1"
            ],
            [
                19,
                23,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 59305,
            "doc_name": "org.omg.CORBA.ORB.init(java.applet.Applet,java.util.Properties).<P>app"
        }
    },
    {
        "text": "the XMLCryptoContext containing additional context (may be null if not applicable)",
        "labels": [
            [
                0,
                20,
                "CanEQ-1"
            ],
            [
                59,
                63,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 58641,
            "doc_name": "javax.xml.crypto.dsig.Transform.transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext).<P>context"
        }
    },
    {
        "text": "Returns a string representation of this BigDecimal without an exponent field.",
        "labels": [
            [
                8,
                16,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 33343,
            "doc_name": "toPlainString()"
        }
    },
    {
        "text": "The non-null name for which to get the context.",
        "labels": [
            [
                13,
                17,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 56529,
            "doc_name": "javax.naming.InitialContext.getURLOrDefaultInitCtx(javax.naming.Name).<P>name"
        }
    },
    {
        "text": "If getAllowsInvalid() is false, this will ask the Format to format the current text on every edit.",
        "labels": [
            [
                3,
                21,
                "Returns-1"
            ],
            [
                25,
                30,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 5338,
            "doc_name": "javax.swing.text.InternationalFormatter"
        }
    },
    {
        "text": "In this case, this method also returns null.",
        "labels": [
            [
                14,
                25,
                "Returns-1"
            ],
            [
                39,
                43,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 42336,
            "doc_name": "getPrincipal()"
        }
    },
    {
        "text": "The standard MultipleDocumentHandling values are: SINGLE_DOCUMENT.",
        "labels": [
            [
                13,
                37,
                "EQ-1"
            ],
            [
                50,
                65,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 3536,
            "doc_name": "javax.print.attribute.standard.MultipleDocumentHandling"
        }
    },
    {
        "text": "Returns the ZipEntry for the given entry name or null if not found.",
        "labels": [
            [
                8,
                20,
                "Returned"
            ],
            [
                49,
                53,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 38803,
            "doc_name": "getEntry(String name)"
        }
    },
    {
        "text": "Returns the BufferInfo for the specified root or null if one hasn't been created yet.",
        "labels": [
            [
                8,
                45,
                "Returned"
            ],
            [
                49,
                53,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42869,
            "doc_name": "getBufferInfo(Container root)"
        }
    },
    {
        "text": "If there are no non-null elements in the array, the original target is returned.)",
        "labels": [
            [
                25,
                33,
                "NotNull"
            ],
            [
                48,
                67,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 32736,
            "doc_name": "filterArguments(MethodHandle target, int pos, MethodHandle... filters)"
        }
    },
    {
        "text": "if num is negative or greater than parameterCount()",
        "labels": [
            [
                3,
                6,
                "Negative"
            ],
            [
                35,
                51,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 60342,
            "doc_name": "java.lang.invoke.MethodType.insertParameterTypes(int,java.util.List<java.lang.Class<?>>).IndexOutOfBoundsException"
        }
    },
    {
        "text": "If this method is called when it is not an overlap, this is returned.",
        "labels": [
            [
                52,
                56,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37464,
            "doc_name": "withLaterOffsetAtOverlap()"
        }
    },
    {
        "text": "If this is null, a String will be returned.",
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                15,
                "EQ-2"
            ],
            [
                17,
                25,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 46959,
            "doc_name": "stringToValue(String string)"
        }
    },
    {
        "text": "The parent of this phaser, or null if none",
        "labels": [
            [
                0,
                25,
                "Returned"
            ],
            [
                30,
                34,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 16120,
            "doc_name": "java.util.concurrent.Phaser.parent"
        }
    },
    {
        "text": "Returns a view of the portion of this set whose elements are strictly less than toElement.",
        "labels": [
            [
                8,
                41,
                "Returned"
            ],
            [
                48,
                56,
                "LT-1"
            ],
            [
                80,
                89,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 39366,
            "doc_name": "headSet(E toElement)"
        }
    },
    {
        "text": "the new DecimalStyle, not null",
        "labels": [
            [
                0,
                20,
                "NEQ-1"
            ],
            [
                26,
                30,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 53793,
            "doc_name": "java.time.format.DateTimeFormatter.withDecimalStyle(java.time.format.DecimalStyle).<P>decimalStyle"
        }
    },
    {
        "text": "An object factory should only throw an exception if it is sure that it is the only intended factory and that no other object factories should be tried.",
        "labels": [
            [
                0,
                17,
                "Throws-1"
            ],
            [
                36,
                48,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 41914,
            "doc_name": "getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment)"
        }
    },
    {
        "text": "Returns the list of client info properties that could not be set.",
        "labels": [
            [
                8,
                42,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 35991,
            "doc_name": "getFailedProperties()"
        }
    },
    {
        "text": "if tasks or any element are null",
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                28,
                32,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63215,
            "doc_name": "java.util.concurrent.ForkJoinTask.invokeAll(java.util.Collection<T>).NullPointerException"
        }
    },
    {
        "text": "This returns an OffsetDateTime, based on this one, with the date-time adjusted.",
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                13,
                30,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 37126,
            "doc_name": "with(TemporalAdjuster adjuster)"
        }
    },
    {
        "text": "Returns the type of the row elements of tabular data values described by this TabularType instance.",
        "labels": [
            [
                8,
                59,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 41168,
            "doc_name": "getRowType()"
        }
    },
    {
        "text": "The public identifer, or null if none is available.",
        "labels": [
            [
                0,
                20,
                "Returned"
            ],
            [
                25,
                29,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 59608,
            "doc_name": "org.xml.sax.HandlerBase.resolveEntity(java.lang.String,java.lang.String).<P>publicId"
        }
    },
    {
        "text": "Value is \"JMX.mbean.unregistered\".",
        "labels": [
            [
                0,
                5,
                "EQ-1"
            ],
            [
                9,
                33,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 18814,
            "doc_name": "javax.management.MBeanServerNotification.UNREGISTRATION_NOTIFICATION"
        }
    },
    {
        "text": "Returns the value to which the map previously associated the key, or null if the map contained no mapping for this key. (",
        "labels": [
            [
                8,
                17,
                "Returned"
            ],
            [
                69,
                73,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42284,
            "doc_name": "remove(Object key)"
        }
    },
    {
        "text": "This method either returns the result of a method invocation on the remote object which resides on the remote host or throws a RemoteException if the call failed or an application-level exception if the remote invocation throws an exception.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                27,
                60,
                "Returns-2"
            ],
            [
                127,
                142,
                "Thrown"
            ],
            [
                165,
                195,
                "Thrown"
            ],
            [
                199,
                220,
                "Throws-1"
            ],
            [
                228,
                240,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 35155,
            "doc_name": "invoke(Remote obj, java.lang.reflect.Method method, Object[] params, long opnum)"
        }
    },
    {
        "text": "The specified flag for each attribute will always be true, unless it has been set to false in the copy constructor or using setSpecified.",
        "labels": [
            [
                0,
                37,
                "EQ-1"
            ],
            [
                53,
                57,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 6448,
            "doc_name": "org.xml.sax.ext.Attributes2Impl"
        }
    },
    {
        "text": "if the predicate is null",
        "labels": [
            [
                3,
                16,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63441,
            "doc_name": "java.util.Optional.filter(java.util.function.Predicate<? super T>).NullPointerException"
        }
    },
    {
        "text": "If the value of key is an Insets return it, otherwise return null.",
        "labels": [
            [
                3,
                19,
                "Type-1"
            ],
            [
                26,
                32,
                "Type-2"
            ],
            [
                40,
                42,
                "Returned"
            ],
            [
                61,
                65,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47912,
            "doc_name": "getInsets(Object key)"
        }
    },
    {
        "text": "if src is null",
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                14,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 59823,
            "doc_name": "java.awt.image.ConvolveOp.filter(java.awt.image.Raster,java.awt.image.WritableRaster).NullPointerException"
        }
    },
    {
        "text": "- if category is null",
        "labels": [
            [
                5,
                13,
                "EQ-1"
            ],
            [
                17,
                21,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63352,
            "doc_name": "java.util.Locale.getDefault(java.util.Locale.Category).NullPointerException"
        }
    },
    {
        "text": "if p is null",
        "labels": [
            [
                3,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 59682,
            "doc_name": "java.awt.Container.findComponentAt(java.awt.Point).NullPointerException"
        }
    },
    {
        "text": "Null is returned for data types where DECIMAL_DIGITS is not applicable.",
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 35898,
            "doc_name": "getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern)"
        }
    },
    {
        "text": "If the new size is negative",
        "labels": [
            [
                3,
                15,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 60936,
            "doc_name": "java.nio.channels.SeekableByteChannel.truncate(long).IllegalArgumentException"
        }
    },
    {
        "text": "The offset into the sequence to make the insertion >= 0.",
        "labels": [
            [
                37,
                50,
                "GE-1"
            ],
            [
                54,
                55,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 57917,
            "doc_name": "javax.swing.text.AbstractDocument.Content.remove(int,int).<P>where"
        }
    },
    {
        "text": "If this is non-null choices presented to the user can be better validated against those supported by the services.",
        "labels": [
            [
                20,
                27,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 42158,
            "doc_name": "printDialog(GraphicsConfiguration gc, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, PrintRequestAttributeSet attributes)"
        }
    },
    {
        "text": "The Enumerations returned by the elements method are not fail-fast.",
        "labels": [
            [
                4,
                16,
                "ReturnsBy-1"
            ],
            [
                29,
                48,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 2901,
            "doc_name": "java.util.Vector"
        }
    },
    {
        "text": "If obj variable is null, a new array is allocated.",
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 51104,
            "doc_name": "java.awt.image.ComponentColorModel.getDataElements(int[],int,java.lang.Object).<P>obj"
        }
    },
    {
        "text": "The array must be non-null and non-empty.",
        "labels": [
            [
                0,
                9,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 42158,
            "doc_name": "printDialog(GraphicsConfiguration gc, int x, int y, PrintService[] services, PrintService defaultService, DocFlavor flavor, PrintRequestAttributeSet attributes)"
        }
    },
    {
        "text": "if the result of the reduction is null",
        "labels": [
            [
                3,
                30,
                "EQ-1"
            ],
            [
                34,
                38,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63649,
            "doc_name": "java.util.stream.Stream.reduce(java.util.function.BinaryOperator<T>).NullPointerException"
        }
    },
    {
        "text": "The target handler (can be null)",
        "labels": [
            [
                0,
                18,
                "CanEQ-1"
            ],
            [
                27,
                31,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 55134,
            "doc_name": "java.util.logging.XMLFormatter.getTail(java.util.logging.Handler).<P>h"
        }
    },
    {
        "text": "Returns a list of methods in elements.",
        "labels": [
            [
                8,
                37,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40657,
            "doc_name": "methodsIn(Iterable<? extends Element> elements)"
        }
    },
    {
        "text": "The fully qualified host name of the server to authenticate to, or null if the server is not bound to any specific host name.",
        "labels": [
            [
                0,
                43,
                "Returned"
            ],
            [
                67,
                71,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 56813,
            "doc_name": "javax.security.sasl.SaslServerFactory.createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,?>,javax.security.auth.callback.CallbackHandler).<P>serverName"
        }
    },
    {
        "text": "Returns the value of the specified request header.",
        "labels": [
            [
                8,
                49,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 49085,
            "doc_name": "getRequestHeader(String name)"
        }
    },
    {
        "text": "If the value of the default \"AuditoryCues.actionMap\" is null and the value of the default \"AuditoryCues.cueList\" is null, an empty ActionMapUIResource is created.",
        "labels": [
            [
                3,
                52,
                "EQ-1"
            ],
            [
                56,
                60,
                "EQ-2"
            ],
            [
                65,
                112,
                "EQ-1"
            ],
            [
                116,
                120,
                "EQ-2"
            ],
            [
                122,
                150,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 44353,
            "doc_name": "getAudioActionMap()"
        }
    },
    {
        "text": "the local date, not null",
        "labels": [
            [
                0,
                14,
                "NEQ-1"
            ],
            [
                20,
                24,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 54454,
            "doc_name": "java.time.ZonedDateTime.of(java.time.LocalDate,java.time.LocalTime,java.time.ZoneId).<P>date"
        }
    },
    {
        "text": "If the specified comparator is null, then the returned comparator considers all non-null values to be equal.",
        "labels": [
            [
                3,
                27,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 37922,
            "doc_name": "nullsLast(Comparator<? super T> comparator)"
        }
    },
    {
        "text": "The non-null string to be unescaped.",
        "labels": [
            [
                13,
                19,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 56561,
            "doc_name": "javax.naming.ldap.Rdn.unescapeValue(java.lang.String).<P>val"
        }
    },
    {
        "text": "the filter expression to use for the search; may not be null",
        "labels": [
            [
                0,
                21,
                "CanNEQ-1"
            ],
            [
                56,
                60,
                "CanNEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 56518,
            "doc_name": "javax.naming.directory.DirContext.search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls).<P>filter"
        }
    },
    {
        "text": "Returns a view of the portion of this set whose elements are greater than or equal to fromElement.",
        "labels": [
            [
                8,
                41,
                "Returned"
            ],
            [
                48,
                56,
                "GE-1"
            ],
            [
                86,
                97,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 39367,
            "doc_name": "tailSet(E fromElement)"
        }
    },
    {
        "text": "if glyphIndex is less than 0 or greater than the number of glyphs in this GlyphVector",
        "labels": [
            [
                3,
                13,
                "LT-1"
            ],
            [
                27,
                28,
                "LT-2"
            ],
            [
                45,
                85,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 59722,
            "doc_name": "java.awt.font.GlyphVector.getGlyphPosition(int).IndexOutOfBoundsException"
        }
    },
    {
        "text": "It may not be null.",
        "labels": [
            [
                0,
                2,
                "CanNEQ-1"
            ],
            [
                14,
                18,
                "CanNEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 57638,
            "doc_name": "javax.swing.plaf.nimbus.NimbusDefaults.getStyle(javax.swing.JComponent,javax.swing.plaf.synth.Region).<P>comp"
        }
    },
    {
        "text": "This method will return null if the stream has been closed.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                24,
                28,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 31890,
            "doc_name": "getEncoding()"
        }
    },
    {
        "text": "undecorated will be true if the dialog is * undecorated, otherwise it will be false. * *",
        "labels": [
            [
                0,
                11,
                "EQ-1"
            ],
            [
                20,
                24,
                "EQ-2"
            ],
            [
                67,
                69,
                "EQ-1"
            ],
            [
                78,
                83,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 7164,
            "doc_name": "java.awt.Dialog.undecorated"
        }
    },
    {
        "text": "If the values are not a valid representation of a Duration: if all of the fields (year, month) are null or if any of the fields is negative.",
        "labels": [
            [
                63,
                94,
                "EQ-1"
            ],
            [
                99,
                103,
                "EQ-2"
            ],
            [
                110,
                127,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 65515,
            "doc_name": "javax.xml.datatype.DatatypeFactory.newDurationYearMonth(boolean,java.math.BigInteger,java.math.BigInteger).IllegalArgumentException"
        }
    },
    {
        "text": "An object of class Character contains a single field whose type is char.",
        "labels": [
            [
                38,
                52,
                "Type-1"
            ],
            [
                67,
                71,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 747,
            "doc_name": "java.lang.Character"
        }
    },
    {
        "text": "if beginIndex is negative, or greater than or equal to the number of elements.",
        "labels": [
            [
                3,
                13,
                "Negative"
            ],
            [
                55,
                77,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 61318,
            "doc_name": "java.nio.file.Path.subpath(int,int).IllegalArgumentException"
        }
    },
    {
        "text": "Returns a lowercase version of the given string.",
        "labels": [
            [
                8,
                47,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42135,
            "doc_name": "toUnicodeLowerCase(String s)"
        }
    },
    {
        "text": "Component to get the first ancestor of, which is not a JLayer instance.",
        "labels": [
            [
                0,
                38,
                "NotType-1"
            ],
            [
                55,
                61,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 57866,
            "doc_name": "javax.swing.SwingUtilities.getUnwrappedParent(java.awt.Component).<P>component"
        }
    },
    {
        "text": "If the value of the field is negative then an exception is thrown during formatting.",
        "labels": [
            [
                3,
                25,
                "Negative"
            ],
            [
                43,
                55,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 36784,
            "doc_name": "appendValue(TemporalField field, int width)"
        }
    },
    {
        "text": "The method ensures that the file is closed when all bytes have been written (or an I/O error or other runtime exception is thrown).",
        "labels": [
            [
                80,
                92,
                "Thrown"
            ],
            [
                96,
                119,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 34714,
            "doc_name": "write(Path path, byte[] bytes, OpenOption... options)"
        }
    },
    {
        "text": "On those platforms, this method will return null.",
        "labels": [
            [
                20,
                31,
                "Returns-1"
            ],
            [
                44,
                48,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 31511,
            "doc_name": "getSystemSelection()"
        }
    },
    {
        "text": "if xmlStructure is null",
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                23,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65403,
            "doc_name": "javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.unmarshalKeyInfo(javax.xml.crypto.XMLStructure).NullPointerException"
        }
    },
    {
        "text": "Return a homogeneous collection of PrivateCredentialPermissions in a PermissionCollection.",
        "labels": [
            [
                7,
                89,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42362,
            "doc_name": "newPermissionCollection()"
        }
    },
    {
        "text": "Returns a view of the portion of this map whose keys are greater than or equal to fromKey.",
        "labels": [
            [
                8,
                41,
                "Returned"
            ],
            [
                48,
                52,
                "GE-1"
            ],
            [
                82,
                89,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 39360,
            "doc_name": "tailMap(K fromKey)"
        }
    },
    {
        "text": "GridBagConstraints#fill Used when the component's display area is larger than the component's requested size to determine whether (and how) to resize the component.",
        "labels": [
            [
                34,
                62,
                "GT-1"
            ],
            [
                78,
                108,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 273,
            "doc_name": "java.awt.GridBagLayout"
        }
    },
    {
        "text": "the non-null string to insert",
        "labels": [
            [
                13,
                19,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 58257,
            "doc_name": "javax.swing.text.StringContent.insertString(int,java.lang.String).<P>str"
        }
    },
    {
        "text": "Returns the hit for the next caret to the right (bottom); if no such hit, returns null.",
        "labels": [
            [
                8,
                56,
                "Returned"
            ],
            [
                82,
                86,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 30554,
            "doc_name": "getNextRightHit(int offset)"
        }
    },
    {
        "text": "If there is no such node, this returns null.",
        "labels": [
            [
                26,
                30,
                "Returns-1"
            ],
            [
                39,
                43,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 50350,
            "doc_name": "getNextSibling()"
        }
    },
    {
        "text": "Returns the color used for tiling the border or null if a tile icon is being used.",
        "labels": [
            [
                8,
                17,
                "Returned"
            ],
            [
                48,
                52,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42798,
            "doc_name": "getMatteColor()"
        }
    },
    {
        "text": "if the specified thiz is null or the specified Object is does not represent a scripting object.",
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 64632,
            "doc_name": "javax.script.Invocable.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object...).IllegalArgumentException"
        }
    },
    {
        "text": "Returns a Collection view of the values contained in this map.",
        "labels": [
            [
                8,
                39,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40215,
            "doc_name": "values()"
        }
    },
    {
        "text": "if index is negative or greater than length(), or offset or len are negative, or (offset+len) is greater than str.length.",
        "labels": [
            [
                3,
                8,
                "Negative"
            ],
            [
                37,
                45,
                "GT-2"
            ],
            [
                50,
                56,
                "Negative"
            ],
            [
                60,
                63,
                "Negative"
            ],
            [
                81,
                93,
                "GT-1"
            ],
            [
                110,
                120,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 60105,
            "doc_name": "java.lang.AbstractStringBuilder.insert(int,char[],int,int).StringIndexOutOfBoundsException"
        }
    },
    {
        "text": "If such an error is thrown then subsequent invocations of the iterator will make a best effort to locate and instantiate the next available provider, but in general such recovery cannot be guaranteed.",
        "labels": [
            [
                8,
                16,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 39348,
            "doc_name": "iterator()"
        }
    },
    {
        "text": "if pos is less than 1 or if pos is greater than the number of characters in the SerialClob or if pos + length is greater than the number of characters in the SerialClob;",
        "labels": [
            [
                3,
                6,
                "LT-1"
            ],
            [
                20,
                21,
                "LT-2"
            ],
            [
                28,
                31,
                "GT-1"
            ],
            [
                48,
                90,
                "GT-2"
            ],
            [
                97,
                109,
                "GT-1"
            ],
            [
                126,
                168,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 64881,
            "doc_name": "javax.sql.rowset.serial.SerialClob.getCharacterStream(long,long).java.sql.SQLException"
        }
    },
    {
        "text": "If the system identifier was not specified, this is null.",
        "labels": [
            [
                44,
                48,
                "EQ-1"
            ],
            [
                52,
                56,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 50370,
            "doc_name": "getSystemId()"
        }
    },
    {
        "text": "The value returned by this method is equal to the value that would be returned by Arrays.asList(a).toString(), unless a is null, in which case \"null\" is returned.",
        "labels": [
            [
                0,
                9,
                "ReturnsBy-1"
            ],
            [
                22,
                33,
                "ReturnsBy-2"
            ],
            [
                82,
                109,
                "EQ-2"
            ],
            [
                118,
                119,
                "EQ-1"
            ],
            [
                123,
                127,
                "EQ-2"
            ],
            [
                143,
                149,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37593,
            "doc_name": "toString(Object[] a)"
        }
    },
    {
        "text": "If the value of key for the given Locale is an Insets return it, otherwise return null.",
        "labels": [
            [
                3,
                40,
                "Type-1"
            ],
            [
                47,
                53,
                "Type-2"
            ],
            [
                61,
                63,
                "Returned"
            ],
            [
                82,
                86,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47913,
            "doc_name": "getInsets(Object key, Locale l)"
        }
    },
    {
        "text": "If the resulting OffsetDateTime is invalid, an exception is thrown.",
        "labels": [
            [
                44,
                56,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 37131,
            "doc_name": "withDayOfYear(int dayOfYear)"
        }
    },
    {
        "text": "Removes and returns a key-value mapping associated with the least key in this map, or null if the map is empty.",
        "labels": [
            [
                20,
                31,
                "Returned"
            ],
            [
                86,
                90,
                "Returned"
            ],
            [
                94,
                101,
                "EQ-1"
            ],
            [
                105,
                110,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 39066,
            "doc_name": "pollFirstEntry()"
        }
    },
    {
        "text": "The getPrintData() method returns an instance of the representation class whose name is given by getDocFlavor().getRepresentationClassName(), and the return value can be cast from class Object to that representation class.",
        "labels": [
            [
                0,
                25,
                "Returns-1"
            ],
            [
                34,
                73,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 42103,
            "doc_name": "getPrintData()"
        }
    },
    {
        "text": "If the values are not a valid representation of a Duration: if any of the fields is negative.",
        "labels": [
            [
                63,
                80,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 65505,
            "doc_name": "javax.xml.datatype.DatatypeFactory.newDuration(boolean,int,int,int,int,int,int).IllegalArgumentException"
        }
    },
    {
        "text": "This method returns a negative value if and only if this BigInteger is non-negative.)",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                20,
                36,
                "Returns-2"
            ],
            [
                52,
                67,
                "Nonnegative"
            ]
        ],
        "meta": {
            "doc_index": 33439,
            "doc_name": "not()"
        }
    },
    {
        "text": "Otherwise, a string equal to \"false\" is returned.",
        "labels": [
            [
                11,
                19,
                "Returned"
            ],
            [
                29,
                36,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 32070,
            "doc_name": "toString()"
        }
    },
    {
        "text": "If the count of letters is less than four (but not two), then the sign is only output for negative years as per SignStyle#NORMAL.",
        "labels": [
            [
                3,
                23,
                "LT-1"
            ],
            [
                37,
                41,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 1793,
            "doc_name": "java.time.format.DateTimeFormatter"
        }
    },
    {
        "text": "If found, it returns the invalidity date in the extension; otherwise null.",
        "labels": [
            [
                10,
                12,
                "Returns-1"
            ],
            [
                21,
                40,
                "Returns-2"
            ],
            [
                69,
                73,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 35267,
            "doc_name": "getInvalidityDate()"
        }
    },
    {
        "text": "This returns a temporal object of the same observable type as the input with the year and month changed to be the same as this.",
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                13,
                30,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 37380,
            "doc_name": "adjustInto(Temporal temporal)"
        }
    },
    {
        "text": "if r is non-positive, or midpoints.length !",
        "labels": [
            [
                3,
                4,
                "Nonpositive"
            ]
        ],
        "meta": {
            "doc_index": 65043,
            "doc_name": "javax.swing.plaf.nimbus.AbstractRegionPainter.decodeRadialGradient(float,float,float,float[],java.awt.Color[]).IllegalArgumentException"
        }
    },
    {
        "text": "the prefix of this attribute, may not be null",
        "labels": [
            [
                0,
                28,
                "CanNEQ-1"
            ],
            [
                41,
                45,
                "CanNEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 58936,
            "doc_name": "javax.xml.stream.XMLEventFactory.createAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String).<P>prefix"
        }
    },
    {
        "text": "We go further and preserve pool invariants even in the face of * errors such as OutOfMemoryError, that might be thrown while * trying to create threads.",
        "labels": [
            [
                80,
                96,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 16267,
            "doc_name": "java.util.concurrent.ThreadPoolExecutor.threadFactory"
        }
    },
    {
        "text": "if style is neither full nor short",
        "labels": [
            [
                3,
                8,
                "NEQ-1"
            ],
            [
                20,
                24,
                "NEQ-2"
            ],
            [
                29,
                34,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 62541,
            "doc_name": "java.time.format.DateTimeFormatterBuilder.appendLocalizedOffset(java.time.format.TextStyle).IllegalArgumentException"
        }
    },
    {
        "text": "The first node returned by the enumeration's nextElement() method is the leftmost leaf.",
        "labels": [
            [
                0,
                14,
                "ReturnsBy-1"
            ],
            [
                27,
                65,
                "ReturnsBy-2"
            ],
            [
                69,
                86,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 47800,
            "doc_name": "depthFirstEnumeration()"
        }
    },
    {
        "text": "Note that if the focus point specified when the radial gradient was constructed lies outside of the radius of the circle, this method will still return the original focus point even though the rendering may center the rings of color on a different point that lies inside the radius.",
        "labels": [
            [
                122,
                133,
                "Returns-1"
            ],
            [
                152,
                176,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 31356,
            "doc_name": "getFocusPoint()"
        }
    },
    {
        "text": "Specifying a name is optional; if it is omitted, name should be null.",
        "labels": [
            [
                49,
                53,
                "EQ-1"
            ],
            [
                64,
                68,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 56611,
            "doc_name": "javax.naming.spi.NamingManager.getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable<?,?>).<P>name"
        }
    },
    {
        "text": "The IllegalArgumentException might be thrown if the source Raster and the destination Raster do not have the same number of bands or if the number of arrays in the LookupTable does not meet the restrictions stated in the class comment above.",
        "labels": [
            [
                4,
                28,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 30982,
            "doc_name": "filter(Raster src, WritableRaster dst)"
        }
    },
    {
        "text": "if pos is less than 1 or if pos is greater than the number of characters in the Clob or if pos + length is greater than the number of characters in the Clob",
        "labels": [
            [
                3,
                6,
                "LT-1"
            ],
            [
                20,
                21,
                "LT-2"
            ],
            [
                28,
                31,
                "GT-1"
            ],
            [
                48,
                84,
                "GT-2"
            ],
            [
                91,
                103,
                "GT-1"
            ],
            [
                120,
                156,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 61928,
            "doc_name": "java.sql.Clob.getCharacterStream(long,long).java.sql.SQLException"
        }
    },
    {
        "text": "Obtains a clock that returns the current instant using best available system clock.",
        "labels": [
            [
                29,
                48,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 36665,
            "doc_name": "system(ZoneId zone)"
        }
    },
    {
        "text": "In cases where there is no obvious mapping of these attributes for a specific nodeType (e.g., nodeValue for an Element or attributes for a Comment ), this returns null.",
        "labels": [
            [
                150,
                154,
                "Returns-1"
            ],
            [
                163,
                167,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 6431,
            "doc_name": "org.w3c.dom.Node"
        }
    },
    {
        "text": "This implementation obtains this preference node's lock, invokes childrenNames() to get an array of the names of this node's children, and iterates over the array comparing the name of each child with the specified node name.",
        "labels": [
            [
                65,
                80,
                "Returns-1"
            ],
            [
                88,
                133,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 39111,
            "doc_name": "getChild(String nodeName)"
        }
    },
    {
        "text": "NOT_SUPPORTED_ERR: May be raised if the implementation does not support the feature \"XML\" and the language exposed through the Document does not support XML Namespaces (such as [HTML 4.01]).",
        "labels": [
            [
                0,
                17,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 66178,
            "doc_name": "org.w3c.dom.NamedNodeMap.removeNamedItemNS(java.lang.String,java.lang.String).org.w3c.dom.DOMException"
        }
    },
    {
        "text": "if ranges is null",
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63381,
            "doc_name": "java.util.Locale.LanguageRange.parse(java.lang.String,java.util.Map<java.lang.String,java.util.List<java.lang.String>>).NullPointerException"
        }
    },
    {
        "text": "If cmdarray is null, or one of the elements of cmdarray is null, or one of the elements of envp is null",
        "labels": [
            [
                3,
                11,
                "EQ-1"
            ],
            [
                15,
                19,
                "EQ-2"
            ],
            [
                24,
                55,
                "EQ-1"
            ],
            [
                59,
                63,
                "EQ-1"
            ],
            [
                68,
                95,
                "EQ-1"
            ],
            [
                99,
                103,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 60465,
            "doc_name": "java.lang.Runtime.exec(java.lang.String[],java.lang.String[],java.io.File).NullPointerException"
        }
    },
    {
        "text": "If a security manager is present, and the invoker's class loader is not null and is not the same as or an ancestor of the context class loader, then this method invokes the security manager's checkPermission method with a RuntimePermission(\"getClassLoader\") permission to verify that retrieval of the context class loader is permitted.",
        "labels": [
            [
                38,
                64,
                "NEQ-1"
            ],
            [
                72,
                76,
                "NEQ-2"
            ],
            [
                118,
                142,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 33274,
            "doc_name": "getContextClassLoader()"
        }
    },
    {
        "text": "A list of possible exceptions the operation can throw.",
        "labels": [
            [
                0,
                29,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 59377,
            "doc_name": "org.omg.CORBA.portable.Delegate.create_request(org.omg.CORBA.Object,org.omg.CORBA.Context,java.lang.String,org.omg.CORBA.NVList,org.omg.CORBA.NamedValue,org.omg.CORBA.ExceptionList,org.omg.CORBA.ContextList).<P>exclist"
        }
    },
    {
        "text": "(unchecked exception) Thrown if object is not a Class that implements interfaceName.",
        "labels": [
            [
                32,
                38,
                "NotType-1"
            ],
            [
                48,
                53,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 64572,
            "doc_name": "javax.print.attribute.AttributeSetUtilities.verifyAttributeCategory(java.lang.Object,java.lang.Class<?>).ClassCastException"
        }
    },
    {
        "text": "For formatting, if the offset value from <code>G</code><code>M</code>T is 0, {@code \"Z\"} is produced.",
        "labels": [
            [
                19,
                35,
                "EQ-1"
            ],
            [
                74,
                75,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 1755,
            "doc_name": "java.text.SimpleDateFormat"
        }
    },
    {
        "text": "If the values are not a valid representation of a Duration: if all the fields (years, months, ...) are null or if any of the fields is negative.",
        "labels": [
            [
                63,
                77,
                "EQ-1"
            ],
            [
                103,
                107,
                "EQ-2"
            ],
            [
                114,
                131,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 65503,
            "doc_name": "javax.xml.datatype.DatatypeFactory.newDuration(boolean,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigDecimal).IllegalArgumentException"
        }
    },
    {
        "text": "i.e. isAlive() may return true for a brief period after destroyForcibly() is called.",
        "labels": [
            [
                5,
                14,
                "Returns-1"
            ],
            [
                26,
                30,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 32963,
            "doc_name": "destroyForcibly()"
        }
    },
    {
        "text": "Returns the detail message string of this throwable.",
        "labels": [
            [
                8,
                51,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 33288,
            "doc_name": "getMessage()"
        }
    },
    {
        "text": "It does this until a factory produces a non-null answer.",
        "labels": [
            [
                49,
                55,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 41894,
            "doc_name": "getStateToBind(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment, Attributes inAttrs)"
        }
    },
    {
        "text": "(unchecked exception) Thrown if reason is not an instance of class PrinterStateReason or if severity is not an instance of class Severity.",
        "labels": [
            [
                1,
                20,
                "Thrown"
            ],
            [
                32,
                38,
                "NotType-1"
            ],
            [
                61,
                85,
                "NotType-2"
            ],
            [
                92,
                100,
                "NotType-1"
            ],
            [
                123,
                137,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 64584,
            "doc_name": "javax.print.attribute.standard.PrinterStateReasons.put(javax.print.attribute.standard.PrinterStateReason,javax.print.attribute.standard.Severity).ClassCastException"
        }
    },
    {
        "text": "Returns the memory usage after the Java virtual machine most recently expended effort in recycling unused objects in this memory pool.",
        "labels": [
            [
                8,
                24,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 32895,
            "doc_name": "getCollectionUsage()"
        }
    },
    {
        "text": "The number of bands is inferred from bankIndices.length and bandOffsets.length, which must be the same.",
        "labels": [
            [
                0,
                19,
                "EQ-1"
            ],
            [
                37,
                55,
                "EQ-2"
            ],
            [
                60,
                78,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 31006,
            "doc_name": "createBandedRaster(DataBuffer dataBuffer, int w, int h, int scanlineStride, int[] bankIndices, int[] bandOffsets, Point location)"
        }
    },
    {
        "text": "the index of the column 1 is the first, 2 is the second,...",
        "labels": [
            [
                0,
                25,
                "EQ-1"
            ],
            [
                33,
                38,
                "EQ-2"
            ],
            [
                40,
                41,
                "EQ-1"
            ],
            [
                49,
                55,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 53324,
            "doc_name": "java.sql.ResultSet.getURL(int).<P>columnIndex"
        }
    },
    {
        "text": "One primary purpose for this method is to avoid creating a RadialGradientPaint where the radius is non-positive.",
        "labels": [
            [
                85,
                95,
                "Nonpositive"
            ]
        ],
        "meta": {
            "doc_index": 45325,
            "doc_name": "decodeRadialGradient(float x, float y, float r, float[] midpoints, Color[] colors)"
        }
    },
    {
        "text": "If the owner document of the DOMStructure is different than the target document of an XMLSignature, the XMLSignature#sign(XMLSignContext) method imports the node into the target document before generating the signature.",
        "labels": [
            [
                3,
                41,
                "NEQ-1"
            ],
            [
                60,
                98,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 5619,
            "doc_name": "javax.xml.crypto.dom.DOMStructure"
        }
    },
    {
        "text": "a Font object that is an instance of MultipleMaster and is based on the design axis values provided by axes.",
        "labels": [
            [
                0,
                13,
                "Type-1"
            ],
            [
                37,
                51,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 7715,
            "doc_name": "java.awt.font.MultipleMaster.deriveMMFont(float[]).<R>"
        }
    },
    {
        "text": "Returns the first child of this node, or null if the node has no children.",
        "labels": [
            [
                8,
                36,
                "Returned"
            ],
            [
                41,
                45,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 32848,
            "doc_name": "getFirstChild()"
        }
    },
    {
        "text": "Returns the (non-null) Node at the specified element index.",
        "labels": [
            [
                8,
                58,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 28881,
            "doc_name": "node(int index)"
        }
    },
    {
        "text": "if startInclusive is negative, endExclusive is less than startInclusive, or endExclusive is greater than the array size",
        "labels": [
            [
                3,
                17,
                "Negative"
            ],
            [
                31,
                43,
                "LT-1"
            ],
            [
                57,
                71,
                "LT-2"
            ],
            [
                76,
                88,
                "GT-1"
            ],
            [
                105,
                119,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 26267,
            "doc_name": "java.util.Arrays.stream(double[],int,int).ArrayIndexOutOfBoundsException"
        }
    },
    {
        "text": "The elements are returned in no particular order (unless this set is an instance of some class that provides a guarantee).",
        "labels": [
            [
                0,
                12,
                "Returned"
            ],
            [
                57,
                65,
                "Type-1"
            ],
            [
                84,
                120,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 30096,
            "doc_name": "iterator()"
        }
    },
    {
        "text": "It will only be enabled if the focused component is an instance of JFormattedTextField.",
        "labels": [
            [
                27,
                48,
                "Type-1"
            ],
            [
                67,
                86,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 4064,
            "doc_name": "javax.swing.JFormattedTextField.CancelAction"
        }
    },
    {
        "text": "If capture is true then this class saves group settings and ensures that groups are unset when backing off of a group match.",
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 2571,
            "doc_name": "java.util.regex.Pattern.GroupCurly"
        }
    },
    {
        "text": "A delegate is an instance of a class that implements this interface and provides a replacement implementation for all the methods of javax.rmi.CORBA.Stub.",
        "labels": [
            [
                0,
                10,
                "Type-1"
            ],
            [
                29,
                67,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 3619,
            "doc_name": "javax.rmi.CORBA.StubDelegate"
        }
    },
    {
        "text": "For parallel evaluation, each leaf instance of a ForEachTask will send elements to the same TerminalSink reference that is an instance of this class.",
        "labels": [
            [
                25,
                34,
                "Type-1"
            ],
            [
                47,
                60,
                "Type-2"
            ],
            [
                83,
                114,
                "Type-1"
            ],
            [
                138,
                148,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 2681,
            "doc_name": "java.util.stream.ForEachOps.ForEachOp"
        }
    },
    {
        "text": "if the specified object is not an instance of the class or interface declaring the underlying field (or a subclass or implementor thereof).",
        "labels": [
            [
                3,
                23,
                "NotType-1"
            ],
            [
                46,
                99,
                "NotType-2"
            ],
            [
                104,
                114,
                "NotType-2"
            ],
            [
                118,
                137,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 13591,
            "doc_name": "java.lang.reflect.Field.get(java.lang.Object).java.lang.IllegalArgumentException"
        }
    },
    {
        "text": "If the initial context is not an instance of LdapContext.",
        "labels": [
            [
                3,
                22,
                "NotType-1"
            ],
            [
                45,
                56,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 36018,
            "doc_name": "javax.naming.ldap.InitialLdapContext.getDefaultLdapInitCtx().NotContextException"
        }
    },
    {
        "text": "Creates a new MessageFactory object that is an instance of the specified implementation.",
        "labels": [
            [
                8,
                35,
                "Type-1"
            ],
            [
                59,
                87,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 49714,
            "doc_name": "newInstance(String protocol)"
        }
    },
    {
        "text": "Otherwise, a remote call is made as follows: If proxy is not an instance of the interface Remote, then an IllegalArgumentException is thrown.",
        "labels": [
            [
                48,
                53,
                "NotType-1"
            ],
            [
                76,
                96,
                "NotType-2"
            ],
            [
                103,
                130,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 18661,
            "doc_name": "invoke(Object proxy, Method method, Object[] args)"
        }
    },
    {
        "text": "This must be an instance of class PrinterStateReason.",
        "labels": [
            [
                0,
                4,
                "Type-1"
            ],
            [
                28,
                52,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 36839,
            "doc_name": "javax.print.attribute.standard.PrinterStateReasons.put(javax.print.attribute.standard.PrinterStateReason,javax.print.attribute.standard.Severity).<P>reason"
        }
    },
    {
        "text": "Returns the parent of this node, or null if this is the root node.",
        "labels": [
            [
                8,
                31,
                "Returned"
            ],
            [
                36,
                40,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 19265,
            "doc_name": "getParent()"
        }
    },
    {
        "text": "Since ColorModel is an abstract class, any instance is an instance of a subclass.",
        "labels": [
            [
                39,
                51,
                "Type-1"
            ],
            [
                70,
                80,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 8852,
            "doc_name": "coerceData(WritableRaster raster, boolean isAlphaPremultiplied)"
        }
    },
    {
        "text": "Concrete sub-types must also be an instance of type T_CONS.",
        "labels": [
            [
                0,
                18,
                "Type-1"
            ],
            [
                47,
                58,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 2839,
            "doc_name": "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive"
        }
    },
    {
        "text": "Creates a new SOAPFactory object that is an instance of the specified implementation, this method uses the SAAJMetaFactory to locate the implementation class and create the SOAPFactory instance.",
        "labels": [
            [
                8,
                32,
                "Type-1"
            ],
            [
                56,
                84,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 50003,
            "doc_name": "newInstance(String protocol)"
        }
    },
    {
        "text": "If the specified object is not an instance of the class or interface declaring the underlying field, the method throws an IllegalArgumentException.",
        "labels": [
            [
                3,
                23,
                "NotType-1"
            ],
            [
                50,
                99,
                "NotType-2"
            ],
            [
                101,
                111,
                "Throws-1"
            ],
            [
                122,
                146,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 13588,
            "doc_name": "get(Object obj)"
        }
    },
    {
        "text": "a Font object that is an instance of MultipleMaster and is based on the specified metric information.",
        "labels": [
            [
                0,
                13,
                "Type-1"
            ],
            [
                37,
                51,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 7722,
            "doc_name": "java.awt.font.MultipleMaster.deriveMMFont(float[],float,float,float,float).<R>"
        }
    },
    {
        "text": "If the given RMIServer is not an instance of javax.rmi.CORBA.Stub, then the method do nothing and simply returns that stub.",
        "labels": [
            [
                3,
                22,
                "NotType-1"
            ],
            [
                45,
                65,
                "NotType-2"
            ],
            [
                72,
                82,
                "Returns-1"
            ],
            [
                113,
                122,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 35281,
            "doc_name": "connectStub(RMIServer rmiServer, Map<String, ?> environment)"
        }
    },
    {
        "text": "This mirrors the behavior of getNodeForPath, but tries to take advantage of path if it is an instance of AbstractTreePath.",
        "labels": [
            [
                84,
                86,
                "Type-1"
            ],
            [
                105,
                121,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 47683,
            "doc_name": "getNodeForPath(TreePath path, boolean onlyIfVisible, boolean shouldCreate)"
        }
    },
    {
        "text": "If this list implements RandomAccess the returned list will be an instance of the subclass that implements RandomAccess.",
        "labels": [
            [
                3,
                12,
                "Type-1"
            ],
            [
                24,
                36,
                "Type-2"
            ],
            [
                37,
                54,
                "Type-1"
            ],
            [
                82,
                119,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 26105,
            "doc_name": "subList(int fromIndex, int toIndex)"
        }
    },
    {
        "text": "the first parameter is 1, the second is 2, and so on",
        "labels": [
            [
                0,
                19,
                "EQ-1"
            ],
            [
                23,
                24,
                "EQ-2"
            ],
            [
                26,
                36,
                "EQ-1"
            ],
            [
                40,
                41,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 20327,
            "doc_name": "java.sql.CallableStatement.getTimestamp(int).<P>parameterIndex"
        }
    },
    {
        "text": "If the ZoneId is not the same as the offset, then the ID is output.",
        "labels": [
            [
                3,
                13,
                "NEQ-1"
            ],
            [
                33,
                43,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 25980,
            "doc_name": "toString()"
        }
    },
    {
        "text": "a PrintJob object, or null if the user cancelled the print job.",
        "labels": [
            [
                0,
                17,
                "Returned"
            ],
            [
                22,
                26,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 10435,
            "doc_name": "java.awt.Toolkit.getPrintJob(java.awt.Frame,java.lang.String,java.util.Properties).<R>"
        }
    },
    {
        "text": "The decoded user-information component of this URI, or null if the user information is undefined",
        "labels": [
            [
                0,
                50,
                "Returned"
            ],
            [
                55,
                59,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 15121,
            "doc_name": "java.net.URI.getUserInfo().<R>"
        }
    },
    {
        "text": "If value is an instance of type it is returned, otherwise a SAXException is thrown.",
        "labels": [
            [
                3,
                8,
                "Type-1"
            ],
            [
                27,
                31,
                "Type-2"
            ],
            [
                32,
                34,
                "Returned"
            ],
            [
                60,
                72,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 44702,
            "doc_name": "checkCast(Object value, Class type)"
        }
    },
    {
        "text": "of the class, or null if not known",
        "labels": [
            [
                17,
                21,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 11898,
            "doc_name": "java.lang.ClassLoader.defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain).<P>name"
        }
    },
    {
        "text": "the default text, or null if this TextInputCallback was not instantiated with defaultText.",
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                21,
                25,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37413,
            "doc_name": "javax.security.auth.callback.TextInputCallback.getDefaultText().<R>"
        }
    },
    {
        "text": "null if the Component is null; otherwise, returns the passed-in rectangle (if non-null) or a new rectangle specifying position and size information",
        "labels": [
            [
                0,
                4,
                "Returned"
            ],
            [
                8,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ],
            [
                50,
                73,
                "Returned"
            ],
            [
                91,
                106,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 45345,
            "doc_name": "javax.swing.SwingUtilities.calculateInnerArea(javax.swing.JComponent,java.awt.Rectangle).<R>"
        }
    },
    {
        "text": "the open type of element values contained in the arrays described by this ArrayType instance; must be an instance of either SimpleType, CompositeType, TabularType or another ArrayType with a SimpleType, CompositeType or TabularType as its elementType.",
        "labels": [
            [
                0,
                31,
                "Type-1"
            ],
            [
                124,
                134,
                "Type-2"
            ],
            [
                136,
                149,
                "Type-2"
            ],
            [
                151,
                162,
                "Type-2"
            ],
            [
                166,
                250,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 34246,
            "doc_name": "javax.management.openmbean.ArrayType.getArrayType(javax.management.openmbean.OpenType<E>).<P>elementType"
        }
    },
    {
        "text": "the cause, or null if unknown",
        "labels": [
            [
                0,
                9,
                "Returned"
            ],
            [
                14,
                18,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 50727,
            "doc_name": "javax.xml.transform.TransformerException.getCause().<R>"
        }
    },
    {
        "text": "if objectArgCount is negative or greater than 255 (or 254, if finalArray is true)",
        "labels": [
            [
                3,
                17,
                "Negative"
            ],
            [
                46,
                49,
                "GT-2"
            ],
            [
                54,
                57,
                "GT-2"
            ],
            [
                62,
                72,
                "EQ-1"
            ],
            [
                76,
                80,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 12966,
            "doc_name": "java.lang.invoke.MethodType.genericMethodType(int,boolean).IllegalArgumentException"
        }
    },
    {
        "text": "the (non-null) item to exchange",
        "labels": [
            [
                0,
                19,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 27661,
            "doc_name": "java.util.concurrent.Exchanger.arenaExchange(java.lang.Object,boolean,long).<P>item"
        }
    },
    {
        "text": "If the maximum size has not been set explicitly by Component#setMaximumSize(Dimension) and the LayoutManager installed on this Container is an instance of LayoutManager2, then LayoutManager2#maximumLayoutSize(Container) is used to calculate the maximum size.",
        "labels": [
            [
                91,
                136,
                "Type-1"
            ],
            [
                155,
                169,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 7157,
            "doc_name": "getMaximumSize()"
        }
    },
    {
        "text": "Verify that the given object is an instance of the given interface, which is assumed to be interface Attribute or a subinterface thereof.",
        "labels": [
            [
                12,
                28,
                "Type-1"
            ],
            [
                47,
                66,
                "Type-2"
            ],
            [
                91,
                110,
                "Type-2"
            ],
            [
                114,
                136,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 36555,
            "doc_name": "verifyAttributeValue(Object object, Class<?> interfaceName)"
        }
    },
    {
        "text": "if the return type of filter is non-void and is not the same as the pos argument of the target, or if pos is not between 0 and the target's arity, inclusive, or if the resulting method handle's type would have too many parameters",
        "labels": [
            [
                102,
                105,
                "LT-1"
            ],
            [
                121,
                122,
                "LT-2"
            ],
            [
                127,
                145,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 12873,
            "doc_name": "java.lang.invoke.MethodHandles.collectArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle).IllegalArgumentException"
        }
    },
    {
        "text": "If myPrincipalHolder is an instance of PrincipalHolder, the value stored in its value field can be accessed with myPrincipalHolder.value.",
        "labels": [
            [
                3,
                20,
                "Type-1"
            ],
            [
                39,
                54,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 6006,
            "doc_name": "org.omg.CORBA.PrincipalHolder"
        }
    },
    {
        "text": "If a DataLine is requested, and info is an instance of DataLine.Info specifying at least one fully qualified audio format, the last one will be used as the default format of the returned DataLine.",
        "labels": [
            [
                32,
                36,
                "Type-1"
            ],
            [
                55,
                68,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 38139,
            "doc_name": "getLine(Line.Info info)"
        }
    },
    {
        "text": "A value is compatible with this type if one of the following is true: the value is null; the declared name is a primitive type name (such as \"int\") and the value is an instance of the corresponding wrapper type (such as java.lang.Integer); the name of the value's class is identical to the declared name; the declared name can be loaded by the value's class loader and produces a class to which the value can be assigned.",
        "labels": [
            [
                70,
                79,
                "EQ-1"
            ],
            [
                83,
                87,
                "EQ-2"
            ],
            [
                89,
                106,
                "EQ-1"
            ],
            [
                110,
                131,
                "EQ-2"
            ],
            [
                152,
                161,
                "Type-1"
            ],
            [
                180,
                210,
                "Type-2"
            ],
            [
                240,
                269,
                "EQ-1"
            ],
            [
                286,
                303,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 34004,
            "doc_name": "getAttribute(String attrName)"
        }
    },
    {
        "text": "Unmarshals an object and returns a CORBA Object, which is an instance of the class passed as its argument.",
        "labels": [
            [
                33,
                47,
                "Returned"
            ],
            [
                73,
                105,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 52074,
            "doc_name": "read_Object(java.lang.Class clz)"
        }
    },
    {
        "text": "The default implementation of this method returns null.",
        "labels": [
            [
                0,
                41,
                "Returns-1"
            ],
            [
                50,
                54,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 44766,
            "doc_name": "getPreferredSize(JComponent c)"
        }
    },
    {
        "text": "Returns null, if no such ancestor exists -- if this node and aNode are in different trees or if aNode is null.",
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                96,
                101,
                "EQ-1"
            ],
            [
                105,
                109,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 47793,
            "doc_name": "getSharedAncestor(DefaultMutableTreeNode aNode)"
        }
    },
    {
        "text": "The new buffer's capacity will be array.length, its position will be offset, its limit will be offset + length, and its mark will be undefined.",
        "labels": [
            [
                0,
                25,
                "EQ-1"
            ],
            [
                34,
                46,
                "EQ-2"
            ],
            [
                48,
                60,
                "EQ-1"
            ],
            [
                69,
                75,
                "EQ-2"
            ],
            [
                77,
                86,
                "EQ-1"
            ],
            [
                95,
                110,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 35053,
            "doc_name": "wrap(short[] array, int offset, int length)"
        }
    },
    {
        "text": "The row index is returned as zero if y lies above the layout, and as the number of rows if y lies below the layout.",
        "labels": [
            [
                0,
                13,
                "Returned"
            ],
            [
                29,
                33,
                "EQ-2"
            ],
            [
                69,
                87,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 30848,
            "doc_name": "location(int x, int y)"
        }
    },
    {
        "text": "Always returns null.",
        "labels": [
            [
                15,
                19,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 38512,
            "doc_name": "getRawResult()"
        }
    },
    {
        "text": "If no registered ImageReader claims to be able to read the resulting stream, null is returned.",
        "labels": [
            [
                77,
                81,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40390,
            "doc_name": "read(URL input)"
        }
    },
    {
        "text": "If the name has zero components, an empty list is returned.",
        "labels": [
            [
                33,
                46,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 41748,
            "doc_name": "getRdns()"
        }
    },
    {
        "text": "Object.equals: Returns true if the argument (args[0]) is an instance of a dynamic proxy class and this invocation handler is equal to the invocation handler of that argument, and returns false otherwise.",
        "labels": [
            [
                0,
                13,
                "Returns-1"
            ],
            [
                23,
                27,
                "Returns-2"
            ],
            [
                31,
                53,
                "Type-1"
            ],
            [
                72,
                93,
                "Type-2"
            ],
            [
                98,
                121,
                "EQ-1"
            ],
            [
                134,
                173,
                "EQ-2"
            ],
            [
                187,
                192,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 18661,
            "doc_name": "invoke(Object proxy, Method method, Object[] args)"
        }
    },
    {
        "text": "It is likely that some pre-1.4 code assumes that the object returned by FocusManager.getCurrentManager is an instance of DefaultFocusManager unless set explicitly.",
        "labels": [
            [
                49,
                59,
                "ReturnsBy-1"
            ],
            [
                72,
                102,
                "ReturnsBy-2"
            ],
            [
                121,
                140,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 3926,
            "doc_name": "javax.swing.DelegatingDefaultFocusManager"
        }
    },
    {
        "text": "Returns the default non continuous layout divider, which is an instance of Canvas that fills in the background with dark gray.",
        "labels": [
            [
                8,
                49,
                "Returned"
            ],
            [
                75,
                81,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 42157,
            "doc_name": "createDefaultNonContinuousLayoutDivider()"
        }
    },
    {
        "text": "An implementation can use an empty string as its implementation name, for example for security reasons.",
        "labels": [
            [
                26,
                41,
                "EQ-1"
            ],
            [
                45,
                68,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 41480,
            "doc_name": "getVersion()"
        }
    },
    {
        "text": "If end of file is encountered before even one byte can be read, then null is returned.",
        "labels": [
            [
                69,
                73,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40579,
            "doc_name": "readLine()"
        }
    },
    {
        "text": "the enumerated list of maps, or null if the maps are not an instance of Hashtable",
        "labels": [
            [
                0,
                27,
                "Returned"
            ],
            [
                32,
                36,
                "Returned"
            ],
            [
                40,
                48,
                "NotType-1"
            ],
            [
                72,
                81,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 46441,
            "doc_name": "javax.swing.text.html.HTMLDocument.getMaps().<R>"
        }
    },
    {
        "text": "If the rule defines an exact date then the month is the month of that date.",
        "labels": [
            [
                39,
                48,
                "EQ-1"
            ],
            [
                52,
                74,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 37409,
            "doc_name": "getMonth()"
        }
    },
    {
        "text": "This is null when unspecified or when it is not known, such as when the Document was created in memory.",
        "labels": [
            [
                0,
                4,
                "EQ-1"
            ],
            [
                8,
                12,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 50251,
            "doc_name": "getXmlEncoding()"
        }
    },
    {
        "text": "When the headerRenderer is null, the JTableHeader uses its defaultRenderer.",
        "labels": [
            [
                5,
                23,
                "EQ-1"
            ],
            [
                27,
                31,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 46821,
            "doc_name": "getHeaderRenderer()"
        }
    },
    {
        "text": "Returns the jar file manifest, or null if none.",
        "labels": [
            [
                8,
                29,
                "Returned"
            ],
            [
                34,
                38,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 38800,
            "doc_name": "getManifest()"
        }
    },
    {
        "text": "(unchecked exception) Thrown if object is not an instance of interfaceName.",
        "labels": [
            [
                1,
                20,
                "Thrown"
            ],
            [
                32,
                38,
                "NotType-1"
            ],
            [
                61,
                74,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 36559,
            "doc_name": "javax.print.attribute.AttributeSetUtilities.verifyAttributeValue(java.lang.Object,java.lang.Class<?>).ClassCastException"
        }
    },
    {
        "text": "However, no string representation would be available for the DAY_OF_MONTH field, and this method would return null.",
        "labels": [
            [
                85,
                96,
                "Returns-1"
            ],
            [
                110,
                114,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 37652,
            "doc_name": "getDisplayName(int field, int style, Locale locale)"
        }
    },
    {
        "text": "The returned transmitter always implements the MidiDeviceTransmitter interface.",
        "labels": [
            [
                0,
                24,
                "Type-1"
            ],
            [
                43,
                78,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 42436,
            "doc_name": "getTransmitter()"
        }
    },
    {
        "text": "For an unnamed package, an empty name is returned.",
        "labels": [
            [
                24,
                37,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40605,
            "doc_name": "getSimpleName()"
        }
    },
    {
        "text": "This default implementation returns a new Insets object that is initialized by the getBorderInsets(Component,Insets) method.",
        "labels": [
            [
                0,
                27,
                "Returns-1"
            ],
            [
                36,
                55,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 42766,
            "doc_name": "getBorderInsets(Component c)"
        }
    },
    {
        "text": "If no clip has previously been set, or if the clip has been cleared using setClip(null), this method returns the specified Rectangle.",
        "labels": [
            [
                89,
                100,
                "Returns-1"
            ],
            [
                109,
                132,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 30798,
            "doc_name": "getClipBounds(Rectangle r)"
        }
    },
    {
        "text": "This never returns null.",
        "labels": [
            [
                0,
                4,
                "NotReturns-1"
            ],
            [
                19,
                23,
                "NotReturns-2"
            ]
        ],
        "meta": {
            "doc_index": 44088,
            "doc_name": "getLayoutStyle()"
        }
    },
    {
        "text": "If this method returns null the processor will attempt to resolve the entity using its default mechanism.",
        "labels": [
            [
                3,
                14,
                "Returns-1"
            ],
            [
                23,
                27,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 48879,
            "doc_name": "resolveEntity(String publicID, String systemID, String baseURI, String namespace)"
        }
    },
    {
        "text": "if fromKey or toKey is null",
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 27497,
            "doc_name": "java.util.concurrent.ConcurrentSkipListMap.subMap(K,K).NullPointerException"
        }
    },
    {
        "text": "the ComponentUI object that represents the complete UI for the target component; this should be an instance of one of the MultiXxxxUI classes",
        "labels": [
            [
                81,
                85,
                "Type-1"
            ],
            [
                111,
                141,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 43168,
            "doc_name": "javax.swing.plaf.multi.MultiLookAndFeel.createUIs(javax.swing.plaf.ComponentUI,java.util.Vector,javax.swing.JComponent).<P>mui"
        }
    },
    {
        "text": "Null is returned for data types where the column size is not applicable.",
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 35872,
            "doc_name": "getProcedureColumns(String catalog, String schemaPattern, String procedureNamePattern, String columnNamePattern)"
        }
    },
    {
        "text": "Returns the formal type parameters of this executable in declaration order.",
        "labels": [
            [
                8,
                53,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40596,
            "doc_name": "getTypeParameters()"
        }
    },
    {
        "text": "Deprecated: Static Stubs.",
        "labels": [
            [
                12,
                24,
                "Deprecated"
            ]
        ],
        "meta": {
            "doc_index": 1445,
            "doc_name": "java.rmi.server.UnicastRemoteObject"
        }
    },
    {
        "text": "The location of the document or null if undefined or if the Document was created using DOMImplementation.createDocument.",
        "labels": [
            [
                0,
                28,
                "Returned"
            ],
            [
                32,
                36,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 50253,
            "doc_name": "getDocumentURI()"
        }
    },
    {
        "text": "The convention is to specify the class name, the permission name, and the actions in the following format: '(\"ClassName\" \"name\" \"actions\")', or '(\"ClassName\" \"name\")' if actions list is null or empty.",
        "labels": [
            [
                170,
                182,
                "EQ-1"
            ],
            [
                186,
                190,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 35566,
            "doc_name": "toString()"
        }
    },
    {
        "text": "If the UI delegate's getPreferredSize method returns a non null value then return that; otherwise defer to the component's layout manager.",
        "labels": [
            [
                3,
                44,
                "Returns-1"
            ],
            [
                53,
                69,
                "Returns-2"
            ],
            [
                82,
                86,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 43197,
            "doc_name": "getPreferredSize()"
        }
    },
    {
        "text": "Throws NullPointerException for a null edge.",
        "labels": [
            [
                7,
                27,
                "Thrown"
            ],
            [
                34,
                38,
                "EQ-1"
            ],
            [
                39,
                43,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 46712,
            "doc_name": "getConstraint(String edgeName)"
        }
    },
    {
        "text": "Returns the description text of the specified column in the table.",
        "labels": [
            [
                8,
                28,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47138,
            "doc_name": "getAccessibleColumnDescription(int c)"
        }
    },
    {
        "text": "If the classLoader argument is null, then the ContextClassLoader is used.",
        "labels": [
            [
                3,
                27,
                "EQ-1"
            ],
            [
                31,
                35,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 48869,
            "doc_name": "newFactory(String factoryId, ClassLoader classLoader)"
        }
    },
    {
        "text": "In general, the toString method returns a string that \"textually represents\" this object.",
        "labels": [
            [
                12,
                31,
                "Returns-1"
            ],
            [
                40,
                48,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 32944,
            "doc_name": "toString()"
        }
    },
    {
        "text": "This class and its views and iterators implement all of the optional methods of the Map and Iterator interfaces.",
        "labels": [
            [
                49,
                111,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 2118,
            "doc_name": "java.util.concurrent.ConcurrentSkipListMap"
        }
    },
    {
        "text": "Returns the profile that will be used to send the request.",
        "labels": [
            [
                8,
                19,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 50000,
            "doc_name": "effective_profile()"
        }
    },
    {
        "text": "If this write lock is not held when any Condition method is called then an IllegalMonitorStateException is thrown. (",
        "labels": [
            [
                72,
                103,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 38484,
            "doc_name": "newCondition()"
        }
    },
    {
        "text": "Returns a rectangle for the cell that lies at the intersection of row and column.",
        "labels": [
            [
                8,
                32,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 43809,
            "doc_name": "getCellRect(int row, int column, boolean includeSpacing)"
        }
    },
    {
        "text": "This is implemented to attempt to break on a whitespace location, and returns a fragment with the whitespace at the end.",
        "labels": [
            [
                78,
                88,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47057,
            "doc_name": "breakView(int axis, int p0, float pos, float len)"
        }
    },
    {
        "text": "If it is not, null is returned.",
        "labels": [
            [
                14,
                18,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40404,
            "doc_name": "getImageMetadata(int imageIndex, String formatName, Set<String> nodeNames)"
        }
    },
    {
        "text": "A copy of the actual GridBagConstraints object is returned.",
        "labels": [
            [
                0,
                46,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 30845,
            "doc_name": "getConstraints(Component comp)"
        }
    },
    {
        "text": "Only SEG_MOVETO, SEG_LINETO, and SEG_CLOSE point types are returned by the iterator.",
        "labels": [
            [
                5,
                54,
                "ReturnsBy-1"
            ],
            [
                71,
                83,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 31403,
            "doc_name": "getPathIterator(AffineTransform at, double flatness)"
        }
    },
    {
        "text": "For class JobPrioritySupported, the category name is \"job-priority-supported\".",
        "labels": [
            [
                32,
                49,
                "EQ-1"
            ],
            [
                53,
                77,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 42006,
            "doc_name": "getName()"
        }
    },
    {
        "text": "Returns the previous Date in the sequence, or null if the previous date is before start.",
        "labels": [
            [
                8,
                25,
                "Returned"
            ],
            [
                46,
                50,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 46668,
            "doc_name": "getPreviousValue()"
        }
    },
    {
        "text": "Subclasses should never return null; if the baseline can not be calculated return BaselineResizeBehavior.OTHER.",
        "labels": [
            [
                0,
                10,
                "NotReturns-1"
            ],
            [
                31,
                35,
                "NotReturns-2"
            ],
            [
                82,
                110,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 30179,
            "doc_name": "getBaselineResizeBehavior()"
        }
    },
    {
        "text": "If the reader does not support thumbnails, (readerSupportsThumbnails returns false), an UnsupportedOperationException will be thrown regardless of whether an input source has been set or whether the indices are in bounds.",
        "labels": [
            [
                44,
                68,
                "Returns-1"
            ],
            [
                77,
                82,
                "Returns-2"
            ],
            [
                88,
                117,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 40413,
            "doc_name": "readThumbnail(int imageIndex, int thumbnailIndex)"
        }
    },
    {
        "text": "Returns the comparator used to order the elements in this queue, or null if this queue is sorted according to the {@linkplain Comparable natural ordering} of its elements.",
        "labels": [
            [
                8,
                22,
                "Returned"
            ],
            [
                68,
                72,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39155,
            "doc_name": "comparator()"
        }
    },
    {
        "text": "Returns a Collection view of the attribute values contained in this Map.",
        "labels": [
            [
                8,
                25,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 38795,
            "doc_name": "values()"
        }
    },
    {
        "text": "If this factory cannot create an object using the arguments supplied, it should return null.",
        "labels": [
            [
                70,
                72,
                "Returns-1"
            ],
            [
                87,
                91,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 41920,
            "doc_name": "getStateToBind(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment)"
        }
    },
    {
        "text": "Classes that need to designate a replacement when an instance of it is read from the stream should implement this special method with the exact signature.",
        "labels": [
            [
                109,
                128,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 715,
            "doc_name": "java.io.Serializable"
        }
    },
    {
        "text": "Returns a key-value mapping associated with the greatest key in this map, or null if the map is empty.",
        "labels": [
            [
                8,
                27,
                "Returned"
            ],
            [
                77,
                81,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39065,
            "doc_name": "lastEntry()"
        }
    },
    {
        "text": "Depending on the location of the primary screen in the virtual device, negative coordinates are possible, as shown in the following figure.",
        "labels": [
            [
                80,
                91,
                "Negative"
            ]
        ],
        "meta": {
            "doc_index": 458,
            "doc_name": "java.awt.Window"
        }
    },
    {
        "text": "Returns a key-value mapping associated with the greatest key less than or equal to the given key, or null if there is no such key.",
        "labels": [
            [
                8,
                27,
                "Returned"
            ],
            [
                44,
                60,
                "LE-1"
            ],
            [
                83,
                96,
                "LE-2"
            ],
            [
                101,
                105,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39061,
            "doc_name": "floorEntry(K key)"
        }
    },
    {
        "text": "For class Finishings and any vendor-defined subclasses, the category name is \"finishings\".",
        "labels": [
            [
                56,
                73,
                "EQ-1"
            ],
            [
                77,
                89,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 41976,
            "doc_name": "getName()"
        }
    },
    {
        "text": "Otherwise if there are edits to be redone, this returns the value from the next significant edit that will be redone.",
        "labels": [
            [
                43,
                47,
                "Returns-1"
            ],
            [
                56,
                65,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 47984,
            "doc_name": "getRedoPresentationName()"
        }
    },
    {
        "text": "Returns the JMX implementation version (the version of this product).",
        "labels": [
            [
                8,
                38,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40882,
            "doc_name": "getImplementationVersion()"
        }
    },
    {
        "text": "Subclasses should override this method with a correct implementation.",
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 35375,
            "doc_name": "getIssuerAlternativeNames()"
        }
    },
    {
        "text": "Returns the minimal value for this parameter, if it has one, or null otherwise.",
        "labels": [
            [
                8,
                44,
                "Returned"
            ],
            [
                64,
                68,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 41128,
            "doc_name": "getMinValue()"
        }
    },
    {
        "text": "For a constructor, the name \"\" is returned, for a static initializer, the name \"\" is returned, and for an anonymous class or instance initializer, an empty name is returned.",
        "labels": [
            [
                19,
                30,
                "Returned"
            ],
            [
                70,
                81,
                "Returned"
            ],
            [
                147,
                160,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40602,
            "doc_name": "getSimpleName()"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular KeyEvent instance is not in the range from KEY_FIRST to KEY_LAST.",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                120,
                129,
                "LT-2"
            ],
            [
                133,
                141,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 146,
            "doc_name": "java.awt.event.KeyEvent"
        }
    },
    {
        "text": "This returns a local time with the same hour, minute, second and nanosecond as this date-time.",
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                13,
                25,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 36386,
            "doc_name": "toLocalTime()"
        }
    },
    {
        "text": "The returned map will never contain null keys or values.",
        "labels": [
            [
                13,
                16,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 33266,
            "doc_name": "getenv()"
        }
    },
    {
        "text": "These methods do not block, but return an associated arrival phase number; that is, the phase number of the phaser to which the arrival applied.",
        "labels": [
            [
                0,
                13,
                "Returns-1"
            ],
            [
                39,
                73,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 2229,
            "doc_name": "java.util.concurrent.Phaser"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular AdjustmentEvent instance is not in the range from ADJUSTMENT_FIRST to ADJUSTMENT_LAST.",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                127,
                143,
                "LT-2"
            ],
            [
                147,
                162,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 122,
            "doc_name": "java.awt.event.AdjustmentEvent"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular MouseEvent instance is not in the range from MOUSE_FIRST to MOUSE_LAST-1 (MOUSE_WHEEL is not acceptable).",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                122,
                133,
                "LT-2"
            ],
            [
                137,
                149,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 149,
            "doc_name": "java.awt.event.MouseEvent"
        }
    },
    {
        "text": "Returns null if this node is the last node of the traversal.",
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47795,
            "doc_name": "getNextNode()"
        }
    },
    {
        "text": "Returns a Spliterator.OfInt covering the specified range of the specified array.",
        "labels": [
            [
                8,
                27,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37598,
            "doc_name": "spliterator(int[] array, int startInclusive, int endExclusive)"
        }
    },
    {
        "text": "Return a list of stale change listeners.",
        "labels": [
            [
                7,
                39,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 46998,
            "doc_name": "getStaleListeners(ChangeListener l)"
        }
    },
    {
        "text": "Returns a list of MemoryPoolMXBean objects in the Java virtual machine.",
        "labels": [
            [
                8,
                42,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 32878,
            "doc_name": "getMemoryPoolMXBeans()"
        }
    },
    {
        "text": "Any subsequent attempt to create the same file during a run will throw a FilerException, as will attempting to create both a class file and source file for the same type name or same package name.",
        "labels": [
            [
                71,
                87,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 2978,
            "doc_name": "javax.annotation.processing.Filer"
        }
    },
    {
        "text": "The size of the stream is the number of bits in the set state, equal to the value returned by the cardinality() method.",
        "labels": [
            [
                0,
                22,
                "EQ-1"
            ],
            [
                26,
                61,
                "EQ-2"
            ],
            [
                72,
                118,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 37631,
            "doc_name": "stream()"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular ItemEvent instance is not in the range from ITEM_FIRST to ITEM_LAST.",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                121,
                131,
                "LT-2"
            ],
            [
                135,
                144,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 143,
            "doc_name": "java.awt.event.ItemEvent"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular FocusEvent instance is not in the range from FOCUS_FIRST to FOCUS_LAST.",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                122,
                133,
                "LT-2"
            ],
            [
                137,
                147,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 133,
            "doc_name": "java.awt.event.FocusEvent"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular HierarchyEvent instance is not in the range from HIERARCHY_FIRST to HIERARCHY_LAST.",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                126,
                141,
                "LT-2"
            ],
            [
                145,
                159,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 137,
            "doc_name": "java.awt.event.HierarchyEvent"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular InvocationEvent instance is not in the range from INVOCATION_FIRST to INVOCATION_LAST.",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                127,
                143,
                "LT-2"
            ],
            [
                147,
                162,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 142,
            "doc_name": "java.awt.event.InvocationEvent"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular ComponentEvent instance is not in the range from COMPONENT_FIRST to COMPONENT_LAST.",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                126,
                141,
                "LT-2"
            ],
            [
                145,
                159,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 127,
            "doc_name": "java.awt.event.ComponentEvent"
        }
    },
    {
        "text": "Unless otherwise noted, passing a null argument to a constructor or method in this class will cause a NullPointerException to be thrown.",
        "labels": [
            [
                34,
                38,
                "EQ-1"
            ],
            [
                39,
                47,
                "EQ-2"
            ],
            [
                102,
                122,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 2938,
            "doc_name": "java.util.zip.ZipFile"
        }
    },
    {
        "text": "This call is valid only after one of isProtReady or isEstablished return true.",
        "labels": [
            [
                30,
                65,
                "Returns-1"
            ],
            [
                73,
                77,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 49178,
            "doc_name": "getTargName()"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular PaintEvent instance is not in the range from PAINT_FIRST to PAINT_LAST.",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                122,
                133,
                "LT-2"
            ],
            [
                137,
                147,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 156,
            "doc_name": "java.awt.event.PaintEvent"
        }
    },
    {
        "text": "Returns all text of Text nodes logically-adjacent text nodes to this node, concatenated in document order.",
        "labels": [
            [
                8,
                30,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 50374,
            "doc_name": "getWholeText()"
        }
    },
    {
        "text": "The usual value for the options parameter is an array of Strings.",
        "labels": [
            [
                0,
                41,
                "Type-1"
            ],
            [
                45,
                64,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 4096,
            "doc_name": "javax.swing.JOptionPane"
        }
    },
    {
        "text": "If you implement the ComponentListener interface, you have to define all of the methods in it.",
        "labels": [
            [
                69,
                87,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 126,
            "doc_name": "java.awt.event.ComponentAdapter"
        }
    },
    {
        "text": "If you implement the HierarchyBoundsListener interface, you have to define both methods in it.",
        "labels": [
            [
                75,
                87,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 135,
            "doc_name": "java.awt.event.HierarchyBoundsAdapter"
        }
    },
    {
        "text": "If you implement the DropTargetListener interface, you have to define all of the methods in it.",
        "labels": [
            [
                70,
                88,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 110,
            "doc_name": "java.awt.dnd.DropTargetAdapter"
        }
    },
    {
        "text": "If you implement the MouseListener, MouseMotionListener interface, you have to define all of the methods in it.",
        "labels": [
            [
                86,
                104,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 148,
            "doc_name": "java.awt.event.MouseAdapter"
        }
    },
    {
        "text": "Returns a string showing the key/value pairs",
        "labels": [
            [
                8,
                16,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47677,
            "doc_name": "toString()"
        }
    },
    {
        "text": "If the pathname's name sequence is empty, then the empty string is returned.",
        "labels": [
            [
                47,
                63,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 31858,
            "doc_name": "getName()"
        }
    },
    {
        "text": "If you implement the ContainerListener interface, you have to define all of the methods in it.",
        "labels": [
            [
                69,
                87,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 129,
            "doc_name": "java.awt.event.ContainerAdapter"
        }
    },
    {
        "text": "If you implement the MouseMotionListener interface, you have to define all of the methods in it.",
        "labels": [
            [
                71,
                89,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 151,
            "doc_name": "java.awt.event.MouseMotionAdapter"
        }
    },
    {
        "text": "If there are more floats remaining in the source buffer than in this buffer, that is, if src.remaining() > remaining(), then no floats are transferred and a BufferOverflowException is thrown.",
        "labels": [
            [
                89,
                104,
                "GT-1"
            ],
            [
                107,
                118,
                "GT-2"
            ],
            [
                155,
                180,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 34841,
            "doc_name": "put(FloatBuffer src)"
        }
    },
    {
        "text": "If that flag is unrecognized, or its value is false, or the resolver does not implement this interface, then only the EntityResolver method will be used.",
        "labels": [
            [
                37,
                42,
                "EQ-1"
            ],
            [
                46,
                51,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 6451,
            "doc_name": "org.xml.sax.ext.EntityResolver2"
        }
    },
    {
        "text": "The default implementation of this method invokes getPreferredSize and returns that value.",
        "labels": [
            [
                0,
                41,
                "Returns-1"
            ],
            [
                79,
                89,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 44768,
            "doc_name": "getMaximumSize(JComponent c)"
        }
    },
    {
        "text": "If you implement the KeyListener interface, you have to define all of the methods in it.",
        "labels": [
            [
                63,
                81,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 145,
            "doc_name": "java.awt.event.KeyAdapter"
        }
    },
    {
        "text": "The stream offset is returned in the exception's offset field.",
        "labels": [
            [
                0,
                17,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 5990,
            "doc_name": "org.omg.CORBA.portable.IndirectionException"
        }
    },
    {
        "text": "Returns the codebase, if any, for the given class.",
        "labels": [
            [
                8,
                20,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42191,
            "doc_name": "getCodebase(java.lang.Class clz)"
        }
    },
    {
        "text": "Returns an existing FileSystem created by this provider.",
        "labels": [
            [
                8,
                30,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 34799,
            "doc_name": "getFileSystem(URI uri)"
        }
    },
    {
        "text": "If you implement the FocusListener interface, you have to define all of the methods in it.",
        "labels": [
            [
                65,
                83,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 132,
            "doc_name": "java.awt.event.FocusAdapter"
        }
    },
    {
        "text": "The bounds are returned in local coordinates.",
        "labels": [
            [
                0,
                10,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 47516,
            "doc_name": "getCharacterBounds(int i)"
        }
    },
    {
        "text": "If you implement the WindowListener interface, you have to define all of the methods in it.",
        "labels": [
            [
                66,
                84,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 159,
            "doc_name": "java.awt.event.WindowAdapter"
        }
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular ActionEvent instance is not in the range from ACTION_FIRST to ACTION_LAST.",
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                123,
                135,
                "LT-2"
            ],
            [
                139,
                150,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 120,
            "doc_name": "java.awt.event.ActionEvent"
        }
    },
    {
        "text": "Returns a BinaryOperator which returns the lesser of two elements according to the specified Comparator.",
        "labels": [
            [
                8,
                24,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 38660,
            "doc_name": "minBy(Comparator<? super T> comparator)"
        }
    },
    {
        "text": "Returns the graphic image (glyph, icon) that the label displays.",
        "labels": [
            [
                8,
                25,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 43390,
            "doc_name": "getIcon()"
        }
    },
    {
        "text": "If the receiver is not currently expanded, this will return an empty enumeration.",
        "labels": [
            [
                43,
                47,
                "Returns-1"
            ],
            [
                60,
                80,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 47889,
            "doc_name": "children()"
        }
    },
    {
        "text": "If the action event is null or can't be narrowed, the last focused text component is tried.",
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 5449,
            "doc_name": "javax.swing.text.TextAction"
        }
    },
    {
        "text": "But the parameter type is an array of Objects.",
        "labels": [
            [
                4,
                22,
                "Type-1"
            ],
            [
                26,
                45,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 4096,
            "doc_name": "javax.swing.JOptionPane"
        }
    },
    {
        "text": "If variant is null or the empty string, the variant in this Builder is removed.",
        "labels": [
            [
                3,
                10,
                "EQ-1"
            ],
            [
                14,
                18,
                "EQ-2"
            ],
            [
                22,
                38,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 38931,
            "doc_name": "setVariant(String variant)"
        }
    },
    {
        "text": "If the UI delegate is stateful, then it should return a new instance per component.",
        "labels": [
            [
                37,
                39,
                "Returns-1"
            ],
            [
                54,
                68,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 44769,
            "doc_name": "createUI(JComponent c)"
        }
    },
    {
        "text": "This OperationDef object is obtained from an Interface Repository.",
        "labels": [
            [
                0,
                24,
                "ReturnsBy-1"
            ],
            [
                42,
                65,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 49359,
            "doc_name": "create_operation_list(org.omg.CORBA.Object oper)"
        }
    },
    {
        "text": "If you implement the DragSourceListener interface, you have to define all of the methods in it.",
        "labels": [
            [
                70,
                88,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 101,
            "doc_name": "java.awt.dnd.DragSourceAdapter"
        }
    },
    {
        "text": "If this is * null, then all annotations were null.",
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ],
            [
                24,
                39,
                "EQ-1"
            ],
            [
                45,
                49,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 13033,
            "doc_name": "java.rmi.MarshalledObject.MarshalledObjectInputStream.locIn"
        }
    },
    {
        "text": "the encoding URI (or null if not specified)",
        "labels": [
            [
                0,
                16,
                "Returned"
            ],
            [
                21,
                25,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 49073,
            "doc_name": "javax.xml.crypto.dsig.XMLObject.getEncoding().<R>"
        }
    },
    {
        "text": "This method returns a reference to the newly created object.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                20,
                31,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 40845,
            "doc_name": "instantiate(String className, ObjectName loaderName)"
        }
    },
    {
        "text": "the new date to base the calculation on, not null",
        "labels": [
            [
                0,
                12,
                "NEQ-1"
            ],
            [
                45,
                49,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 54087,
            "doc_name": "java.time.LocalDateTime.plusWithOverflow(java.time.LocalDate,long,long,long,long,int).<P>newDate"
        }
    },
    {
        "text": "If both the language and country fields are missing, this function will return the empty string, even if the variant, script, or extensions field is present (you can't have a locale with just a variant, the variant must accompany a well-formed language or country code).",
        "labels": [
            [
                53,
                66,
                "Returns-1"
            ],
            [
                79,
                95,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 38903,
            "doc_name": "toString()"
        }
    },
    {
        "text": "Returns a BigInteger whose value is (this + val).",
        "labels": [
            [
                8,
                20,
                "Returned"
            ],
            [
                36,
                48,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 33400,
            "doc_name": "add(BigInteger val)"
        }
    },
    {
        "text": "Calling this method is equivalent to calling  getBundle(baseName, Locale.getDefault(), this.getClass().getClassLoader(), control),  except that getClassLoader() is run with the security privileges of ResourceBundle.",
        "labels": [
            [
                8,
                19,
                "SameUsage-1"
            ],
            [
                46,
                129,
                "SameUsage-2"
            ]
        ],
        "meta": {
            "doc_index": 29856,
            "doc_name": "getBundle(String baseName, Control control)"
        }
    },
    {
        "text": "Returns a string describing this file-mapping mode.",
        "labels": [
            [
                8,
                16,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 16013,
            "doc_name": "toString()"
        }
    },
    {
        "text": "Returns the the cause of this exception (the IOException that terminated the print job).",
        "labels": [
            [
                8,
                39,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 10006,
            "doc_name": "getCause()"
        }
    },
    {
        "text": "The following criteria determine whether a provider is made available to a RowSet object: If a particular provider is specified by a RowSet object, and the SyncFactory does not contain a reference to this provider, a SyncFactoryException is thrown stating that the synchronization provider could not be found.",
        "labels": [
            [
                93,
                114,
                "Type-1"
            ],
            [
                131,
                146,
                "Type-2"
            ],
            [
                215,
                237,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 3813,
            "doc_name": "javax.sql.rowset.spi.SyncFactory"
        }
    },
    {
        "text": "Returns the managed bean for the operating system on which the Java virtual machine is running.",
        "labels": [
            [
                8,
                24,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 13197,
            "doc_name": "getOperatingSystemMXBean()"
        }
    },
    {
        "text": "if the header string is null",
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                28,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 60603,
            "doc_name": "java.net.HttpCookie.parse(java.lang.String).NullPointerException"
        }
    },
    {
        "text": "If the relation is represented by an MBean (created by the user and added as a relation in the Relation Service), returns the ObjectName of the MBean.",
        "labels": [
            [
                122,
                149,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 34640,
            "doc_name": "isRelationMBean(String relationId)"
        }
    },
    {
        "text": "As c2 and c3 are smaller than c1 they are aligned based on the alignment specified for the component (if specified) or the default alignment of the parallel group.",
        "labels": [
            [
                3,
                12,
                "LT-1"
            ],
            [
                30,
                32,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 3987,
            "doc_name": "javax.swing.GroupLayout"
        }
    },
    {
        "text": "null is returned when this optional field is not defined.",
        "labels": [
            [
                0,
                4,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 48528,
            "doc_name": "getFractionalSecond()"
        }
    },
    {
        "text": "Return an array of one or more instances of the attribute category, containing the legal values -- used, for example, by an attribute with a list of enumerated values.",
        "labels": [
            [
                7,
                66,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 42145,
            "doc_name": "getSupportedAttributeValues(Class<? extends Attribute> category, DocFlavor flavor, AttributeSet attributes)"
        }
    },
    {
        "text": "If an exception other than ClassNotFoundException is thrown, that exception is thrown to the caller.",
        "labels": [
            [
                3,
                15,
                "Thrown"
            ],
            [
                27,
                49,
                "NotThrown"
            ]
        ],
        "meta": {
            "doc_index": 35168,
            "doc_name": "getDefaultProviderInstance()"
        }
    },
    {
        "text": "If an accessor method tries to access information from an inappropriate kind of type code, it will throw the exception TypeCodePackage.BadKind.",
        "labels": [
            [
                91,
                93,
                "Throws-1"
            ],
            [
                119,
                142,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 6037,
            "doc_name": "org.omg.CORBA.TypeCode"
        }
    },
    {
        "text": "If the destination is set to any other value, then Process#getInputStream() will return a null input stream.",
        "labels": [
            [
                3,
                18,
                "EQ-1"
            ],
            [
                29,
                44,
                "EQ-2"
            ],
            [
                51,
                75,
                "Returns-1"
            ],
            [
                88,
                107,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 32977,
            "doc_name": "redirectOutput(Redirect destination)"
        }
    },
    {
        "text": "The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls.)",
        "labels": [
            [
                0,
                11,
                "SameUsage-1"
            ],
            [
                43,
                52,
                "SameUsage-2"
            ]
        ],
        "meta": {
            "doc_index": 2353,
            "doc_name": "java.util.HashMap"
        }
    },
    {
        "text": "Returns the hit for the next caret to the right (bottom); if there is no such hit, returns null.",
        "labels": [
            [
                8,
                15,
                "Returned"
            ],
            [
                91,
                95,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 30552,
            "doc_name": "getNextRightHit(TextHitInfo hit)"
        }
    },
    {
        "text": "The sentinal is equal to the result of calling: * new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE)",
        "labels": [
            [
                0,
                12,
                "EQ-1"
            ],
            [
                25,
                104,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 11937,
            "doc_name": "java.lang.Throwable.SentinelHolder.STACK_TRACE_ELEMENT_SENTINEL"
        }
    },
    {
        "text": "The value of this constant is \"java.naming.factory.initial\". * *",
        "labels": [
            [
                0,
                26,
                "EQ-1"
            ],
            [
                30,
                59,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 19544,
            "doc_name": "javax.naming.Context.INITIAL_CONTEXT_FACTORY"
        }
    },
    {
        "text": "Subclasses must override getContents and provide an array, where each item in the array is a pair of objects.",
        "labels": [
            [
                25,
                36,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 2436,
            "doc_name": "java.util.ListResourceBundle"
        }
    },
    {
        "text": "As an example, specifying an alpha component as a signed short value outside the range 0 to 32767, normalized range 0.0 to 1.0, can lead to unexpected results.)",
        "labels": [
            [
                26,
                44,
                "Type-1"
            ],
            [
                48,
                68,
                "Type-2"
            ],
            [
                87,
                88,
                "LT-2"
            ],
            [
                92,
                97,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 296,
            "doc_name": "java.awt.image.ComponentColorModel"
        }
    },
    {
        "text": "This method may return different results at different times if new charset providers are dynamically made available to the current Java virtual machine.",
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                23,
                40,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 16492,
            "doc_name": "availableCharsets()"
        }
    },
    {
        "text": "if the accessed component in the DynAny is of a type that is not equivalent to the requested type.",
        "labels": [
            [
                3,
                39,
                "NEQ-1"
            ],
            [
                79,
                97,
                "NEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 52748,
            "doc_name": "org.omg.DynamicAny._DynSequenceStub.get_typecode().org.omg.DynamicAny.DynAnyPackage.TypeMismatch"
        }
    },
    {
        "text": "Note that the Source and the Destination may not be the same object.",
        "labels": [
            [
                10,
                20,
                "CanNEQ-1"
            ],
            [
                25,
                40,
                "CanNEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 298,
            "doc_name": "java.awt.image.ConvolveOp"
        }
    },
    {
        "text": "The implementations of Math.sin() and Math.cos() correspondingly never return 0.0 for any case other than Math.sin(0.0).",
        "labels": [
            [
                0,
                48,
                "NotReturns-1"
            ],
            [
                78,
                81,
                "NotReturns-2"
            ]
        ],
        "meta": {
            "doc_index": 205,
            "doc_name": "java.awt.geom.AffineTransform"
        }
    },
    {
        "text": "The map returned by this method will have one entry for each charset for which support is available in the current Java virtual machine.",
        "labels": [
            [
                0,
                7,
                "ReturnsBy-1"
            ],
            [
                20,
                31,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 16492,
            "doc_name": "availableCharsets()"
        }
    },
    {
        "text": "If the object is not of type type, this will throw an exception.",
        "labels": [
            [
                3,
                13,
                "NotType-1"
            ],
            [
                24,
                33,
                "NotType-2"
            ],
            [
                35,
                39,
                "Throws-1"
            ],
            [
                51,
                63,
                "Throws-2"
            ]
        ],
        "meta": {
            "doc_index": 44703,
            "doc_name": "lookup(String key, Class type)"
        }
    },
    {
        "text": "A java.io.InputStream object or null if no resource with this name is found",
        "labels": [
            [
                0,
                28,
                "Returned"
            ],
            [
                32,
                36,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 11809,
            "doc_name": "java.lang.Class.getResourceAsStream(java.lang.String).<R>"
        }
    },
    {
        "text": "In the absence of such changes, the charsets returned by this method are exactly those that can be retrieved via the forName method.",
        "labels": [
            [
                32,
                44,
                "ReturnsBy-1"
            ],
            [
                57,
                68,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 16492,
            "doc_name": "availableCharsets()"
        }
    },
    {
        "text": "flavor1.equals(flavor2);  As mentioned, flavor1 and flavor2 are considered identical.",
        "labels": [
            [
                40,
                47,
                "EQ-1"
            ],
            [
                52,
                59,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 71,
            "doc_name": "java.awt.datatransfer.DataFlavor"
        }
    },
    {
        "text": "Size + offset for a given bank should never be greater than the length of the associated data array.",
        "labels": [
            [
                0,
                30,
                "LE-1"
            ],
            [
                60,
                99,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 300,
            "doc_name": "java.awt.image.DataBuffer"
        }
    },
    {
        "text": "The width of the matrix must be equal to the number of bands in the source Raster, optionally plus one.",
        "labels": [
            [
                0,
                23,
                "EQ-1"
            ],
            [
                41,
                81,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 287,
            "doc_name": "java.awt.image.BandCombineOp"
        }
    },
    {
        "text": "An invocation of the form exec(cmdarray) behaves in exactly the same way as the invocation String[],(cmdarray, null, null).",
        "labels": [
            [
                26,
                40,
                "SameUsage-1"
            ],
            [
                91,
                122,
                "SameUsage-2"
            ]
        ],
        "meta": {
            "doc_index": 13743,
            "doc_name": "exec(String[] cmdarray)"
        }
    },
    {
        "text": "If there is no associated application or the associated application fails to be launched, an exception is thrown.",
        "labels": [
            [
                90,
                102,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 89,
            "doc_name": "java.awt.Desktop"
        }
    },
    {
        "text": "The setPaintMode method is implemented as a convenience method to set the default Composite, equivalent to setComposite(new AlphaComposite.SrcOver).",
        "labels": [
            [
                0,
                23,
                "SameUsage-1"
            ],
            [
                107,
                147,
                "SameUsage-2"
            ]
        ],
        "meta": {
            "doc_index": 257,
            "doc_name": "java.awt.Graphics2D"
        }
    },
    {
        "text": "Several methods defined by the Component class and the LayoutManager interface return a Dimension object.",
        "labels": [
            [
                51,
                78,
                "Returns-1"
            ],
            [
                86,
                104,
                "Returns-2"
            ]
        ],
        "meta": {
            "doc_index": 92,
            "doc_name": "java.awt.Dimension"
        }
    },
    {
        "text": "A special type of SentEvent which updates a counter in the target KeyboardFocusManager if it is an instance of DefaultKeyboardFocusManager.",
        "labels": [
            [
                90,
                92,
                "Type-1"
            ],
            [
                111,
                138,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 88,
            "doc_name": "java.awt.DefaultKeyboardFocusManager.DefaultKeyboardFocusManagerSentEvent"
        }
    },
    {
        "text": "This allows an array smaller than the native data size to be provided for a constrained input.",
        "labels": [
            [
                12,
                20,
                "LT-1"
            ],
            [
                34,
                54,
                "LT-2"
            ]
        ],
        "meta": {
            "doc_index": 293,
            "doc_name": "java.awt.image.ByteLookupTable"
        }
    },
    {
        "text": "For float and double samples, the normalized component values are taken to be equal to the corresponding sample values, and subclasses should not attempt to add any non-identity scaling for these transfer types.",
        "labels": [
            [
                30,
                61,
                "EQ-1"
            ],
            [
                87,
                118,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 296,
            "doc_name": "java.awt.image.ComponentColorModel"
        }
    },
    {
        "text": "For float and double samples, the translation is an identity, i.e. normalized component values are equal to the corresponding sample values.",
        "labels": [
            [
                67,
                94,
                "EQ-1"
            ],
            [
                108,
                139,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 296,
            "doc_name": "java.awt.image.ComponentColorModel"
        }
    },
    {
        "text": "Even when there is such a correspondence, the number of bits in a sample is not necessarily the same as the number of bits in the corresponding color/alpha component.",
        "labels": [
            [
                42,
                60,
                "CanNEQ-1"
            ],
            [
                104,
                165,
                "CanNEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 295,
            "doc_name": "java.awt.image.ColorModel"
        }
    },
    {
        "text": "The number of color samples in the pixel values must be same as the number of color components in the ColorSpace.",
        "labels": [
            [
                0,
                47,
                "EQ-1"
            ],
            [
                64,
                112,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 296,
            "doc_name": "java.awt.image.ComponentColorModel"
        }
    },
    {
        "text": "Note that Source and Destination may be the same object.",
        "labels": [
            [
                10,
                16,
                "CanEQ-1"
            ],
            [
                21,
                32,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 294,
            "doc_name": "java.awt.image.ColorConvertOp"
        }
    },
    {
        "text": "Second the min/max range of all color components of the ColorSpace must be 0.0 to 1.0.",
        "labels": [
            [
                7,
                66,
                "GE-1"
            ],
            [
                75,
                78,
                "GE-2"
            ],
            [
                82,
                85,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 296,
            "doc_name": "java.awt.image.ComponentColorModel"
        }
    },
    {
        "text": "For Raster objects, the number of bands in the source must be equal to the number of bands in the destination.",
        "labels": [
            [
                20,
                53,
                "EQ-1"
            ],
            [
                71,
                109,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 285,
            "doc_name": "java.awt.image.AffineTransformOp"
        }
    },
    {
        "text": "For instance, if csq is a java.nio.CharBuffer then the subsequence to append is defined by the buffer's position and limit.",
        "labels": [
            [
                17,
                20,
                "Type-1"
            ],
            [
                24,
                45,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 11614,
            "doc_name": "append(CharSequence csq)"
        }
    },
    {
        "text": "This class implements a Set which returns only members that are an instance of a specified Class.",
        "labels": [
            [
                47,
                54,
                "Returned"
            ],
            [
                79,
                96,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 3690,
            "doc_name": "javax.security.auth.Subject.ClassSet"
        }
    },
    {
        "text": "For those methods that use a primitive array pixel representation of type transferType, the array length is the same as the number of color and alpha samples.",
        "labels": [
            [
                88,
                104,
                "EQ-1"
            ],
            [
                120,
                157,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 296,
            "doc_name": "java.awt.image.ComponentColorModel"
        }
    },
    {
        "text": "The content pane will always be non-null.",
        "labels": [
            [
                0,
                16,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 4066,
            "doc_name": "javax.swing.JFrame"
        }
    },
    {
        "text": "The range for an alpha component should be 0.0 to 1.0.",
        "labels": [
            [
                14,
                32,
                "GE-1"
            ],
            [
                43,
                46,
                "GE-2"
            ],
            [
                50,
                53,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 296,
            "doc_name": "java.awt.image.ComponentColorModel"
        }
    },
    {
        "text": "Thus, sample values range from 0 to 2n - 1.",
        "labels": [
            [
                6,
                25,
                "GE-1"
            ],
            [
                31,
                32,
                "GE-2"
            ],
            [
                36,
                42,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 296,
            "doc_name": "java.awt.image.ComponentColorModel"
        }
    },
    {
        "text": "[ 1.0 0.0 0.0 0.0 ] [ b1 ] [ 0.0 -1.0 0.0 255.0 ] x [ b2 ] [ 0.0 0.0 1.0 0.0 ] [ b3 ] [ 1 ]  Note that the source and destination can be the same object.",
        "labels": [
            [
                103,
                113,
                "CanEQ-1"
            ],
            [
                118,
                129,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 287,
            "doc_name": "java.awt.image.BandCombineOp"
        }
    },
    {
        "text": "The data type may be TYPE_UNDEFINED or one of the types defined below.",
        "labels": [
            [
                0,
                13,
                "CanEQ-1"
            ],
            [
                21,
                35,
                "CanEQ-2"
            ],
            [
                39,
                69,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 300,
            "doc_name": "java.awt.image.DataBuffer"
        }
    },
    {
        "text": "Returns the minimal value for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.",
        "labels": [
            [
                8,
                25,
                "Returned"
            ],
            [
                119,
                123,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 41135,
            "doc_name": "getMinValue()"
        }
    },
    {
        "text": "A relative name is a non-null, non-empty sequence of path segments separated by '/'. '.'",
        "labels": [
            [
                0,
                15,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 5544,
            "doc_name": "javax.tools.JavaFileManager"
        }
    },
    {
        "text": "In other words, the representation class is the type of object returned by Transferable#getTransferData.",
        "labels": [
            [
                16,
                40,
                "ReturnsBy-1"
            ],
            [
                75,
                103,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 71,
            "doc_name": "java.awt.datatransfer.DataFlavor"
        }
    },
    {
        "text": "Use default GregorianCalendar locale if value is null.",
        "labels": [
            [
                40,
                45,
                "EQ-1"
            ],
            [
                49,
                53,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 58817,
            "doc_name": "javax.xml.datatype.XMLGregorianCalendar.toGregorianCalendar(java.util.TimeZone,java.util.Locale,javax.xml.datatype.XMLGregorianCalendar).<P>aLocale"
        }
    },
    {
        "text": "Returns the comparator used to order the elements in this set, or null if this set uses the {@linkplain Comparable natural ordering} of its elements.",
        "labels": [
            [
                8,
                22,
                "Returned"
            ],
            [
                66,
                70,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39364,
            "doc_name": "comparator()"
        }
    },
    {
        "text": "This value can be null. * *",
        "labels": [
            [
                0,
                10,
                "CanEQ-1"
            ],
            [
                18,
                22,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 6898,
            "doc_name": "java.awt.Component.graphicsConfig"
        }
    },
    {
        "text": "Filters should subclass this class and override the methods which deal with the data that needs to be filtered and modify it as necessary.",
        "labels": [
            [
                48,
                59,
                "MustOverride"
            ]
        ],
        "meta": {
            "doc_index": 310,
            "doc_name": "java.awt.image.ImageFilter"
        }
    },
    {
        "text": "Called by getName when the name is null.",
        "labels": [
            [
                23,
                31,
                "EQ-1"
            ],
            [
                35,
                39,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 31419,
            "doc_name": "constructComponentName()"
        }
    },
    {
        "text": "The listener interface for receiving notification of events dispatched to objects that are instances of Component or MenuComponent or their subclasses.",
        "labels": [
            [
                74,
                81,
                "Type-1"
            ],
            [
                104,
                113,
                "Type-2"
            ],
            [
                117,
                130,
                "Type-2"
            ],
            [
                134,
                150,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 124,
            "doc_name": "java.awt.event.AWTEventListener"
        }
    },
    {
        "text": "Returns the object name of the first object in the set of observed MBeans, or null if there is no such object.",
        "labels": [
            [
                8,
                43,
                "Returned"
            ],
            [
                78,
                82,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 41004,
            "doc_name": "getObservedObject()"
        }
    },
    {
        "text": "low-level behavior, or null if not yet prepared",
        "labels": [
            [
                0,
                18,
                "Returned"
            ],
            [
                23,
                27,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 11233,
            "doc_name": "java.lang.invoke.LambdaForm.vmentry"
        }
    },
    {
        "text": "parameters for the Configuration, which may be null.",
        "labels": [
            [
                0,
                10,
                "CanEQ-1"
            ],
            [
                47,
                51,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 56778,
            "doc_name": "javax.security.auth.login.Configuration.getInstance(java.lang.String,javax.security.auth.login.Configuration.Parameters,java.security.Provider).<P>params"
        }
    },
    {
        "text": "if before is null",
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 63318,
            "doc_name": "java.util.function.IntUnaryOperator.compose(java.util.function.IntUnaryOperator).NullPointerException"
        }
    },
    {
        "text": "These values will often be 0.0 and 1.0 (e.g. normalized component values for the default sRGB color space range from 0.0 to 1.0), but some color spaces have component values with different upper and lower limits.",
        "labels": [
            [
                0,
                12,
                "GE-1"
            ],
            [
                27,
                30,
                "GE-2"
            ],
            [
                35,
                38,
                "LE-2"
            ],
            [
                45,
                105,
                "GE-1"
            ],
            [
                117,
                120,
                "GE-2"
            ],
            [
                124,
                127,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 295,
            "doc_name": "java.awt.image.ColorModel"
        }
    },
    {
        "text": "It is the responsibility of applications to appropriately scale pixel data before rendering such that color components fall within the normalized range of the ColorSpace (obtained using the getMinValue and getMaxValue methods of the ColorSpace class) and the alpha component is between 0.0 and 1.0.",
        "labels": [
            [
                255,
                274,
                "GE-1"
            ],
            [
                286,
                289,
                "GE-2"
            ],
            [
                294,
                297,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 296,
            "doc_name": "java.awt.image.ComponentColorModel"
        }
    },
    {
        "text": "A printing attribute value is an instance of a class that implements interface Attribute.",
        "labels": [
            [
                0,
                26,
                "Type-1"
            ],
            [
                69,
                88,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 42145,
            "doc_name": "getSupportedAttributeValues(Class<? extends Attribute> category, DocFlavor flavor, AttributeSet attributes)"
        }
    },
    {
        "text": "XMLEventReader will be null.",
        "labels": [
            [
                0,
                14,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 48944,
            "doc_name": "getXMLEventReader()"
        }
    },
    {
        "text": "The default value if not specified is Boolean.FALSE.",
        "labels": [
            [
                0,
                17,
                "EQ-1"
            ],
            [
                38,
                51,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 5659,
            "doc_name": "javax.xml.crypto.dsig.XMLSignContext"
        }
    },
    {
        "text": "The value of this socket option is an Integer in the range * 0 <= value <= 255.",
        "labels": [
            [
                0,
                31,
                "Type-1"
            ],
            [
                38,
                45,
                "Type-2"
            ],
            [
                61,
                62,
                "GE-2"
            ],
            [
                75,
                78,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 12453,
            "doc_name": "java.net.StandardSocketOptions.IP_MULTICAST_TTL"
        }
    },
    {
        "text": "The default value is false.",
        "labels": [
            [
                0,
                17,
                "EQ-1"
            ],
            [
                21,
                26,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 19449,
            "doc_name": "javax.management.remote.rmi.RMIConnectorServer.JNDI_REBIND_ATTRIBUTE"
        }
    },
    {
        "text": "If the return value is an instance of AccessibleExtendedText, the object supports this interface.",
        "labels": [
            [
                3,
                19,
                "Type-1"
            ],
            [
                38,
                60,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 2956,
            "doc_name": "javax.accessibility.AccessibleExtendedText"
        }
    },
    {
        "text": "Stops at the first context that is an instance of a given subtype of Context.",
        "labels": [
            [
                9,
                26,
                "Type-1"
            ],
            [
                50,
                76,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 41916,
            "doc_name": "resolveToClass(Name name, Class<? extends Context> contextType)"
        }
    },
    {
        "text": "The value of * this attribute is an instance of AttributedString which represents * the composed text.",
        "labels": [
            [
                0,
                29,
                "Type-1"
            ],
            [
                48,
                64,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 28136,
            "doc_name": "javax.swing.text.StyleConstants.ComposedTextAttribute"
        }
    },
    {
        "text": "The default is ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED. * *",
        "labels": [
            [
                0,
                11,
                "EQ-1"
            ],
            [
                15,
                63,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 26411,
            "doc_name": "javax.swing.ScrollPaneLayout.vsbPolicy"
        }
    },
    {
        "text": "If the given locale is equal to Locale.ROOT (the root locale), a List containing only the root Locale must be returned.",
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                32,
                43,
                "EQ-2"
            ],
            [
                63,
                101,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 39296,
            "doc_name": "getCandidateLocales(String baseName, Locale locale)"
        }
    },
    {
        "text": "nameExplicitlySet will * be false if the name has not been set and * true if it has. * *",
        "labels": [
            [
                0,
                17,
                "EQ-1"
            ],
            [
                28,
                33,
                "EQ-2"
            ],
            [
                67,
                73,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 6907,
            "doc_name": "java.awt.Component.nameExplicitlySet"
        }
    },
    {
        "text": "List file objects in \"subpackages\" if recurse is true.",
        "labels": [
            [
                38,
                45,
                "EQ-1"
            ],
            [
                49,
                53,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 48025,
            "doc_name": "list(Location location, String packageName, Set<Kind> kinds, boolean recurse)"
        }
    },
    {
        "text": "Keys in this map must be Strings.",
        "labels": [
            [
                0,
                4,
                "Type-1"
            ],
            [
                25,
                32,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 56335,
            "doc_name": "javax.management.remote.JMXConnectorServerFactory.newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map<java.lang.String,?>,javax.management.MBeanServer).<P>environment"
        }
    },
    {
        "text": "if the object to resolve is not an instance of Attribute",
        "labels": [
            [
                3,
                24,
                "NotType-1"
            ],
            [
                47,
                56,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 62200,
            "doc_name": "java.text.AttributedCharacterIterator.Attribute.readResolve().java.io.InvalidObjectException"
        }
    },
    {
        "text": "If index is negative or not smaller than the buffer's limit, minus seven",
        "labels": [
            [
                3,
                8,
                "Negative"
            ],
            [
                41,
                59,
                "GE-2"
            ]
        ],
        "meta": {
            "doc_index": 60740,
            "doc_name": "java.nio.ByteBuffer.putDouble(int,double).IndexOutOfBoundsException"
        }
    },
    {
        "text": "The value associated with this * attribute is an instance of ClassLoader.",
        "labels": [
            [
                0,
                9,
                "Type-1"
            ],
            [
                61,
                72,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 19334,
            "doc_name": "javax.management.remote.JMXConnectorServerFactory.DEFAULT_CLASS_LOADER"
        }
    },
    {
        "text": "If this is false the viewport's view is obtained and if it * is an instance of Scrollable the unit increment * from it is used.",
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                16,
                "EQ-2"
            ],
            [
                56,
                58,
                "Type-1"
            ],
            [
                79,
                89,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 21981,
            "doc_name": "javax.swing.JScrollPane.ScrollBar.unitIncrementSet"
        }
    },
    {
        "text": "The default layout for a dialog is BorderLayout.",
        "labels": [
            [
                0,
                18,
                "EQ-1"
            ],
            [
                35,
                47,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 90,
            "doc_name": "java.awt.Dialog"
        }
    },
    {
        "text": "The default layout for a frame is BorderLayout.",
        "labels": [
            [
                0,
                18,
                "EQ-1"
            ],
            [
                34,
                46,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 203,
            "doc_name": "java.awt.Frame"
        }
    },
    {
        "text": "If the specified daylight is true, a Daylight Saving Time name is returned (even if this TimeZone doesn't observe Daylight Saving Time).",
        "labels": [
            [
                3,
                25,
                "EQ-1"
            ],
            [
                29,
                33,
                "EQ-2"
            ],
            [
                35,
                62,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 40020,
            "doc_name": "getDisplayName(boolean daylight, int style)"
        }
    },
    {
        "text": "Obtain the print data representation object, which is an instance of the doc flavor's representation class.",
        "labels": [
            [
                7,
                43,
                "Type-1"
            ],
            [
                69,
                106,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 3576,
            "doc_name": "javax.print.Doc"
        }
    },
    {
        "text": "if a non-null element of filters does not match a corresponding argument type of target as described above, or if the pos+filters.length is greater than target.type().parameterCount(), or if the resulting method handle's type would have too many parameters",
        "labels": [
            [
                14,
                32,
                "NotNull"
            ],
            [
                114,
                136,
                "GT-1"
            ],
            [
                153,
                183,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 60310,
            "doc_name": "java.lang.invoke.MethodHandles.filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...).IllegalArgumentException"
        }
    },
    {
        "text": "Only properties added with putClientProperty will return a non-null value.",
        "labels": [
            [
                57,
                73,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 43234,
            "doc_name": "getClientProperty(Object key)"
        }
    },
    {
        "text": "Returns the first JViewport's descendant which is not an instance of JLayer.",
        "labels": [
            [
                8,
                40,
                "Returned"
            ],
            [
                69,
                75,
                "NotType-2"
            ]
        ],
        "meta": {
            "doc_index": 46756,
            "doc_name": "getUnwrappedView(JViewport viewport)"
        }
    },
    {
        "text": "Note: The object returned from this method may be an instance of an implementation-specific class.",
        "labels": [
            [
                6,
                16,
                "ReturnsBy-1"
            ],
            [
                31,
                42,
                "ReturnsBy-2"
            ],
            [
                65,
                97,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 35147,
            "doc_name": "getRef()"
        }
    },
    {
        "text": "if screenRect width and height are not greater than zero",
        "labels": [
            [
                3,
                30,
                "LE-1"
            ],
            [
                52,
                56,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 59925,
            "doc_name": "java.awt.Robot.createScreenCapture(java.awt.Rectangle).IllegalArgumentException"
        }
    },
    {
        "text": "Returns a view of the portion of this set whose elements are greater than (or equal to, if inclusive is true) fromElement.",
        "labels": [
            [
                48,
                56,
                "GT-1"
            ],
            [
                110,
                121,
                "GT-2"
            ]
        ],
        "meta": {
            "doc_index": 39082,
            "doc_name": "tailSet(E fromElement, boolean inclusive)"
        }
    },
    {
        "text": "The Map keys are Strings that represent the response-header field names.",
        "labels": [
            [
                0,
                12,
                "Type-1"
            ],
            [
                17,
                24,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 33796,
            "doc_name": "getHeaderFields()"
        }
    },
    {
        "text": "MBeanServer access: The mapped type of MemoryType is String and the value is the name of the MemoryType.",
        "labels": [
            [
                20,
                49,
                "Type-1"
            ],
            [
                53,
                59,
                "Type-2"
            ],
            [
                64,
                73,
                "EQ-1"
            ],
            [
                77,
                103,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 32892,
            "doc_name": "getType()"
        }
    },
    {
        "text": "if w or h is not greater than 0",
        "labels": [
            [
                3,
                9,
                "LE-1"
            ],
            [
                30,
                31,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 59850,
            "doc_name": "java.awt.image.PackedColorModel.createCompatibleSampleModel(int,int).IllegalArgumentException"
        }
    },
    {
        "text": "The class Object does not itself implement the interface Cloneable, so calling the clone method on an object whose class is Object will result in throwing an exception at run time.",
        "labels": [
            [
                0,
                16,
                "NotType-1"
            ],
            [
                43,
                66,
                "NotType-2"
            ],
            [
                155,
                167,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 32943,
            "doc_name": "clone()"
        }
    },
    {
        "text": "an ImageReadParam to be used to get the destination image or image type, or null.",
        "labels": [
            [
                0,
                17,
                "Returned"
            ],
            [
                76,
                80,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 55905,
            "doc_name": "javax.imageio.ImageReader.getDestination(javax.imageio.ImageReadParam,java.util.Iterator<javax.imageio.ImageTypeSpecifier>,int,int).<P>param"
        }
    },
    {
        "text": "If the column class as returned by getColumnClass is String, use the Comparator returned by Collator.getInstance().",
        "labels": [
            [
                3,
                19,
                "ReturnsBy-1"
            ],
            [
                35,
                49,
                "ReturnsBy-2"
            ],
            [
                53,
                59,
                "Type-2"
            ],
            [
                65,
                79,
                "ReturnsBy-1"
            ],
            [
                92,
                114,
                "ReturnsBy-2"
            ]
        ],
        "meta": {
            "doc_index": 5049,
            "doc_name": "javax.swing.table.TableRowSorter"
        }
    },
    {
        "text": "Each bean property will be queried as a key on the AttributeSet, with the expectation that a non-null value (of type String) will be present if there was a parameter specification for the property.",
        "labels": [
            [
                102,
                107,
                "NotNull"
            ]
        ],
        "meta": {
            "doc_index": 5302,
            "doc_name": "javax.swing.text.html.ObjectView"
        }
    },
    {
        "text": "Unless any of the resolved interfaces are non-public, this same value of loader is also the class loader passed to Proxy.getProxyClass; if non-public interfaces are present, their class loader is passed instead (if more than one non-public interface class loader is encountered, an IllegalAccessError is thrown).",
        "labels": [
            [
                279,
                300,
                "Thrown"
            ]
        ],
        "meta": {
            "doc_index": 31899,
            "doc_name": "resolveProxyClass(String[] interfaces)"
        }
    },
    {
        "text": "This value may be null. *",
        "labels": [
            [
                0,
                10,
                "CanEQ-1"
            ],
            [
                18,
                22,
                "CanEQ-2"
            ]
        ],
        "meta": {
            "doc_index": 6614,
            "doc_name": "java.awt.Button.label"
        }
    },
    {
        "text": "The character at index k in the new character sequence is equal to: the character at index k in the old character sequence, if k is less than offset the character at index k-offset in the argument str, if k is not less than offset but is less than offset+str.length() the character at index k-str.length() in the old character sequence, if k is not less than offset+str.length() The offset argument must be greater than or equal to 0, and less than or equal to the {@linkplain #length() length} of this sequence.",
        "labels": [
            [
                0,
                24,
                "EQ-1"
            ],
            [
                68,
                92,
                "EQ-2"
            ],
            [
                127,
                128,
                "LT-1"
            ],
            [
                142,
                148,
                "LT-2"
            ],
            [
                205,
                206,
                "GE-1"
            ],
            [
                224,
                230,
                "GE-2"
            ],
            [
                248,
                267,
                "LT-2"
            ],
            [
                340,
                341,
                "GE-1"
            ],
            [
                359,
                378,
                "GE-2"
            ],
            [
                379,
                398,
                "GE-1"
            ],
            [
                432,
                433,
                "GE-2"
            ],
            [
                461,
                511,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 11546,
            "doc_name": "insert(int offset, String str)"
        }
    },
    {
        "text": "Next is an instance of CheckboxMenuItem labeled \"Check\".",
        "labels": [
            [
                0,
                4,
                "Type-1"
            ],
            [
                23,
                39,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 378,
            "doc_name": "java.awt.MenuItem"
        }
    },
    {
        "text": "If myCharHolder is an instance of CharHolder, the value stored in its value field can be accessed with myCharHolder.value.",
        "labels": [
            [
                3,
                15,
                "Type-1"
            ],
            [
                34,
                44,
                "Type-2"
            ]
        ],
        "meta": {
            "doc_index": 5880,
            "doc_name": "org.omg.CORBA.CharHolder"
        }
    },
    {
        "text": "The character at index k in this sequence becomes equal to: the character at index k in this sequence, if k is less than dstOffset the character at index k+start-dstOffset in the argument s, if k is greater than or equal to dstOffset but is less than dstOffset+end-start the character at index k-(end-start) in this sequence, if k is greater than or equal to dstOffset+end-start The dstOffset argument must be greater than or equal to 0, and less than or equal to the {@linkplain #length() length} of this sequence.",
        "labels": [
            [
                0,
                41,
                "EQ-1"
            ],
            [
                60,
                101,
                "EQ-2"
            ],
            [
                106,
                107,
                "LT-1"
            ],
            [
                121,
                130,
                "LT-2"
            ],
            [
                131,
                189,
                "EQ-2"
            ],
            [
                194,
                195,
                "GE-1"
            ],
            [
                224,
                233,
                "GE-2"
            ],
            [
                251,
                270,
                "LT-2"
            ],
            [
                270,
                324,
                "EQ-2"
            ],
            [
                329,
                330,
                "GE-1"
            ],
            [
                359,
                378,
                "GE-2"
            ],
            [
                379,
                401,
                "GE-1"
            ],
            [
                435,
                436,
                "GE-2"
            ],
            [
                468,
                514,
                "LE-2"
            ]
        ],
        "meta": {
            "doc_index": 32049,
            "doc_name": "insert(int dstOffset, CharSequence s, int start, int end)"
        }
    },
    {
        "text": "Returns a string representation of this certificate.",
        "labels": [
            [
                8,
                51,
                "Returned"
            ]
        ],
        "meta": {
            "doc_index": 37607,
            "doc_name": "toString()"
        }
    },
    {
        "text": "if schema is null.",
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ],
        "meta": {
            "doc_index": 65746,
            "doc_name": "javax.xml.validation.SchemaFactory.newSchema(java.net.URL).NullPointerException"
        }
    },
    {
        "text": "algorithm-specific transform parameters (may be null)",
        "meta": {
            "doc_index": 58709,
            "doc_name": "javax.xml.crypto.dsig.XMLSignatureFactory.newTransform(java.lang.String,javax.xml.crypto.dsig.spec.TransformParameterSpec).<P>params"
        },
        "labels": [
            [
                0,
                39,
                "CanEQ-1"
            ],
            [
                48,
                52,
                "CanEQ-2"
            ]
        ]
    },
    {
        "text": "This field can be null indicating that the checkbox * is not a group checkbox. *",
        "meta": {
            "doc_index": 6637,
            "doc_name": "java.awt.Checkbox.group"
        },
        "labels": [
            [
                0,
                10,
                "CanEQ-1"
            ],
            [
                18,
                22,
                "CanEQ-2"
            ]
        ]
    },
    {
        "text": "Some CertStore implementations (especially LDAP CertStores) may throw a CertStoreException unless a non-null CertSelector is provided that includes specific criteria that can be used to find the certificates.",
        "meta": {
            "doc_index": 35314,
            "doc_name": "engineGetCertificates(CertSelector selector)"
        },
        "labels": [
            [
                0,
                30,
                "Throws-1"
            ],
            [
                70,
                90,
                "Throws-2"
            ],
            [
                109,
                121,
                "NotNull"
            ]
        ]
    },
    {
        "text": "The non-null components to add.",
        "meta": {
            "doc_index": 56446,
            "doc_name": "javax.naming.CompositeName.addAll(int,javax.naming.Name).<P>n"
        },
        "labels": [
            [
                13,
                23,
                "NotNull"
            ]
        ]
    },
    {
        "text": "Some CertStore implementations (especially LDAP CertStores) may throw a CertStoreException unless a non-null CRLSelector is provided that includes specific criteria that can be used to find the CRLs.",
        "meta": {
            "doc_index": 35304,
            "doc_name": "getCRLs(CRLSelector selector)"
        },
        "labels": [
            [
                0,
                59,
                "Throws-1"
            ],
            [
                70,
                90,
                "Throws-2"
            ],
            [
                109,
                120,
                "NotNull"
            ]
        ]
    },
    {
        "text": "a non-null property key",
        "meta": {
            "doc_index": 58002,
            "doc_name": "javax.swing.text.Document.getProperty(java.lang.Object).<P>key"
        },
        "labels": [
            [
                11,
                23,
                "NotNull"
            ]
        ]
    },
    {
        "text": "If non-null, a primitive array in which to return the pixel data.",
        "meta": {
            "doc_index": 51341,
            "doc_name": "java.awt.image.SampleModel.getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer).<P>obj"
        },
        "labels": [
            [
                13,
                30,
                "Returns-1"
            ],
            [
                50,
                64,
                "Returns-2"
            ]
        ]
    },
    {
        "text": "Return the LayoutPath, or null if the layout path is the default path (x maps to advance, y maps to offset).",
        "meta": {
            "doc_index": 30577,
            "doc_name": "getLayoutPath()"
        },
        "labels": [
            [
                7,
                21,
                "Returned"
            ],
            [
                26,
                30,
                "Returned"
            ],
            [
                34,
                49,
                "EQ-1"
            ],
            [
                53,
                69,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "Returns the rendering style attributes for the text range, or null.",
        "meta": {
            "doc_index": 30864,
            "doc_name": "getStyle()"
        },
        "labels": [
            [
                8,
                38,
                "Returned"
            ],
            [
                62,
                66,
                "Returned"
            ]
        ]
    },
    {
        "text": "* The comparator, or null if priority queue uses elements' * natural ordering.",
        "meta": {
            "doc_index": 17062,
            "doc_name": "java.util.PriorityQueue.comparator"
        },
        "labels": [
            [
                2,
                16,
                "Returned"
            ],
            [
                21,
                25,
                "Returned"
            ]
        ]
    },
    {
        "text": "Returns an IIOMetadataNode representing the tiling information of the standard javax_imageio_1.0 metadata format, or null if no such information is available.",
        "meta": {
            "doc_index": 40458,
            "doc_name": "getStandardTileNode()"
        },
        "labels": [
            [
                8,
                26,
                "Returned"
            ],
            [
                117,
                121,
                "Returned"
            ]
        ]
    },
    {
        "text": "* Fix for 4213634 * If this is false, KEY_TYPED and KEY_RELEASED events are NOT * processed.",
        "meta": {
            "doc_index": 22806,
            "doc_name": "javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper.receivedKeyPressed"
        },
        "labels": [
            [
                23,
                27,
                "EQ-1"
            ],
            [
                31,
                36,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "If the activator knows the object to be active already, and force is false , the stub with a \"live\" reference is returned immediately to the caller; otherwise, if the activator does not know that corresponding the remote object is active, the activator uses the activation descriptor information (previously registered) to determine the group (VM) in which the object should be activated.",
        "meta": {
            "doc_index": 35112,
            "doc_name": "activate(ActivationID id, boolean force)"
        },
        "labels": [
            [
                60,
                65,
                "EQ-1"
            ],
            [
                69,
                74,
                "EQ-2"
            ],
            [
                77,
                85,
                "Returned"
            ]
        ]
    },
    {
        "text": "if start is negative, or start is greater than end or end is greater than s.length()",
        "meta": {
            "doc_index": 60096,
            "doc_name": "java.lang.AbstractStringBuilder.append(java.lang.CharSequence,int,int).IndexOutOfBoundsException"
        },
        "labels": [
            [
                3,
                8,
                "Negative"
            ],
            [
                25,
                30,
                "GT-1"
            ],
            [
                47,
                50,
                "GT-2"
            ],
            [
                54,
                57,
                "GT-1"
            ],
            [
                74,
                84,
                "GT-2"
            ]
        ]
    },
    {
        "text": "The duration will be positive for a gap and negative for an overlap.",
        "meta": {
            "doc_index": 37403,
            "doc_name": "getDuration()"
        },
        "labels": [
            [
                0,
                12,
                "Negativeable"
            ]
        ]
    },
    {
        "text": "To display the string, paintString must be true. * *",
        "meta": {
            "doc_index": 21926,
            "doc_name": "javax.swing.JProgressBar.progressString"
        },
        "labels": [
            [
                23,
                34,
                "EQ-1"
            ],
            [
                43,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "If index is negative or not smaller than the buffer's limit, minus three",
        "meta": {
            "doc_index": 60736,
            "doc_name": "java.nio.ByteBuffer.putFloat(int,float).IndexOutOfBoundsException"
        },
        "labels": [
            [
                3,
                8,
                "Negative"
            ],
            [
                41,
                59,
                "GE-2"
            ]
        ]
    },
    {
        "text": "gridwidth should be non-negative and the default * value is 1. *",
        "meta": {
            "doc_index": 8535,
            "doc_name": "java.awt.GridBagConstraints.gridwidth"
        },
        "labels": [
            [
                0,
                9,
                "Nonnegative"
            ],
            [
                37,
                56,
                "EQ-1"
            ],
            [
                60,
                61,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "if parent is not the same Container that this was created with",
        "meta": {
            "doc_index": 64945,
            "doc_name": "javax.swing.GroupLayout.minimumLayoutSize(java.awt.Container).IllegalArgumentException"
        },
        "labels": [
            [
                3,
                9,
                "NEQ-1"
            ],
            [
                26,
                35,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "If a security manager is present, and the invoker's class loader is not null and the invoker's class loader is not the same as or an ancestor of the system class loader, then this method invokes the security manager's checkPermission method with a RuntimePermission(\"getClassLoader\") permission to verify access to the system class loader.",
        "meta": {
            "doc_index": 32188,
            "doc_name": "getSystemClassLoader()"
        },
        "labels": [
            [
                38,
                64,
                "NotNull"
            ]
        ]
    },
    {
        "text": "If a security manager is present, and the caller's class loader is not null and the caller's class loader is not the same as or an ancestor of the class loader for the class whose class loader is requested, then this method calls the security manager's checkPermission method with a RuntimePermission(\"getClassLoader\") permission to ensure it's ok to access the class loader for the class.",
        "meta": {
            "doc_index": 32100,
            "doc_name": "getClassLoader()"
        },
        "labels": [
            [
                38,
                63,
                "NotNull"
            ]
        ]
    },
    {
        "text": "if parent is not the same Container this was created with",
        "meta": {
            "doc_index": 64943,
            "doc_name": "javax.swing.GroupLayout.preferredLayoutSize(java.awt.Container).IllegalArgumentException"
        },
        "labels": [
            [
                3,
                9,
                "NEQ-1"
            ],
            [
                26,
                35,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "An unspecified behavior will be caused if the id parameter of any particular ContainerEvent instance is not in the range from CONTAINER_FIRST to CONTAINER_LAST.",
        "meta": {
            "doc_index": 130,
            "doc_name": "java.awt.event.ContainerEvent"
        },
        "labels": [
            [
                42,
                58,
                "LT-1"
            ],
            [
                126,
                141,
                "LT-2"
            ],
            [
                145,
                159,
                "GT-2"
            ]
        ]
    },
    {
        "text": "This method differs from the getBounds in that the getBounds method only returns the bounds of the enclosing ellipse of this Arc2D without considering the starting and ending angles of this Arc2D.",
        "meta": {
            "doc_index": 30683,
            "doc_name": "getBounds2D()"
        },
        "labels": [
            [
                47,
                60,
                "Returns-1"
            ],
            [
                81,
                91,
                "Returns-2"
            ]
        ]
    },
    {
        "text": "Otherwise, if the class loader is an instance of URLClassLoader, then the returned string is a space-separated list of the external forms of the URLs returned by invoking the getURLs methods of the loader.",
        "meta": {
            "doc_index": 35168,
            "doc_name": "getDefaultProviderInstance()"
        },
        "labels": [
            [
                14,
                30,
                "Type-1"
            ],
            [
                49,
                63,
                "Type-2"
            ],
            [
                70,
                89,
                "ReturnsBy-1"
            ],
            [
                171,
                182,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "text": "Finally, if the class loader is not an instance of URLClassLoader, then the value of the java.rmi.server.codebase property (or possibly an earlier cached value) is returned, or null is returned if that property is not set.",
        "meta": {
            "doc_index": 35168,
            "doc_name": "getDefaultProviderInstance()"
        },
        "labels": [
            [
                12,
                28,
                "NotType-1"
            ],
            [
                51,
                65,
                "NotType-2"
            ],
            [
                72,
                160,
                "Returned"
            ],
            [
                177,
                181,
                "Returned"
            ]
        ]
    },
    {
        "text": "The Timestamp.equals(Object) method never returns true when passed an object that isn't an instance of java.sql.Timestamp, because the nanos component of a date is unknown.",
        "meta": {
            "doc_index": 1705,
            "doc_name": "java.sql.Timestamp"
        },
        "labels": [
            [
                0,
                28,
                "NotReturns-1"
            ],
            [
                50,
                54,
                "NotReturns-2"
            ],
            [
                67,
                76,
                "NotType-1"
            ],
            [
                103,
                121,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "If this is false the viewport's view is obtained and if it * is an instance of Scrollable the block increment * from it is used.",
        "meta": {
            "doc_index": 21982,
            "doc_name": "javax.swing.JScrollPane.ScrollBar.blockIncrementSet"
        },
        "labels": [
            [
                3,
                7,
                "EQ-1"
            ],
            [
                11,
                16,
                "EQ-2"
            ],
            [
                56,
                58,
                "Type-1"
            ],
            [
                79,
                89,
                "Type-2"
            ]
        ]
    },
    {
        "text": "If the returned object represents a {@linkplain JavaFileObject.Kind#SOURCE source} or {@linkplain JavaFileObject.Kind#CLASS class} file, it must be an instance of JavaFileObject.",
        "meta": {
            "doc_index": 48030,
            "doc_name": "getFileForOutput(Location location, String packageName, String relativeName, FileObject sibling)"
        },
        "labels": [
            [
                3,
                22,
                "Type-1"
            ],
            [
                163,
                177,
                "Type-2"
            ]
        ]
    },
    {
        "text": "The image returned will be an instance of VolatileImage, or null if a VolatileImage object could not be instantiated.",
        "meta": {
            "doc_index": 46622,
            "doc_name": "getVolatileOffscreenBuffer(Component c, int proposedWidth, int proposedHeight)"
        },
        "labels": [
            [
                0,
                9,
                "Returned"
            ],
            [
                42,
                55,
                "Type-2"
            ],
            [
                60,
                64,
                "Returned"
            ]
        ]
    },
    {
        "text": "Generally, the layout will look like:  ------------------ | i | message | | c | message | | o | message | | n | message | ------------------ | buttons | |________________|  icon is an instance of Icon that is wrapped inside a JLabel.",
        "meta": {
            "doc_index": 4361,
            "doc_name": "javax.swing.plaf.basic.BasicOptionPaneUI"
        },
        "labels": [
            [
                173,
                177,
                "Type-1"
            ],
            [
                196,
                200,
                "Type-2"
            ]
        ]
    },
    {
        "text": "The returned value should usually be an instance of CompositeDataSupport, or a class that serializes as a CompositeDataSupport via a writeReplace method.",
        "meta": {
            "doc_index": 41089,
            "doc_name": "toCompositeData(CompositeType ct)"
        },
        "labels": [
            [
                0,
                18,
                "Type-1"
            ],
            [
                52,
                72,
                "Type-2"
            ]
        ]
    },
    {
        "text": "if protection is not an instance of either PasswordProtection or CallbackHandlerProtection; or if file does not exist or does not refer to a normal file",
        "meta": {
            "doc_index": 61746,
            "doc_name": "java.security.KeyStore.Builder.newInstance(java.lang.String,java.security.Provider,java.io.File,java.security.KeyStore.ProtectionParameter).IllegalArgumentException"
        },
        "labels": [
            [
                3,
                13,
                "NotType-1"
            ],
            [
                43,
                61,
                "NotType-2"
            ],
            [
                65,
                90,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "Smallest values for digits (Maximum is Integer.MAX_VALUE)",
        "meta": {
            "doc_index": 12042,
            "doc_name": "java.math.MathContext.MIN_DIGITS"
        },
        "labels": [
            [
                28,
                35,
                "EQ-1"
            ],
            [
                39,
                56,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "Each class is loaded, using the system class loader, and instantiated by invoking a one argument constructor whose formal parameter type is FileSystemProvider.",
        "meta": {
            "doc_index": 34741,
            "doc_name": "getDefault()"
        },
        "labels": [
            [
                115,
                131,
                "Type-1"
            ],
            [
                140,
                158,
                "Type-2"
            ]
        ]
    },
    {
        "text": "If the argument is NaN, the result is the string \"NaN\".",
        "meta": {
            "doc_index": 32220,
            "doc_name": "toString(double d)"
        },
        "labels": [
            [
                3,
                15,
                "EQ-1"
            ],
            [
                19,
                22,
                "EQ-2"
            ],
            [
                24,
                34,
                "EQ-1"
            ],
            [
                38,
                54,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "The declared return type of this method is Adjustable to maintain backward compatibility.",
        "meta": {
            "doc_index": 31390,
            "doc_name": "getHAdjustable()"
        },
        "labels": [
            [
                0,
                24,
                "EQ-1"
            ],
            [
                43,
                53,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "The capacity, if unspecified, is equal to Integer#MAX_VALUE.",
        "meta": {
            "doc_index": 2193,
            "doc_name": "java.util.concurrent.LinkedBlockingQueue"
        },
        "labels": [
            [
                0,
                12,
                "EQ-1"
            ],
            [
                42,
                59,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "The * default value is TransformAttribute.IDENTITY. * *",
        "meta": {
            "doc_index": 8012,
            "doc_name": "java.awt.font.TextAttribute.TRANSFORM"
        },
        "labels": [
            [
                0,
                19,
                "EQ-1"
            ],
            [
                23,
                50,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "Returns the same value as the nextToken method, except that its declared return value is Object rather than String.",
        "meta": {
            "doc_index": 40014,
            "doc_name": "nextElement()"
        },
        "labels": [
            [
                8,
                46,
                "Returned"
            ],
            [
                73,
                85,
                "Type-1"
            ],
            [
                89,
                95,
                "Type-2"
            ],
            [
                108,
                114,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "If the cutover date is January 1, the method returns Gregorian.",
        "meta": {
            "doc_index": 38701,
            "doc_name": "getCutoverCalendarSystem()"
        },
        "labels": [
            [
                3,
                19,
                "EQ-1"
            ],
            [
                23,
                32,
                "EQ-2"
            ],
            [
                34,
                44,
                "Returns-1"
            ],
            [
                53,
                62,
                "Returns-2"
            ]
        ]
    },
    {
        "text": "Two fonts such as Helvetica Italic and Helvetica Bold have the same family name, Helvetica, whereas their font face names are Helvetica Bold and Helvetica Italic.",
        "meta": {
            "doc_index": 30608,
            "doc_name": "getFamily()"
        },
        "labels": [
            [
                100,
                121,
                "EQ-1"
            ],
            [
                126,
                140,
                "EQ-2"
            ],
            [
                145,
                161,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "Returns the maximum layout size, which is Integer.MAX_VALUE in both directions.",
        "meta": {
            "doc_index": 44551,
            "doc_name": "maximumLayoutSize(Container target)"
        },
        "labels": [
            [
                8,
                31,
                "Returned"
            ],
            [
                42,
                59,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "if the rounding mode is RoundingMode.UNNECESSARY and the result is inexact.",
        "meta": {
            "doc_index": 60575,
            "doc_name": "java.math.BigDecimal.doRound(java.math.BigDecimal,java.math.MathContext).ArithmeticException"
        },
        "labels": [
            [
                3,
                20,
                "EQ-1"
            ],
            [
                24,
                48,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "If the source is Redirect.PIPE (the initial value), then the standard input of a subprocess can be written to using the output stream returned by Process#getOutputStream().",
        "meta": {
            "doc_index": 32976,
            "doc_name": "redirectInput(Redirect source)"
        },
        "labels": [
            [
                3,
                13,
                "EQ-1"
            ],
            [
                17,
                30,
                "EQ-2"
            ],
            [
                116,
                133,
                "ReturnsBy-1"
            ],
            [
                146,
                171,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "text": "if the specified dimensions argument is a zero-dimensional array, if componentType is Void#TYPE, or if the number of dimensions of the requested array instance exceed 255.",
        "meta": {
            "doc_index": 60409,
            "doc_name": "java.lang.reflect.Array.newInstance(java.lang.Class<?>,int...).java.lang.IllegalArgumentException"
        },
        "labels": [
            [
                3,
                36,
                "EQ-1"
            ],
            [
                40,
                64,
                "EQ-2"
            ],
            [
                69,
                82,
                "EQ-1"
            ],
            [
                86,
                95,
                "EQ-2"
            ],
            [
                103,
                113,
                "GT-1"
            ],
            [
                167,
                170,
                "GT-2"
            ]
        ]
    },
    {
        "text": "Possible values are GridBagConstraints.NONE (the default), GridBagConstraints.HORIZONTAL (make the component wide enough to fill its display area horizontally, but don't change its height), GridBagConstraints.VERTICAL (make the component tall enough to fill its display area vertically, but don't change its width), and GridBagConstraints.BOTH (make the component fill its display area entirely).",
        "meta": {
            "doc_index": 273,
            "doc_name": "java.awt.GridBagLayout"
        },
        "labels": [
            [
                9,
                15,
                "CanEQ-1"
            ],
            [
                20,
                43,
                "CanEQ-2"
            ],
            [
                59,
                88,
                "CanEQ-2"
            ],
            [
                190,
                217,
                "CanEQ-2"
            ],
            [
                320,
                343,
                "CanEQ-2"
            ]
        ]
    },
    {
        "text": "BigInteger equal to Long.MAX_VALUE.",
        "meta": {
            "doc_index": 11985,
            "doc_name": "java.math.BigDecimal.LongOverflow.LONGMAX"
        },
        "labels": [
            [
                0,
                10,
                "EQ-1"
            ],
            [
                20,
                34,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "A month is represented by an integer from 0 to 11; 0 is January, 1 is February, and so forth; thus 11 is December.",
        "meta": {
            "doc_index": 2275,
            "doc_name": "java.util.Date"
        },
        "labels": [
            [
                51,
                52,
                "EQ-1"
            ],
            [
                56,
                63,
                "EQ-2"
            ],
            [
                65,
                66,
                "EQ-1"
            ],
            [
                70,
                78,
                "EQ-2"
            ],
            [
                99,
                101,
                "EQ-1"
            ],
            [
                105,
                113,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "It can be Long.MAX_VALUE to indicate that there is no timeout.",
        "meta": {
            "doc_index": 56387,
            "doc_name": "javax.management.remote.rmi.RMIConnection.fetchNotifications(long,int,long).<P>timeout"
        },
        "labels": [
            [
                0,
                2,
                "CanEQ-1"
            ],
            [
                10,
                24,
                "CanEQ-2"
            ]
        ]
    },
    {
        "text": "The initial value is Redirect.PIPE.",
        "meta": {
            "doc_index": 32984,
            "doc_name": "redirectError()"
        },
        "labels": [
            [
                0,
                17,
                "EQ-1"
            ],
            [
                21,
                34,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "This behavior is controlled by the java.rmi.server.disableHttp property, whose default value is true.",
        "meta": {
            "doc_index": 1436,
            "doc_name": "java.rmi.server.RMISocketFactory"
        },
        "labels": [
            [
                79,
                92,
                "EQ-1"
            ],
            [
                96,
                100,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "Otherwise, the string value is a comma-separated list of the ranges in the canonical array form, where each range is represented as \"i\" if the lower bound equals the upper bound or \"i-j\" otherwise.",
        "meta": {
            "doc_index": 41948,
            "doc_name": "toString()"
        },
        "labels": [
            [
                139,
                154,
                "EQ-1"
            ],
            [
                162,
                177,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "if the method is an instance method and the specified object argument is not an instance of the class or interface declaring the underlying method (or of a subclass or implementor thereof); if the number of actual and formal parameters differ; if an unwrapping conversion for primitive arguments fails; or if, after possible unwrapping, a parameter value cannot be converted to the corresponding formal parameter type by a method invocation conversion.",
        "meta": {
            "doc_index": 60428,
            "doc_name": "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...).java.lang.IllegalArgumentException"
        },
        "labels": [
            [
                40,
                69,
                "NotType-1"
            ],
            [
                81,
                146,
                "NotType-2"
            ],
            [
                193,
                213,
                "NEQ-1"
            ],
            [
                218,
                235,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "If the procedure is a member of a class defined in the script and thiz is an instance of that class returned by a previous execution or invocation, the named method is called through that instance.",
        "meta": {
            "doc_index": 56725,
            "doc_name": "javax.script.Invocable.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object...).<P>thiz"
        },
        "labels": [
            [
                3,
                16,
                "Type-1"
            ],
            [
                20,
                61,
                "Type-2"
            ],
            [
                66,
                70,
                "Type-1"
            ],
            [
                74,
                99,
                "Type-2"
            ]
        ]
    },
    {
        "text": "The getRemoved() method returns a list of elements that have been replaced or removed from the list.",
        "meta": {
            "doc_index": 2566,
            "doc_name": "javafx.collections.ListChangeListener.Change"
        },
        "labels": [
            [
                4,
                16,
                "Returns-1"
            ],
            [
                32,
                50,
                "Returns-2"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of ListExpression has to implement the method javafx.beans.value.ObservableListValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2362,
            "doc_name": "javafx.beans.binding.ListExpression"
        },
        "labels": [
            [
                67,
                111,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "Task<ObservableList<Rectangle>> task = new Task<ObservableList<Rectangle>>() { @Override protected ObservableList<Rectangle> call() throws Exception { updateMessage(\"Creating Rectangles\"); ObservableList<Rectangle> results = FXCollections.observableArrayList(); for (int i=0; i<100; i++) { if (isCancelled()) break; Rectangle r = new Rectangle(10, 10); r.setX(10 * i); results.add(r); updateProgress(i, 100); } return results; } };  In the above example, we are going to create 100 rectangles and return them from this task.",
        "meta": {
            "doc_index": 2592,
            "doc_name": "javafx.concurrent.Task"
        },
        "labels": [
            [
                478,
                492,
                "ReturnsBy-1"
            ],
            [
                514,
                523,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "text": "If both methods return true, wasReplaced() will also return true.",
        "meta": {
            "doc_index": 2566,
            "doc_name": "javafx.collections.ListChangeListener.Change"
        },
        "labels": [
            [
                3,
                15,
                "Returns-1"
            ],
            [
                23,
                27,
                "Returns-2"
            ],
            [
                29,
                42,
                "Returns-1"
            ],
            [
                60,
                64,
                "Returns-2"
            ]
        ]
    },
    {
        "text": "Accessing these properties from a background thread (including the call() method) will result in runtime exceptions being raised.",
        "meta": {
            "doc_index": 2592,
            "doc_name": "javafx.concurrent.Task"
        },
        "labels": [
            [
                97,
                115,
                "Thrown"
            ]
        ]
    },
    {
        "text": "If the wrapped list of a MapExpression is null, all methods implementing the Map interface will behave as if they were applied to an immutable empty list.",
        "meta": {
            "doc_index": 2368,
            "doc_name": "javafx.beans.binding.MapExpression"
        },
        "labels": [
            [
                3,
                38,
                "EQ-1"
            ],
            [
                42,
                46,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "An implementation of Task must override the javafx.concurrent.Task#call() method.",
        "meta": {
            "doc_index": 2592,
            "doc_name": "javafx.concurrent.Task"
        },
        "labels": [
            [
                44,
                73,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of MapExpression has to implement the method javafx.beans.value.ObservableMapValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2368,
            "doc_name": "javafx.beans.binding.MapExpression"
        },
        "labels": [
            [
                66,
                109,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of BooleanExpression has to implement the method javafx.beans.value.ObservableBooleanValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2352,
            "doc_name": "javafx.beans.binding.BooleanExpression"
        },
        "labels": [
            [
                70,
                117,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "If the wrapped list of a SetExpression is null, all methods implementing the Set interface will behave as if they were applied to an immutable empty set.",
        "meta": {
            "doc_index": 2378,
            "doc_name": "javafx.beans.binding.SetExpression"
        },
        "labels": [
            [
                3,
                38,
                "EQ-1"
            ],
            [
                42,
                46,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of IntegerExpression has to implement the method javafx.beans.value.ObservableIntegerValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2358,
            "doc_name": "javafx.beans.binding.IntegerExpression"
        },
        "labels": [
            [
                70,
                117,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of DoubleExpression has to implement the method javafx.beans.value.ObservableDoubleValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2354,
            "doc_name": "javafx.beans.binding.DoubleExpression"
        },
        "labels": [
            [
                69,
                115,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of LongExpression has to implement the method javafx.beans.value.ObservableLongValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2364,
            "doc_name": "javafx.beans.binding.LongExpression"
        },
        "labels": [
            [
                67,
                111,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "public class UpdateCustomerTask extends Task<Customer> { private final Customer customer; public UpdateCustomerTask(Customer customer) { this.customer = customer; } @Override protected Customer call() throws Exception { // pseudo-code: // query the database // read the values // Now update the customer Platform.runLater(new Runnable() { @Override public void run() { customer.setFirstName(rs.getString(\"FirstName\")); // etc } }); return customer; } }  A Task Which Returns No Value Many, if not most, Tasks should return a value upon completion.",
        "meta": {
            "doc_index": 2592,
            "doc_name": "javafx.concurrent.Task"
        },
        "labels": [
            [
                503,
                508,
                "Returns-1"
            ],
            [
                523,
                530,
                "Returns-2"
            ]
        ]
    },
    {
        "text": "NOTE: The QTKit based platform is deprecated and will be removed in a future release.",
        "meta": {
            "doc_index": 1618,
            "doc_name": "com.sun.media.jfxmediaimpl.platform.osx.OSXPlatform"
        },
        "labels": [
            [
                6,
                30,
                "Deprecated"
            ]
        ]
    },
    {
        "text": "Note: all implementation of javafx.beans.binding.BooleanBinding returned by the comparisons in this class consider a String that is null equal to an empty String.",
        "meta": {
            "doc_index": 2381,
            "doc_name": "javafx.beans.binding.StringExpression"
        },
        "labels": [
            [
                6,
                63,
                "ReturnsBy-1"
            ],
            [
                76,
                105,
                "ReturnsBy-2"
            ],
            [
                115,
                123,
                "EQ-1"
            ],
            [
                132,
                136,
                "EQ-2"
            ],
            [
                146,
                161,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "Second, if the Task implementation makes use of any blocking calls (such as NIO InterruptibleChannels or Thread.sleep) and the task is cancelled while in such a blocking call, an InterruptedException is thrown.",
        "meta": {
            "doc_index": 2592,
            "doc_name": "javafx.concurrent.Task"
        },
        "labels": [
            [
                176,
                199,
                "Thrown"
            ]
        ]
    },
    {
        "text": "If the wrapped list of a ListExpression is null, all methods implementing the List interface will behave as if they were applied to an immutable empty list.",
        "meta": {
            "doc_index": 2362,
            "doc_name": "javafx.beans.binding.ListExpression"
        },
        "labels": [
            [
                3,
                39,
                "EQ-1"
            ],
            [
                43,
                47,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of ObjectExpression has to implement the method javafx.beans.value.ObservableObjectValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2374,
            "doc_name": "javafx.beans.binding.ObjectExpression"
        },
        "labels": [
            [
                69,
                115,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of FloatExpression has to implement the method javafx.beans.value.ObservableFloatValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2356,
            "doc_name": "javafx.beans.binding.FloatExpression"
        },
        "labels": [
            [
                68,
                113,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of StringExpression has to implement the method javafx.beans.value.ObservableStringValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2381,
            "doc_name": "javafx.beans.binding.StringExpression"
        },
        "labels": [
            [
                69,
                115,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "A concrete sub-class of SetExpression has to implement the method javafx.beans.value.ObservableSetValue#get(), which provides the actual value of this expression.",
        "meta": {
            "doc_index": 2378,
            "doc_name": "javafx.beans.binding.SetExpression"
        },
        "labels": [
            [
                66,
                109,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "It provides all the functionality required for a property except for the getBean() and getName() methods, which must be implemented by extending classes.",
        "meta": {
            "doc_index": 2425,
            "doc_name": "javafx.beans.property.BooleanPropertyBase"
        },
        "labels": [
            [
                73,
                104,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "Note: In order to create list with sequential access, you should override listIterator(),  methods and use them in get, size() and other methods accordingly.",
        "meta": {
            "doc_index": 2576,
            "doc_name": "javafx.collections.ObservableListBase"
        },
        "labels": [
            [
                74,
                88,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "To support other color spaces one can override produce() method to return custom instance of ImageTypeSpecifier.",
        "meta": {
            "doc_index": 4500,
            "doc_name": "com.sun.imageio.plugins.jpeg.ImageTypeProducer"
        },
        "labels": [
            [
                47,
                56,
                "Returns-1"
            ],
            [
                74,
                111,
                "Returns-2"
            ]
        ]
    },
    {
        "text": "Note that the default converter is implemented as an javafx.util.converter.IntegerStringConverter instance.",
        "meta": {
            "doc_index": 2927,
            "doc_name": "javafx.scene.control.SpinnerValueFactory.IntegerSpinnerValueFactory"
        },
        "labels": [
            [
                10,
                31,
                "Type-1"
            ],
            [
                53,
                97,
                "Type-2"
            ]
        ]
    },
    {
        "text": "The object implementing this interface must be returned from the node's getInputMethodRequests method.",
        "meta": {
            "doc_index": 3114,
            "doc_name": "javafx.scene.input.InputMethodRequests"
        },
        "labels": [
            [
                0,
                10,
                "ReturnsBy-1"
            ],
            [
                72,
                94,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "text": "BasicToggleButton implementation Warning: Serialized objects of this class will not be compatible with future Swing releases.",
        "meta": {
            "doc_index": 4688,
            "doc_name": "com.sun.java.swing.plaf.motif.MotifToggleButtonUI"
        },
        "labels": [
            [
                42,
                74,
                "Deprecated"
            ]
        ]
    },
    {
        "text": "MotifButton implementation Warning: Serialized objects of this class will not be compatible with future Swing releases.",
        "meta": {
            "doc_index": 4613,
            "doc_name": "com.sun.java.swing.plaf.motif.MotifButtonUI"
        },
        "labels": [
            [
                36,
                68,
                "Deprecated"
            ]
        ]
    },
    {
        "text": "Any implementation of this interface must return an exact copy of obj, preserving all aliasing across all objects reachable from obj.",
        "meta": {
            "doc_index": 4223,
            "doc_name": "com.sun.corba.se.spi.copyobject.ObjectCopier"
        },
        "labels": [
            [
                0,
                36,
                "Returns-1"
            ],
            [
                49,
                69,
                "Returns-2"
            ]
        ]
    },
    {
        "text": "ReflectiveCopyException must be thrown if the implementation cannot copy obj for some reason.",
        "meta": {
            "doc_index": 4223,
            "doc_name": "com.sun.corba.se.spi.copyobject.ObjectCopier"
        },
        "labels": [
            [
                0,
                23,
                "Thrown"
            ]
        ]
    },
    {
        "text": "It is also possible to create a class that implements the FSM interface by delegating to an FSM instance created by StateEngine.makeFSM.",
        "meta": {
            "doc_index": 4342,
            "doc_name": "com.sun.corba.se.spi.orbutil.fsm.FSM"
        },
        "labels": [
            [
                89,
                104,
                "ReturnsBy-1"
            ],
            [
                116,
                135,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "text": "To implement a more custom layout, a Region subclass must override computePrefWidth, computePrefHeight, and layoutChildren.",
        "meta": {
            "doc_index": 3172,
            "doc_name": "javafx.scene.layout.Region"
        },
        "labels": [
            [
                67,
                83,
                "MustOverride"
            ],
            [
                85,
                102,
                "MustOverride"
            ],
            [
                108,
                122,
                "MustOverride"
            ]
        ]
    },
    {
        "text": "if the spinners model is not an instance of SpinnerDateModel",
        "meta": {
            "doc_index": 279313,
            "doc_name": "javax.swing.JSpinner.DateEditor.DateEditor(javax.swing.JSpinner,java.lang.String).IllegalArgumentException"
        },
        "labels": [
            [
                3,
                21,
                "NotType-1"
            ],
            [
                44,
                60,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "if one or more elements have a type that is inconsistent with the DynArrays TypeCode",
        "meta": {
            "doc_index": 280191,
            "doc_name": "org.omg.DynamicAny._DynArrayStub.set_elements(org.omg.CORBA.Any[]).org.omg.DynamicAny.DynAnyPackage.TypeMismatch"
        },
        "labels": [
            [
                3,
                23,
                "NotType-1"
            ],
            [
                62,
                84,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "Note that the implementation is allowed to throw SAXException during the parsing when it finds an error.",
        "meta": {
            "doc_index": 279707,
            "doc_name": "javax.xml.bind.util.JAXBResult.getResult().javax.xml.bind.JAXBException"
        },
        "labels": [
            [
                49,
                61,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if the constraint object is not a string, or if it not one of the five specified constants.",
        "meta": {
            "doc_index": 273676,
            "doc_name": "java.awt.BorderLayout.addLayoutComponent(java.awt.Component,java.lang.Object).IllegalArgumentException"
        },
        "labels": [
            [
                3,
                24,
                "NotType-1"
            ],
            [
                34,
                40,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "If the descriptor construction fails for any reason, this exception will be thrown.",
        "meta": {
            "doc_index": 278008,
            "doc_name": "javax.management.modelmbean.DescriptorSupport.DescriptorSupport(java.lang.String...).RuntimeOperationsException"
        },
        "labels": [
            [
                53,
                67,
                "Thrown"
            ]
        ]
    },
    {
        "text": "IOException if suids do not match or if the repositoryID is not an RMIValueType",
        "meta": {
            "doc_index": 272607,
            "doc_name": "com.sun.corba.se.impl.util.RepositoryId.useFullValueDescription(java.lang.Class,java.lang.String).Throws"
        },
        "labels": [
            [
                0,
                11,
                "Thrown"
            ],
            [
                40,
                56,
                "NotType-1"
            ],
            [
                67,
                79,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "if the caller does not pass a security check for SecurityPermission(\"authProvider.name\"), where name is the value returned by this provider's getName method",
        "meta": {
            "doc_index": 275266,
            "doc_name": "java.security.AuthProvider.logout().SecurityException"
        },
        "labels": [
            [
                96,
                100,
                "ReturnsBy-1"
            ],
            [
                126,
                156,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "text": "if a database access error occurs, this method is called on a closed connection or the given parameter is not a java.util.Map object",
        "meta": {
            "doc_index": 275916,
            "doc_name": "java.sql.Connection.setTypeMap(java.util.Map<java.lang.String,java.lang.Class<?>>).java.sql.SQLException"
        },
        "labels": [
            [
                3,
                26,
                "Thrown"
            ],
            [
                83,
                102,
                "NotType-1"
            ],
            [
                112,
                132,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "if an I/O exception occurs while leaving the multicast group.",
        "meta": {
            "doc_index": 274853,
            "doc_name": "java.net.DatagramSocketImpl.leave(java.net.InetAddress).java.io.IOException"
        },
        "labels": [
            [
                3,
                19,
                "Thrown"
            ]
        ]
    },
    {
        "text": "Raising an exception will abort the request.",
        "meta": {
            "doc_index": 272788,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpGenericObjectServer.check(com.sun.jmx.snmp.agent.SnmpGenericMetaServer,javax.management.ObjectName,com.sun.jmx.snmp.agent.SnmpMibSubRequest,int).com.sun.jmx.snmp.SnmpStatusException"
        },
        "labels": [
            [
                8,
                20,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if a database access error occurs, this method is called on a closed CallableStatement or if the given Object parameter is ambiguous",
        "meta": {
            "doc_index": 279121,
            "doc_name": "javax.sql.RowSet.setObject(java.lang.String,java.lang.Object).java.sql.SQLException"
        },
        "labels": [
            [
                3,
                26,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if the underlying method throws an exception.",
        "meta": {
            "doc_index": 274680,
            "doc_name": "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...).java.lang.reflect.InvocationTargetException"
        },
        "labels": [
            [
                3,
                24,
                "Throws-1"
            ],
            [
                32,
                44,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "if an exception occurs",
        "meta": {
            "doc_index": 275295,
            "doc_name": "java.security.cert.CertificateFactory.generateCertPath(java.util.List<? extends java.security.cert.Certificate>).java.security.cert.CertificateException"
        },
        "labels": [
            [
                3,
                15,
                "Thrown"
            ]
        ]
    },
    {
        "text": "An exception occurred during introspection.",
        "meta": {
            "doc_index": 277976,
            "doc_name": "javax.management.MBeanServerConnection.getMBeanInfo(javax.management.ObjectName).javax.management.IntrospectionException"
        },
        "labels": [
            [
                0,
                12,
                "Thrown"
            ]
        ]
    },
    {
        "text": "If a naming exception was encountered while retrieving the reference.",
        "meta": {
            "doc_index": 278634,
            "doc_name": "javax.naming.Referenceable.getReference().javax.naming.NamingException"
        },
        "labels": [
            [
                3,
                21,
                "Thrown"
            ]
        ]
    },
    {
        "text": "An exception occurred when trying to invoke the getMBeanInfo of a Dynamic MBean.",
        "meta": {
            "doc_index": 277978,
            "doc_name": "javax.management.MBeanServerConnection.getMBeanInfo(javax.management.ObjectName).javax.management.ReflectionException"
        },
        "labels": [
            [
                0,
                12,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if an exception occurs while decoding",
        "meta": {
            "doc_index": 275300,
            "doc_name": "java.security.cert.CertificateFactorySpi.engineGenerateCertPath(java.io.InputStream).java.security.cert.CertificateException"
        },
        "labels": [
            [
                3,
                15,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if the specified action's run method threw a checked exception",
        "meta": {
            "doc_index": 275228,
            "doc_name": "java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction<T>,java.security.AccessControlContext).java.security.PrivilegedActionException"
        },
        "labels": [
            [
                3,
                36,
                "Throws-1"
            ],
            [
                43,
                62,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "(unchecked exception) Thrown if any element of attributes is not an instance of (PrintRequestAttributeSe.",
        "meta": {
            "doc_index": 278693,
            "doc_name": "javax.print.attribute.HashPrintRequestAttributeSet.HashPrintRequestAttributeSet(javax.print.attribute.PrintRequestAttributeSet).ClassCastException"
        },
        "labels": [
            [
                1,
                20,
                "Thrown"
            ],
            [
                32,
                57,
                "NotType-1"
            ],
            [
                81,
                104,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "If the XML formatted string construction fails for any reason, this exception will be thrown.",
        "meta": {
            "doc_index": 278009,
            "doc_name": "javax.management.modelmbean.DescriptorSupport.toXMLString().RuntimeOperationsException"
        },
        "labels": [
            [
                63,
                77,
                "Thrown"
            ]
        ]
    },
    {
        "text": "NAMESPACE_ERR: Always throws this exceptionn",
        "meta": {
            "doc_index": 273579,
            "doc_name": "com.sun.org.apache.xpath.internal.domapi.XPathEvaluatorImpl.DummyPrefixResolver.getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node).DOMException"
        },
        "labels": [
            [
                0,
                13,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if an I/O exception occurs.",
        "meta": {
            "doc_index": 275008,
            "doc_name": "java.net.URL.openConnection(java.net.Proxy).java.io.IOException"
        },
        "labels": [
            [
                3,
                19,
                "Thrown"
            ]
        ]
    },
    {
        "text": "Wraps an java.lang.Exception thrown when trying to invoke the setter.",
        "meta": {
            "doc_index": 272683,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(javax.management.ObjectName,java.lang.String).javax.management.ReflectionException"
        },
        "labels": [
            [
                9,
                28,
                "Thrown"
            ]
        ]
    },
    {
        "text": "ClassNotFoundException if class cannot be loaded.",
        "meta": {
            "doc_index": 272606,
            "doc_name": "com.sun.corba.se.impl.util.JDKBridge.loadClass(java.lang.String).throws"
        },
        "labels": [
            [
                0,
                22,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if a database access error occurs; this method is called on a closed result set or the result set type is TYPE_FORWARD_ONLY",
        "meta": {
            "doc_index": 276272,
            "doc_name": "java.sql.ResultSet.last().java.sql.SQLException"
        },
        "labels": [
            [
                3,
                26,
                "Thrown"
            ],
            [
                83,
                97,
                "Type-1"
            ],
            [
                106,
                123,
                "Type-2"
            ]
        ]
    },
    {
        "text": "if the owner is not an instance of Dialog or Frame",
        "meta": {
            "doc_index": 273800,
            "doc_name": "java.awt.Dialog.Dialog(java.awt.Window).java.lang.IllegalArgumentException"
        },
        "labels": [
            [
                3,
                12,
                "NotType-1"
            ],
            [
                35,
                41,
                "NotType-2"
            ],
            [
                45,
                50,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "In particular, an IOException may be thrown if the output stream has been closed.",
        "meta": {
            "doc_index": 274315,
            "doc_name": "java.io.OutputStream.write(int).java.io.IOException"
        },
        "labels": [
            [
                15,
                29,
                "Thrown"
            ]
        ]
    },
    {
        "text": "Throws exception on i/o error.",
        "meta": {
            "doc_index": 273410,
            "doc_name": "com.sun.org.apache.xerces.internal.parsers.XML11NonValidatingConfiguration.parse(com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource).java.io.IOException"
        },
        "labels": [
            [
                7,
                29,
                "Thrown"
            ]
        ]
    },
    {
        "text": "If an SnmpStatusException is thrown, the responsePdu is dropped and nothing is returned to to the manager.",
        "meta": {
            "doc_index": 272889,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpUserDataFactory.releaseUserData(java.lang.Object,com.sun.jmx.snmp.SnmpPdu).com.sun.jmx.snmp.SnmpStatusException"
        },
        "labels": [
            [
                3,
                25,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if an exception occurs during introspection.",
        "meta": {
            "doc_index": 274093,
            "doc_name": "java.beans.PropertyDescriptor.PropertyDescriptor(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method).java.beans.IntrospectionException"
        },
        "labels": [
            [
                3,
                15,
                "Thrown"
            ]
        ]
    },
    {
        "text": "A factory should only throw an exception if it does not want other factories to be used in an attempt to create an object.",
        "meta": {
            "doc_index": 278649,
            "doc_name": "javax.naming.spi.NamingManager.getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable<?,?>).java.lang.Exception"
        },
        "labels": [
            [
                0,
                9,
                "Throws-1"
            ],
            [
                28,
                40,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "If a naming exception was encountered while using the factories.",
        "meta": {
            "doc_index": 278640,
            "doc_name": "javax.naming.spi.DirectoryManager.getStateToBind(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable<?,?>,javax.naming.directory.Attributes).javax.naming.NamingException"
        },
        "labels": [
            [
                3,
                21,
                "Thrown"
            ]
        ]
    },
    {
        "text": "INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.",
        "meta": {
            "doc_index": 281089,
            "doc_name": "org.w3c.dom.ranges.Range.compareBoundaryPoints(short,org.w3c.dom.ranges.Range).org.w3c.dom.DOMException"
        },
        "labels": [
            [
                0,
                17,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if writing this property list to the specified output stream throws an IOException.",
        "meta": {
            "doc_index": 277012,
            "doc_name": "java.util.Properties.store(java.io.Writer,java.lang.String).java.io.IOException"
        },
        "labels": [
            [
                68,
                82,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if a database access error occurs, this method is called on a closed connection or the given parameters are not ResultSet constants indicating type, concurrency, and holdability",
        "meta": {
            "doc_index": 275929,
            "doc_name": "java.sql.Connection.prepareStatement(java.lang.String,int,int,int).java.sql.SQLException"
        },
        "labels": [
            [
                3,
                26,
                "Thrown"
            ]
        ]
    },
    {
        "text": "An IO exception from the parser, possibly from a byte stream or character stream supplied by the parser.",
        "meta": {
            "doc_index": 273358,
            "doc_name": "com.sun.org.apache.xerces.internal.parsers.BasicParserConfiguration.parse(com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource).java.io.IOException"
        },
        "labels": [
            [
                0,
                15,
                "ThrownBy-1"
            ],
            [
                21,
                31,
                "ThrownBy-2"
            ]
        ]
    },
    {
        "text": "if an exception occurs while decoding or the encoding requested is not supported",
        "meta": {
            "doc_index": 275294,
            "doc_name": "java.security.cert.CertificateFactory.generateCertPath(java.io.InputStream,java.lang.String).java.security.cert.CertificateException"
        },
        "labels": [
            [
                3,
                15,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if parameterName does not correspond to a named parameter; if a database access error occurs, this method is called on a closed CallableStatement or if the given Object parameter is ambiguous",
        "meta": {
            "doc_index": 275751,
            "doc_name": "java.sql.CallableStatement.setObject(java.lang.String,java.lang.Object).java.sql.SQLException"
        },
        "labels": [
            [
                62,
                85,
                "Thrown"
            ]
        ]
    },
    {
        "text": "a Java exception thrown of the base class cannot initialize.",
        "meta": {
            "doc_index": 272585,
            "doc_name": "com.sun.corba.se.impl.naming.pcosnaming.PersistentBindingIterator.PersistentBindingIterator(org.omg.CORBA.ORB,java.util.Hashtable,org.omg.PortableServer.POA).java.lang.Exception"
        },
        "labels": [
            [
                0,
                16,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if a database access error occurs, this method is called while participating in a distributed transaction, if this method is called on a closed connection or this Connection object is in auto-commit mode",
        "meta": {
            "doc_index": 275895,
            "doc_name": "java.sql.Connection.commit().java.sql.SQLException"
        },
        "labels": [
            [
                3,
                26,
                "Thrown"
            ]
        ]
    },
    {
        "text": "The exception will be added to the set returned by getMBeansFromURL.",
        "meta": {
            "doc_index": 277837,
            "doc_name": "javax.management.loading.MLet.check(java.lang.String,java.net.URL,java.lang.String,javax.management.loading.MLetContent).java.lang.Exception"
        },
        "labels": [
            [
                31,
                38,
                "ReturnsBy-1"
            ],
            [
                51,
                67,
                "ReturnsBy-2"
            ]
        ]
    },
    {
        "text": "(unchecked exception) Thrown if mimeType does not obey the syntax for a MIME media type string.",
        "meta": {
            "doc_index": 278795,
            "doc_name": "javax.print.DocFlavor.URL.URL(java.lang.String).IllegalArgumentException"
        },
        "labels": [
            [
                1,
                20,
                "Thrown"
            ]
        ]
    },
    {
        "text": "Wraps an exception thrown by the MBean's setter.",
        "meta": {
            "doc_index": 272691,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.setAttribute(javax.management.ObjectName,javax.management.Attribute).javax.management.MBeanException"
        },
        "labels": [
            [
                6,
                18,
                "ThrownBy-1"
            ],
            [
                29,
                47,
                "ThrownBy-2"
            ]
        ]
    },
    {
        "text": "The preRegister() (MBeanRegistration interface) method of the MBean has thrown an exception.",
        "meta": {
            "doc_index": 272662,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object[],java.lang.String[]).javax.management.MBeanRegistrationException"
        },
        "labels": [
            [
                0,
                17,
                "Throws-1"
            ],
            [
                79,
                91,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "Wraps a java.lang.Exception thrown while trying to invoke the method.",
        "meta": {
            "doc_index": 277955,
            "doc_name": "javax.management.MBeanServerConnection.invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[]).javax.management.ReflectionException"
        },
        "labels": [
            [
                6,
                27,
                "Thrown"
            ]
        ]
    },
    {
        "text": "The constructor of the object has thrown an exception",
        "meta": {
            "doc_index": 272743,
            "doc_name": "com.sun.jmx.mbeanserver.MBeanInstantiator.instantiate(java.lang.String,java.lang.Object[],java.lang.String[],java.lang.ClassLoader).javax.management.MBeanException"
        },
        "labels": [
            [
                0,
                29,
                "Throws-1"
            ],
            [
                41,
                53,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "In such a case, the MBean will be actually unregistered even though the unregisterMBean method threw an exception.",
        "meta": {
            "doc_index": 277921,
            "doc_name": "javax.management.MBeanServerConnection.unregisterMBean(javax.management.ObjectName).RuntimeMBeanException"
        },
        "labels": [
            [
                68,
                87,
                "Throws-1"
            ],
            [
                101,
                113,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "If a naming exception is encountered while closing the enumeration.",
        "meta": {
            "doc_index": 278630,
            "doc_name": "javax.naming.NamingEnumeration.close().javax.naming.NamingException"
        },
        "labels": [
            [
                3,
                21,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if param is an invalid parameter for this signature algorithm engine, the parameter is already set and cannot be set again, a security exception occurs, and so on.",
        "meta": {
            "doc_index": 275565,
            "doc_name": "java.security.Signature.setParameter(java.lang.String,java.lang.Object).java.security.InvalidParameterException"
        },
        "labels": [
            [
                124,
                144,
                "Thrown"
            ]
        ]
    },
    {
        "text": "If the postDeregister (MBeanRegistration interface) method of the MBean throws a RuntimeException, the unregisterMBean method will throw a RuntimeMBeanException, although the MBean unregistration succeeded.",
        "meta": {
            "doc_index": 277921,
            "doc_name": "javax.management.MBeanServerConnection.unregisterMBean(javax.management.ObjectName).RuntimeMBeanException"
        },
        "labels": [
            [
                7,
                21,
                "Throws-1"
            ],
            [
                79,
                97,
                "Throws-2"
            ],
            [
                103,
                118,
                "Throws-1"
            ],
            [
                139,
                160,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "NOT_SUPPORTED_ERR: if this node is of type Document, this exception might be raised if the DOM implementation doesn't support the insertion of a DocumentType or Element node.",
        "meta": {
            "doc_index": 281057,
            "doc_name": "org.w3c.dom.Node.insertBefore(org.w3c.dom.Node,org.w3c.dom.Node).org.w3c.dom.DOMException"
        },
        "labels": [
            [
                0,
                17,
                "Thrown"
            ],
            [
                22,
                31,
                "Type-1"
            ],
            [
                43,
                51,
                "Type-2"
            ]
        ]
    },
    {
        "text": "If a naming exception occurs while creating the context.",
        "meta": {
            "doc_index": 278650,
            "doc_name": "javax.naming.spi.NamingManager.getURLContext(java.lang.String,java.util.Hashtable<?,?>).javax.naming.NamingException"
        },
        "labels": [
            [
                3,
                21,
                "Thrown"
            ]
        ]
    },
    {
        "text": "The client may throw an exception during processing.",
        "meta": {
            "doc_index": 281256,
            "doc_name": "org.xml.sax.helpers.XMLFilterImpl.endElement(java.lang.String,java.lang.String,java.lang.String).org.xml.sax.SAXException"
        },
        "labels": [
            [
                0,
                10,
                "Throws-1"
            ],
            [
                21,
                33,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "Wraps an exception thrown by the MBean's invoked method.",
        "meta": {
            "doc_index": 272698,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[]).javax.management.MBeanException"
        },
        "labels": [
            [
                6,
                18,
                "ThrownBy-1"
            ],
            [
                29,
                55,
                "ThrownBy-2"
            ]
        ]
    },
    {
        "text": "TYPE_ERR: raised if resultType is not UNORDERED_NODE_SNAPSHOT_TYPE or ORDERED_NODE_SNAPSHOT_TYPE.",
        "meta": {
            "doc_index": 273593,
            "doc_name": "com.sun.org.apache.xpath.internal.domapi.XPathResultImpl.snapshotItem(int).org.w3c.dom.xpath.XPathException"
        },
        "labels": [
            [
                20,
                30,
                "NEQ-1"
            ],
            [
                38,
                66,
                "NEQ-2"
            ],
            [
                70,
                96,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "The constructor of the object has thrown an exception.",
        "meta": {
            "doc_index": 272709,
            "doc_name": "com.sun.jmx.mbeanserver.JmxMBeanServer.instantiate(java.lang.String,javax.management.ObjectName).javax.management.MBeanException"
        },
        "labels": [
            [
                4,
                15,
                "Throws-1"
            ],
            [
                41,
                53,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "if getting the manifest causes an IOException to be thrown.",
        "meta": {
            "doc_index": 274869,
            "doc_name": "java.net.JarURLConnection.getMainAttributes().java.io.IOException"
        },
        "labels": [
            [
                31,
                45,
                "Thrown"
            ]
        ]
    },
    {
        "text": "if obj is a local object, or else was created by a foreign ORB.",
        "meta": {
            "doc_index": 272596,
            "doc_name": "com.sun.corba.se.impl.orbutil.ORBUtility.connectAndGetIOR(com.sun.corba.se.spi.orb.ORB,org.omg.CORBA.Object).BAD_PARAM"
        },
        "labels": [
            [
                3,
                6,
                "EQ-1"
            ],
            [
                10,
                24,
                "EQ-2"
            ]
        ]
    },
    {
        "text": "The preRegister (MBeanRegistration interface) method of the MBean has thrown an exception.",
        "meta": {
            "doc_index": 277902,
            "doc_name": "javax.management.MBeanServerConnection.createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object[],java.lang.String[]).javax.management.MBeanRegistrationException"
        },
        "labels": [
            [
                4,
                52,
                "Throws-1"
            ],
            [
                77,
                89,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "Wraps a java.lang.Exception thrown by the MBean's invoked method.",
        "meta": {
            "doc_index": 272752,
            "doc_name": "com.sun.jmx.mbeanserver.MBeanServerDelegateImpl.invoke(java.lang.String,java.lang.Object[],java.lang.String[]).javax.management.MBeanException"
        },
        "labels": [
            [
                8,
                27,
                "ThrownBy-1"
            ],
            [
                38,
                64,
                "ThrownBy-2"
            ]
        ]
    },
    {
        "text": "The preDeregister ((MBeanRegistration interface) method of the MBean has thrown an exception.",
        "meta": {
            "doc_index": 277920,
            "doc_name": "javax.management.MBeanServerConnection.unregisterMBean(javax.management.ObjectName).javax.management.MBeanRegistrationException"
        },
        "labels": [
            [
                0,
                68,
                "Throws-1"
            ],
            [
                80,
                92,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "if closeClient throws this exception.",
        "meta": {
            "doc_index": 278510,
            "doc_name": "javax.management.remote.rmi.RMIServerImpl.clientClosed(javax.management.remote.rmi.RMIConnection).java.io.IOException"
        },
        "labels": [
            [
                3,
                14,
                "Throws-1"
            ],
            [
                22,
                36,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "if getting the JAR file for this connection causes an IOException to be thrown.",
        "meta": {
            "doc_index": 274867,
            "doc_name": "java.net.JarURLConnection.getJarEntry().java.io.IOException"
        },
        "labels": [
            [
                54,
                65,
                "Thrown"
            ]
        ]
    },
    {
        "text": "Note that RuntimeMBeanException can also be thrown by preDeregister, in which case the MBean will remain registered.",
        "meta": {
            "doc_index": 277921,
            "doc_name": "javax.management.MBeanServerConnection.unregisterMBean(javax.management.ObjectName).RuntimeMBeanException"
        },
        "labels": [
            [
                10,
                31,
                "ThrownBy-1"
            ],
            [
                54,
                67,
                "ThrownBy-2"
            ]
        ]
    },
    {
        "text": "Wraps an IllegalStateException if the ModelMBean is currently registered in the MBeanServer.",
        "meta": {
            "doc_index": 278012,
            "doc_name": "javax.management.modelmbean.ModelMBean.setModelMBeanInfo(javax.management.modelmbean.ModelMBeanInfo).javax.management.RuntimeOperationsException"
        },
        "labels": [
            [
                9,
                30,
                "Thrown"
            ]
        ]
    },
    {
        "text": "The client may throw an I/O-related exception while obtaining the new InputSource.",
        "meta": {
            "doc_index": 281248,
            "doc_name": "org.xml.sax.helpers.XMLFilterImpl.resolveEntity(java.lang.String,java.lang.String).java.io.IOException"
        },
        "labels": [
            [
                0,
                10,
                "Throws-1"
            ],
            [
                24,
                45,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "Signals that an I/O exception of some sort has occurred.",
        "meta": {
            "doc_index": 272972,
            "doc_name": "com.sun.jmx.snmp.daemon.SnmpInformRequest.sendPduPacket(byte[],int).java.io.IOException"
        },
        "labels": [
            [
                13,
                29,
                "Thrown"
            ]
        ]
    },
    {
        "text": "NOT_SUPPORTED_ERR: Always thrown if the current document does not support the \"XML\" feature, since namespaces were defined by XML.",
        "meta": {
            "doc_index": 281007,
            "doc_name": "org.w3c.dom.Document.createAttributeNS(java.lang.String,java.lang.String).org.w3c.dom.DOMException"
        },
        "labels": [
            [
                0,
                17,
                "Thrown"
            ]
        ]
    },
    {
        "text": "An IO exception from the parser, possibly from a byte stream or character stream supplied by the application.",
        "meta": {
            "doc_index": 281246,
            "doc_name": "org.xml.sax.helpers.XMLFilterImpl.parse(java.lang.String).java.io.IOException"
        },
        "labels": [
            [
                0,
                15,
                "ThrownBy-1"
            ],
            [
                25,
                31,
                "ThrownBy-2"
            ]
        ]
    },
    {
        "text": "Thrown on I/O error.",
        "meta": {
            "doc_index": 273379,
            "doc_name": "com.sun.org.apache.xerces.internal.parsers.DTDConfiguration.setInputSource(com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource).java.io.IOException"
        },
        "labels": [
            [
                10,
                19,
                "Thrown"
            ]
        ]
    },
    {
        "text": "NOT_SUPPORTED_ERR: Raised if the source node is of type DOCUMENT, DOCUMENT_TYPE.",
        "meta": {
            "doc_index": 281010,
            "doc_name": "org.w3c.dom.Document.adoptNode(org.w3c.dom.Node).org.w3c.dom.DOMException"
        },
        "labels": [
            [
                29,
                44,
                "Type-1"
            ],
            [
                56,
                79,
                "Type-2"
            ]
        ]
    },
    {
        "text": "Note, there is no guarantee that the exception will be thrown.",
        "meta": {
            "doc_index": 274843,
            "doc_name": "java.net.DatagramSocketImpl.peek(java.net.InetAddress).PortUnreachableException"
        },
        "labels": [
            [
                33,
                46,
                "Thrown"
            ]
        ]
    },
    {
        "text": "The method returns false if the descriptor is not valid, but throws this exception if the attempt to determine validity fails.",
        "meta": {
            "doc_index": 277806,
            "doc_name": "javax.management.ImmutableDescriptor.isValid().RuntimeOperationsException"
        },
        "labels": [
            [
                0,
                10,
                "Returns-1"
            ],
            [
                19,
                24,
                "Returns-2"
            ],
            [
                68,
                82,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "if the specified object is not an instance of the class or interface declaring the underlying field (or a subclass or implementor thereof), or if an unwrapping conversion fails.",
        "meta": {
            "doc_index": 274663,
            "doc_name": "java.lang.reflect.Field.setInt(java.lang.Object,int).java.lang.IllegalArgumentException"
        },
        "labels": [
            [
                3,
                23,
                "NotType-1"
            ],
            [
                31,
                68,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "if targetSqlType is a ARRAY, BLOB, CLOB, DATALINK, JAVA_OBJECT, NCHAR, NCLOB, NVARCHAR, LONGNVARCHAR, REF, ROWID, SQLXML or STRUCT data type and the JDBC driver does not support this data type",
        "meta": {
            "doc_index": 279117,
            "doc_name": "javax.sql.RowSet.setObject(java.lang.String,java.lang.Object,int,int).SQLFeatureNotSupportedException"
        },
        "labels": [
            [
                3,
                16,
                "Type-1"
            ],
            [
                20,
                140,
                "Type-2"
            ]
        ]
    },
    {
        "text": "INVALID_NODE_TYPE_ERR: Raised if an ancestor of refNode is an Entity, Notation or DocumentType node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.",
        "meta": {
            "doc_index": 281085,
            "doc_name": "org.w3c.dom.ranges.Range.selectNode(org.w3c.dom.Node).org.w3c.dom.ranges.RangeException"
        },
        "labels": [
            [
                33,
                55,
                "Type-1"
            ],
            [
                59,
                99,
                "Type-2"
            ],
            [
                106,
                113,
                "Type-1"
            ],
            [
                117,
                177,
                "Type-2"
            ]
        ]
    },
    {
        "text": "Wraps a java.lang.ClassNotFoundException or the java.lang.Exception that occurred when trying to invoke the object's constructor.",
        "meta": {
            "doc_index": 272745,
            "doc_name": "com.sun.jmx.mbeanserver.MBeanInstantiator.instantiate(java.lang.String,javax.management.ObjectName,java.lang.Object[],java.lang.String[],java.lang.ClassLoader).javax.management.ReflectionException"
        },
        "labels": [
            [
                8,
                67,
                "Thrown"
            ]
        ]
    },
    {
        "text": "The default implementation always throws this exception",
        "meta": {
            "doc_index": 276834,
            "doc_name": "java.text.NumberFormat.getRoundingMode().UnsupportedOperationException"
        },
        "labels": [
            [
                0,
                26,
                "Throws-1"
            ],
            [
                41,
                55,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "(unchecked exception) Thrown if any element of members is not a length-one or length-two array.",
        "meta": {
            "doc_index": 278763,
            "doc_name": "javax.print.attribute.standard.PageRanges.PageRanges(int[][]).IllegalArgumentException"
        },
        "labels": [
            [
                32,
                54,
                "NEQ-1"
            ],
            [
                62,
                94,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "INVALID_NODE_TYPE_ERR: Raised if the root container of refNode is not an Attr, Document, or DocumentFragment node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.",
        "meta": {
            "doc_index": 281076,
            "doc_name": "org.w3c.dom.ranges.Range.setStartBefore(org.w3c.dom.Node).org.w3c.dom.ranges.RangeException"
        },
        "labels": [
            [
                33,
                62,
                "NotType-1"
            ],
            [
                70,
                113,
                "NotType-2"
            ],
            [
                120,
                127,
                "Type-1"
            ],
            [
                131,
                191,
                "Type-2"
            ]
        ]
    },
    {
        "text": "if messageType is not either INFORMATION, WARNING, or ERROR, if optionType is not either YES_NO_OPTION, YES_NO_CANCEL_OPTION, or OK_CANCEL_OPTION, or if defaultOption does not correspond to one of the options in optionType.",
        "meta": {
            "doc_index": 278838,
            "doc_name": "javax.security.auth.callback.ConfirmationCallback.ConfirmationCallback(int,int,int).IllegalArgumentException"
        },
        "labels": [
            [
                3,
                14,
                "NEQ-1"
            ],
            [
                29,
                59,
                "NEQ-2"
            ],
            [
                64,
                74,
                "NEQ-1"
            ],
            [
                89,
                145,
                "NEQ-2"
            ],
            [
                153,
                166,
                "NEQ-1"
            ],
            [
                190,
                222,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "if one of the factories accessed throws an exception, or if an error was encountered while loading and instantiating the factory and object classes.",
        "meta": {
            "doc_index": 278649,
            "doc_name": "javax.naming.spi.NamingManager.getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable<?,?>).java.lang.Exception"
        },
        "labels": [
            [
                3,
                23,
                "Throws-1"
            ],
            [
                40,
                52,
                "Throws-2"
            ]
        ]
    },
    {
        "text": "TYPE_ERR: raised if resultType is not ANY_UNORDERED_NODE_TYPE or FIRST_ORDERED_NODE_TYPE.",
        "meta": {
            "doc_index": 273589,
            "doc_name": "com.sun.org.apache.xpath.internal.domapi.XPathResultImpl.getSingleNodeValue().org.w3c.dom.xpath.XPathException"
        },
        "labels": [
            [
                20,
                30,
                "NEQ-1"
            ],
            [
                38,
                88,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "Wraps a java.lang.ClassNotFoundException or a java.lang.Exception that occurred when trying to invoke the MBean's constructor.",
        "meta": {
            "doc_index": 277900,
            "doc_name": "javax.management.MBeanServerConnection.createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object[],java.lang.String[]).javax.management.ReflectionException"
        },
        "labels": [
            [
                6,
                65,
                "Thrown"
            ]
        ]
    },
    {
        "text": "TYPE_ERR: raised if resultType is not UNORDERED_NODE_ITERATOR_TYPE or ORDERED_NODE_ITERATOR_TYPE.",
        "meta": {
            "doc_index": 273591,
            "doc_name": "com.sun.org.apache.xpath.internal.domapi.XPathResultImpl.iterateNext().org.w3c.dom.xpath.XPathException"
        },
        "labels": [
            [
                20,
                30,
                "NEQ-1"
            ],
            [
                38,
                96,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "TYPE_ERR: raised if resultType is not BOOLEAN_TYPE.",
        "meta": {
            "doc_index": 281118,
            "doc_name": "org.w3c.dom.xpath.XPathResult.getBooleanValue().org.w3c.dom.xpath.XPathException"
        },
        "labels": [
            [
                20,
                30,
                "NEQ-1"
            ],
            [
                38,
                50,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "TYPE_ERR: raised if resultType is not STRING_TYPE.",
        "meta": {
            "doc_index": 281117,
            "doc_name": "org.w3c.dom.xpath.XPathResult.getStringValue().org.w3c.dom.xpath.XPathException"
        },
        "labels": [
            [
                20,
                30,
                "NEQ-1"
            ],
            [
                38,
                49,
                "NEQ-2"
            ]
        ]
    },
    {
        "text": "if the specified object is not an instance of the class or interface declaring the underlying field (or a subclass or implementor thereof), or if the field value cannot be converted to the type double by a widening conversion.",
        "meta": {
            "doc_index": 274639,
            "doc_name": "java.lang.reflect.Field.getDouble(java.lang.Object).java.lang.IllegalArgumentException"
        },
        "labels": [
            [
                3,
                23,
                "NotType-1"
            ],
            [
                31,
                68,
                "NotType-2"
            ]
        ]
    },
    {
        "text": "if the TypeCode of the parameter is not equivalent to the TypeCode of the union's discriminator",
        "meta": {
            "doc_index": 280092,
            "doc_name": "org.omg.DynamicAny.DynUnionOperations.set_discriminator(org.omg.DynamicAny.DynAny).org.omg.DynamicAny.DynAnyPackage.TypeMismatch"
        },
        "labels": [
            [
                3,
                32,
                "NEQ-1"
            ],
            [
                54,
                95,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 124612,
        "text": "Extend this class to create a WindowEvent listener and override the methods for the events of interest. (",
        "meta": {
            "doc_index": 7590,
            "doc_name": "java.awt.event.WindowAdapter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                64,
                102,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124452,
        "text": "This class replaces the deprecated SAX1 HandlerBase class.",
        "meta": {
            "doc_index": 14017,
            "doc_name": "org.xml.sax.helpers.DefaultHandler",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Replace-1"
            ],
            [
                35,
                57,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124540,
        "text": "An extending class has to override the method handle(long) which will be called in every frame.",
        "meta": {
            "doc_index": 2305,
            "doc_name": "javafx.animation.AnimationTimer",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                58,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124467,
        "text": "The method createDefaultDocument can be overriden to change this.",
        "meta": {
            "doc_index": 12733,
            "doc_name": "javax.swing.text.html.HTMLEditorKit",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                32,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124691,
        "text": "Use of an instance of this class as a DTMAxisIterator is deprecated.",
        "meta": {
            "doc_index": 5770,
            "doc_name": "com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                22,
                32,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124371,
        "text": "Note that in order to intercept all logging output, subclasses need only override the log(LogRecord) method.",
        "meta": {
            "doc_index": 9917,
            "doc_name": "java.util.logging.Logger",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                82,
                107,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124372,
        "text": "Subclasses must override getContents and provide an array, where each item in the array is a pair of objects.",
        "meta": {
            "doc_index": 9899,
            "doc_name": "java.util.ListResourceBundle",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                36,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124374,
        "text": "Extend this class and override the method for the event of interest. (",
        "meta": {
            "doc_index": 7566,
            "doc_name": "java.awt.event.HierarchyBoundsAdapter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                67,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124378,
        "text": "This interface is similar to the now-deprecated SAX 1.0 DocumentHandler interface, but it adds support for Namespaces and for reporting skipped entities (in non-validating XML processors).",
        "meta": {
            "doc_index": 14001,
            "doc_name": "org.xml.sax.ContentHandler",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                48,
                81,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124381,
        "text": "Subclasses of BasicAttribute should override these methods if they support them.",
        "meta": {
            "doc_index": 10828,
            "doc_name": "javax.naming.directory.BasicAttribute",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                58,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124389,
        "text": "The RemoteCall interface is deprecated because it is only used by deprecated methods of java.rmi.server.RemoteRef.",
        "meta": {
            "doc_index": 8887,
            "doc_name": "java.rmi.server.RemoteCall",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                24,
                "Deprecated"
            ],
            [
                77,
                113,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124391,
        "text": "Subclasses must override the actionPropertyChanged method, which is invoked from the propertyChange method as long as the target is still valid.",
        "meta": {
            "doc_index": 11310,
            "doc_name": "javax.swing.ActionPropertyChangeListener",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                57,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124397,
        "text": "Subclasses must override the include method to indicate whether the entry should be shown in the view.",
        "meta": {
            "doc_index": 12453,
            "doc_name": "javax.swing.RowFilter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                43,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124400,
        "text": "Subclasses should override the match() method as appropriate.",
        "meta": {
            "doc_index": 9997,
            "doc_name": "java.util.regex.Pattern.Node",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                45,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124401,
        "text": "The corresponding methods in Date are deprecated.",
        "meta": {
            "doc_index": 9738,
            "doc_name": "java.util.Date",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                33,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124402,
        "text": "To specify alternate caret policies, subclass CaretPolicy and override getStrongCaret.",
        "meta": {
            "doc_index": 7624,
            "doc_name": "java.awt.font.TextLayout.CaretPolicy",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                71,
                85,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124407,
        "text": "This invocation handler can be used in conjunction with a dynamic proxy instance as a replacement for a pregenerated stub class.",
        "meta": {
            "doc_index": 8889,
            "doc_name": "java.rmi.server.RemoteObjectInvocationHandler",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                23,
                "Replace-1"
            ],
            [
                102,
                127,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124408,
        "text": "Additionally, you should also override Cell#cancelEdit() to reset the UI back to its original visual state when the editing concludes.",
        "meta": {
            "doc_index": 3020,
            "doc_name": "javafx.scene.control.TreeView",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                39,
                56,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124409,
        "text": "As of JAXB 2.0, this class is deprecated and optional.",
        "meta": {
            "doc_index": 13077,
            "doc_name": "javax.xml.bind.Validator",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                26,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124413,
        "text": "If addEdit returns false replaceEdit is called on the new edit with the current edit passed in as the argument.",
        "meta": {
            "doc_index": 12990,
            "doc_name": "javax.swing.undo.UndoableEdit",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                10,
                "Returns-1"
            ],
            [
                19,
                24,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 124414,
        "text": "If you use DefaultTableModel with a TableRowSorter you are strongly encouraged to override getColumnClass to return the appropriate type.",
        "meta": {
            "doc_index": 12503,
            "doc_name": "javax.swing.table.DefaultTableModel",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                82,
                105,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124417,
        "text": "A stateful implementation must override the clone method if necessary in order to allow a PKIX CertPathBuilder to efficiently backtrack and try other paths.",
        "meta": {
            "doc_index": 8975,
            "doc_name": "java.security.cert.PKIXCertPathChecker",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                56,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124423,
        "text": "You can override this default by overriding handleNotification in a subclass, or by passing an Executor to the constructor.",
        "meta": {
            "doc_index": 10686,
            "doc_name": "javax.management.NotificationBroadcasterSupport",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                62,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124427,
        "text": "Some pointers: It is recommended that subclasses of Cell override the startEdit() method to update the visuals of the cell when enters the editing state.",
        "meta": {
            "doc_index": 2814,
            "doc_name": "javafx.scene.control.Cell",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                66,
                88,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124428,
        "text": "If the value associated with this key is an instance of UIDefaults, then the values in that defaults table will override the standard Nimbus defaults in UIManager, but for that component instance only.",
        "meta": {
            "doc_index": 12250,
            "doc_name": "javax.swing.plaf.nimbus.NimbusStyle",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                37,
                "Type-1"
            ],
            [
                56,
                66,
                "Type-2"
            ]
        ]
    },
    {
        "id": 124430,
        "text": "This is a replacement for the sun.awt.AppContext.",
        "meta": {
            "doc_index": 8065,
            "doc_name": "java.beans.ThreadGroupContext",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Replace-1"
            ],
            [
                30,
                48,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124432,
        "text": "Additionally, because no task in this tree implements an onCompletion(CountedCompleter) method, tryComplete() can be replaced with propagateCompletion.",
        "meta": {
            "doc_index": 9609,
            "doc_name": "java.util.concurrent.CountedCompleter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                96,
                109,
                "ReplacedBy-1"
            ],
            [
                131,
                150,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124433,
        "text": "If both methods return true, wasReplaced() will also return true.",
        "meta": {
            "doc_index": 2566,
            "doc_name": "javafx.collections.ListChangeListener.Change",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                15,
                "Returns-1"
            ],
            [
                23,
                27,
                "Returns-2"
            ],
            [
                29,
                42,
                "Returns-1"
            ],
            [
                60,
                64,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 124436,
        "text": "Note: In order to create list with sequential access, you should override listIterator() and use it in get, size() and other methods accordingly.",
        "meta": {
            "doc_index": 2576,
            "doc_name": "javafx.collections.ObservableListBase",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                74,
                88,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124439,
        "text": "Extend this class to create a FocusEvent listener and override the methods for the events of interest. (",
        "meta": {
            "doc_index": 7563,
            "doc_name": "java.awt.event.FocusAdapter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                63,
                101,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124441,
        "text": "Your subclasses must override two methods: handleGetObject and getKeys().",
        "meta": {
            "doc_index": 10062,
            "doc_name": "java.util.ResourceBundle",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                43,
                58,
                "Deprecated"
            ],
            [
                63,
                72,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124446,
        "text": "The Validator class has been deprecated and made optional.",
        "meta": {
            "doc_index": 13049,
            "doc_name": "javax.xml.bind.JAXBContext",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124448,
        "text": "This PIHandler implementation will be replaced by the real PIHandler in ORB.postInit( ) call.",
        "meta": {
            "doc_index": 3576,
            "doc_name": "com.sun.corba.se.impl.interceptors.PINoOpHandlerImpl",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                29,
                "ReplacedBy-1"
            ],
            [
                50,
                68,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124451,
        "text": "Subclasses may override the newTaskFor methods to return RunnableFuture implementations other than FutureTask.",
        "meta": {
            "doc_index": 9447,
            "doc_name": "java.util.concurrent.AbstractExecutorService",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                46,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124458,
        "text": "It has been replaced by the AWTEvent class and its subclasses.",
        "meta": {
            "doc_index": 7595,
            "doc_name": "java.awt.Event",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                2,
                "ReplacedBy-1"
            ],
            [
                24,
                42,
                "ReplacedBy-2"
            ],
            [
                47,
                61,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124459,
        "text": "AdjustmentEvent.TRACK replaces Event.SCROLL_ABSOLUTE AdjustmentEvent.UNIT_INCREMENT replaces Event.SCROLL_LINE_UP AdjustmentEvent.UNIT_DECREMENT replaces Event.SCROLL_LINE_DOWN AdjustmentEvent.BLOCK_INCREMENT replaces Event.SCROLL_PAGE_UP AdjustmentEvent.BLOCK_DECREMENT replaces Event.SCROLL_PAGE_DOWN Note: We recommend using a Scrollbar for value selection only.",
        "meta": {
            "doc_index": 7887,
            "doc_name": "java.awt.Scrollbar",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Replace-1"
            ],
            [
                31,
                52,
                "Replace-2"
            ],
            [
                53,
                83,
                "Replace-1"
            ],
            [
                93,
                113,
                "Replace-2"
            ],
            [
                114,
                144,
                "Replace-1"
            ],
            [
                154,
                176,
                "Replace-2"
            ],
            [
                177,
                208,
                "Replace-1"
            ],
            [
                218,
                238,
                "Replace-2"
            ],
            [
                239,
                270,
                "Replace-1"
            ],
            [
                280,
                302,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124461,
        "text": "Derived classes that implement iterators must override runTo(int index), in order that they may run the iteration to the given index.",
        "meta": {
            "doc_index": 7200,
            "doc_name": "com.sun.org.apache.xpath.internal.NodeSet",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                55,
                71,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124465,
        "text": "To visit nodes of a particular type, just override the corresponding visitorXYZ method.",
        "meta": {
            "doc_index": 7414,
            "doc_name": "com.sun.source.util.DocTreePathScanner",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                51,
                86,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124466,
        "text": "This element is deprecated in HTML 4.0.",
        "meta": {
            "doc_index": 13930,
            "doc_name": "org.w3c.dom.html.HTMLIsIndexElement",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124469,
        "text": "Support for DataFlavor.plainTextFlavor and all equivalent flavors is deprecated.",
        "meta": {
            "doc_index": 7508,
            "doc_name": "java.awt.datatransfer.StringSelection",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                12,
                38,
                "Deprecated"
            ],
            [
                43,
                65,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124471,
        "text": "It is possible, but rarely applicable, to override this method to maintain other objects or fields holding result data.",
        "meta": {
            "doc_index": 9609,
            "doc_name": "java.util.concurrent.CountedCompleter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                51,
                62,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124474,
        "text": "The getContentType method is used by the getContent method to determine the type of the remote object; subclasses may find it convenient to override the getContentType method.",
        "meta": {
            "doc_index": 8599,
            "doc_name": "java.net.URLConnection",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                149,
                174,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124477,
        "text": "The original class extended DOMHelper that was deprecated and then removed.",
        "meta": {
            "doc_index": 7016,
            "doc_name": "com.sun.org.apache.xml.internal.utils.DOM2Helper",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                37,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124478,
        "text": "getUserObject();  Subclasses typically need override only getLastPathComponent, and getParentPath.",
        "meta": {
            "doc_index": 12970,
            "doc_name": "javax.swing.tree.TreePath",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                58,
                78,
                "MustOverride"
            ],
            [
                84,
                97,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124480,
        "text": "The methods parameter and param_count, which are deprecated, are not mapped.",
        "meta": {
            "doc_index": 13500,
            "doc_name": "org.omg.CORBA.TypeCode",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                12,
                21,
                "Deprecated"
            ],
            [
                26,
                37,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124481,
        "text": "In JAXP 1.0, this class wrapped the org.xml.sax.Parser interface, however this interface was replaced by the org.xml.sax.XMLReader.",
        "meta": {
            "doc_index": 13153,
            "doc_name": "javax.xml.parsers.SAXParser",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                74,
                88,
                "ReplacedBy-1"
            ],
            [
                105,
                130,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124484,
        "text": "Extend this class to create a ContainerEvent listener and override the methods for the events of interest. (",
        "meta": {
            "doc_index": 7560,
            "doc_name": "java.awt.event.ContainerAdapter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                67,
                105,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124485,
        "text": "The implementor may, at his discretion, override one or more of the concrete methods if the default implementation is unsatisfactory for any reason, such as performance.",
        "meta": {
            "doc_index": 9954,
            "doc_name": "java.util.prefs.AbstractPreferences",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                49,
                84,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124492,
        "text": "A component that wants to create a custom ToolTip display can override JComponent's createToolTip method and use a subclass of this class.",
        "meta": {
            "doc_index": 11645,
            "doc_name": "javax.swing.JToolTip",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                71,
                104,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124494,
        "text": "This subclass should override the run method of class Thread.",
        "meta": {
            "doc_index": 8473,
            "doc_name": "java.lang.Thread",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                30,
                60,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124497,
        "text": "Most extensions of this class override one or more of the protected hook methods.",
        "meta": {
            "doc_index": 9727,
            "doc_name": "java.util.concurrent.ThreadPoolExecutor",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                39,
                80,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124500,
        "text": "Filters should subclass this class and override the methods which deal with the data that needs to be filtered and modify it as necessary.",
        "meta": {
            "doc_index": 7741,
            "doc_name": "java.awt.image.ImageFilter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                48,
                59,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124504,
        "text": "Extend this class to create a MouseEvent listener and override the methods for the events of interest. (",
        "meta": {
            "doc_index": 7582,
            "doc_name": "java.awt.event.MouseMotionAdapter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                63,
                101,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124506,
        "text": "Extend this class to create a KeyEvent listener and override the methods for the events of interest. (",
        "meta": {
            "doc_index": 7576,
            "doc_name": "java.awt.event.KeyAdapter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                61,
                99,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124510,
        "text": "AttributeList implements the deprecated SAX1 AttributeList interface, and has been replaced by the new SAX2 AttributesImpl interface.",
        "meta": {
            "doc_index": 14015,
            "doc_name": "org.xml.sax.helpers.AttributeListImpl",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                13,
                "ReplacedBy-1"
            ],
            [
                103,
                132,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124511,
        "text": "When the new visitor is introduced, all or portions of this visitor may be deprecated.",
        "meta": {
            "doc_index": 10572,
            "doc_name": "javax.lang.model.util.ElementScanner6",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                67,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124514,
        "text": "Extend this class to create a DropTargetEvent listener and override the methods for the events of interest. (",
        "meta": {
            "doc_index": 7538,
            "doc_name": "java.awt.dnd.DropTargetAdapter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                68,
                106,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124515,
        "text": "Subclasses of BasicAttribute can override get() and getAll() to get the values dynamically from the directory (or implement the Attribute interface directly instead of subclassing BasicAttribute).",
        "meta": {
            "doc_index": 10828,
            "doc_name": "javax.naming.directory.BasicAttribute",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                42,
                47,
                "MustOverride"
            ],
            [
                52,
                60,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124518,
        "text": "Much of the functionality in this class is deprecated as it is not portable between web browsers.",
        "meta": {
            "doc_index": 3441,
            "doc_name": "netscape.javascript.JSException",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                39,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124521,
        "text": "javax.security.auth.Policy has been deprecated in favor of java.security.Policy.",
        "meta": {
            "doc_index": 11104,
            "doc_name": "javax.security.auth.AuthPermission",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "ReplacedBy-1"
            ],
            [
                59,
                79,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124525,
        "text": "This interface replaces the now-deprecated SAX1 AttributeList interface, which does not contain Namespace support.",
        "meta": {
            "doc_index": 14000,
            "doc_name": "org.xml.sax.Attributes",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Replace-1"
            ],
            [
                43,
                71,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124527,
        "text": "If the column only contains one type of value, such as an Integer, you should override getColumnClass and return the appropriate Class.",
        "meta": {
            "doc_index": 12512,
            "doc_name": "javax.swing.table.TableRowSorter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                87,
                101,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124531,
        "text": "NOTE: The QTKit based platform is deprecated and will be removed in a future release.",
        "meta": {
            "doc_index": 1618,
            "doc_name": "com.sun.media.jfxmediaimpl.platform.osx.OSXPlatform",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                6,
                30,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124534,
        "text": "It is unnecessary, and it is also deprecated.",
        "meta": {
            "doc_index": 8908,
            "doc_name": "java.rmi.server.UnicastRemoteObject",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                25,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124539,
        "text": "This was the main event-handling interface for SAX1; in SAX2, it has been replaced by ContentHandler, which provides Namespace support and reporting of skipped entities.",
        "meta": {
            "doc_index": 14002,
            "doc_name": "org.xml.sax.DocumentHandler",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                62,
                64,
                "ReplacedBy-1"
            ],
            [
                86,
                100,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124541,
        "text": "The delegate is a singleton instance of a class that implements this interface and provides a replacement implementation for all the methods of javax.rmi.PortableRemoteObject.",
        "meta": {
            "doc_index": 11080,
            "doc_name": "javax.rmi.CORBA.PortableRemoteObjectDelegate",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                12,
                "Replace-1"
            ],
            [
                144,
                174,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124543,
        "text": "The fourth technique, exportObject(Remote), always uses statically generated stubs and is deprecated.",
        "meta": {
            "doc_index": 8908,
            "doc_name": "java.rmi.server.UnicastRemoteObject",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                22,
                42,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124544,
        "text": "Unless otherwise noted in the JavaDocs for those methods the default implementations simply throw an UnsupportedOperationException and the SAAJ implementation code must override them with methods that provide the specified behavior.",
        "meta": {
            "doc_index": 13182,
            "doc_name": "javax.xml.soap.SOAPMessage",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                57,
                84,
                "Throws-1"
            ],
            [
                98,
                130,
                "Throws-2"
            ],
            [
                178,
                182,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124545,
        "text": "The basis of the various TextUI implementations can be found in the javax.swing.plaf.basic package and the class BasicTextUI replaces this class.",
        "meta": {
            "doc_index": 12607,
            "doc_name": "javax.swing.text.DefaultTextUI",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                103,
                124,
                "Replace-1"
            ],
            [
                134,
                144,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124547,
        "text": "Subclasses must override the conversion methods stringToValue and valueToString.",
        "meta": {
            "doc_index": 11525,
            "doc_name": "javax.swing.JFormattedTextField.AbstractFormatter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                61,
                "MustOverride"
            ],
            [
                66,
                79,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124549,
        "text": "Optionally they can override getActions, getNavigationFilter and getDocumentFilter to restrict the JFormattedTextField in a particular way.",
        "meta": {
            "doc_index": 11525,
            "doc_name": "javax.swing.JFormattedTextField.AbstractFormatter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                39,
                "MustOverride"
            ],
            [
                41,
                60,
                "MustOverride"
            ],
            [
                65,
                82,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124551,
        "text": "For efficiency's sake it's a good idea to override write(String) as well.",
        "meta": {
            "doc_index": 12843,
            "doc_name": "javax.swing.text.rtf.AbstractFilter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                51,
                64,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124553,
        "text": "Subclasses of FilterOutputStream may further override some of these methods as well as provide additional methods and fields.",
        "meta": {
            "doc_index": 8113,
            "doc_name": "java.io.FilterOutputStream",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                54,
                75,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124560,
        "text": "The extending class should override forEachRemaining(java.util.function.IntConsumer) if it can provide a more performant implementation.",
        "meta": {
            "doc_index": 10104,
            "doc_name": "java.util.Spliterators.AbstractIntSpliterator",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                84,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124566,
        "text": "This class is designed for use as a drop-in replacement for StringBuffer in places where the string buffer was being used by a single thread (as is generally the case).",
        "meta": {
            "doc_index": 8466,
            "doc_name": "java.lang.StringBuilder",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "ReplacedBy-1"
            ],
            [
                60,
                72,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124571,
        "text": "Subclasses that wish to install additional state should override install and message super appropriately.",
        "meta": {
            "doc_index": 11525,
            "doc_name": "javax.swing.JFormattedTextField.AbstractFormatter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                65,
                72,
                "MustOverride"
            ],
            [
                77,
                84,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124572,
        "text": "This event is not designed to be used with the Event Listener model; programs should continue to override paint/update methods in order render themselves properly.",
        "meta": {
            "doc_index": 7587,
            "doc_name": "java.awt.event.PaintEvent",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                106,
                126,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124573,
        "text": "Subclassers may wish to override paint to do something more interesting.",
        "meta": {
            "doc_index": 11886,
            "doc_name": "javax.swing.plaf.basic.BasicSplitPaneDivider",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124576,
        "text": "An implementation of Task must override the javafx.concurrent.Task#call() method.",
        "meta": {
            "doc_index": 2592,
            "doc_name": "javafx.concurrent.Task",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                80,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124577,
        "text": "A subclass may override the scaling for short sample values to normalized component values by overriding the getNormalizedComponents(Object, float[], int) method.",
        "meta": {
            "doc_index": 7727,
            "doc_name": "java.awt.image.ComponentColorModel",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                105,
                161,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124578,
        "text": "To support other color spaces one can override produce() method to return custom instance of ImageTypeSpecifier.",
        "meta": {
            "doc_index": 4500,
            "doc_name": "com.sun.imageio.plugins.jpeg.ImageTypeProducer",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                47,
                63,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124583,
        "text": "To visit nodes of a particular type, just override the corresponding visitXYZ method.",
        "meta": {
            "doc_index": 7416,
            "doc_name": "com.sun.source.util.DocTreeScanner",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                51,
                84,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124584,
        "text": "This class has been deprecated and should no longer be used.",
        "meta": {
            "doc_index": 12607,
            "doc_name": "javax.swing.text.DefaultTextUI",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124587,
        "text": "In other cases, you should override method getRawResult to provide a result from join(), invoke(), and related methods.",
        "meta": {
            "doc_index": 9609,
            "doc_name": "java.util.concurrent.CountedCompleter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                55,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124592,
        "text": "The following target name has been deprecated in favor of createLoginContext.{name}.",
        "meta": {
            "doc_index": 11104,
            "doc_name": "javax.security.auth.AuthPermission",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                25,
                "ReplacedBy-1"
            ],
            [
                58,
                83,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124593,
        "text": "Extend this class to create a DragSourceEvent listener and override the methods for the events of interest. (",
        "meta": {
            "doc_index": 7529,
            "doc_name": "java.awt.dnd.DragSourceAdapter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                68,
                106,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124609,
        "text": "A delegate is an instance of a class that implements this interface and provides a replacement implementation for all the methods of javax.rmi.CORBA.Stub.",
        "meta": {
            "doc_index": 11082,
            "doc_name": "javax.rmi.CORBA.StubDelegate",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Replace-1"
            ],
            [
                133,
                153,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124615,
        "text": "Subclasses can configure the JFormattedTextField to create an editor that's appropriate for the type of model they support and they may want to override the stateChanged and propertyChanged methods, which keep the model and the text field in sync.",
        "meta": {
            "doc_index": 11593,
            "doc_name": "javax.swing.JSpinner.DefaultEditor",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                153,
                169,
                "MustOverride"
            ],
            [
                174,
                197,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124620,
        "text": "The following properties have been deprecated in favor of the corresponding ones for the BODY element: alinkColor background bgColor fgColor linkColor vlinkColor In DOM Level 2, the method getElementById is inherited from the Document interface where it was moved.",
        "meta": {
            "doc_index": 13915,
            "doc_name": "org.w3c.dom.html.HTMLDocument",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                103,
                113,
                "Deprecated"
            ],
            [
                114,
                124,
                "Deprecated"
            ],
            [
                125,
                132,
                "Deprecated"
            ],
            [
                133,
                140,
                "Deprecated"
            ],
            [
                141,
                150,
                "Deprecated"
            ],
            [
                151,
                161,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124621,
        "text": "For example the call  startElement(namespaceURI,localName,qName,atts)  could be replaced with the calls  startElement(namespaceURI,localName,qName) addAttributes(atts)  If there are no attributes the second call can be dropped.",
        "meta": {
            "doc_index": 6954,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                22,
                69,
                "ReplacedBy-1"
            ],
            [
                105,
                167,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124622,
        "text": "To implement a more custom layout, a Region subclass must override computePrefWidth, computePrefHeight, and layoutChildren.",
        "meta": {
            "doc_index": 3172,
            "doc_name": "javafx.scene.layout.Region",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                67,
                83,
                "MustOverride"
            ],
            [
                85,
                102,
                "MustOverride"
            ],
            [
                108,
                122,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124623,
        "text": "Presumably this class will disappear when the API is made public again. (sigh) That will also let us handle multibyte character sets... A subclass should override at least write(char) and writeSpecial(int).",
        "meta": {
            "doc_index": 12843,
            "doc_name": "javax.swing.text.rtf.AbstractFilter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                172,
                183,
                "MustOverride"
            ],
            [
                188,
                205,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124627,
        "text": "This class is deprecated.",
        "meta": {
            "doc_index": 8908,
            "doc_name": "java.rmi.server.UnicastRemoteObject",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124629,
        "text": "By convention, classes that implement this interface should override Object.clone (which is protected) with a public method.",
        "meta": {
            "doc_index": 8244,
            "doc_name": "java.lang.Cloneable",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                69,
                81,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124630,
        "text": "The extending class should override forEachRemaining(java.util.function.LongConsumer) if it can provide a more performant implementation.",
        "meta": {
            "doc_index": 10106,
            "doc_name": "java.util.Spliterators.AbstractLongSpliterator",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                85,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124639,
        "text": "The Operation class is not needed for 1.2 style stubs (stubs generated with rmic -v1.2); hence, this class is deprecated.",
        "meta": {
            "doc_index": 8886,
            "doc_name": "java.rmi.server.Operation",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                96,
                106,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124653,
        "text": "This class will replace the older com.sun.org.apache.xalan.internal.processor.Version class.",
        "meta": {
            "doc_index": 5554,
            "doc_name": "com.sun.org.apache.xalan.internal.Version",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                10,
                "Replace-1"
            ],
            [
                34,
                91,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124657,
        "text": "However, you can override initialization and termination methods surrounding the main task processing loop.",
        "meta": {
            "doc_index": 9645,
            "doc_name": "java.util.concurrent.ForkJoinWorkerThread",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                64,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124660,
        "text": "element.addChildElement(name);  The Name interface may be deprecated in a future release of SAAJ in favor of javax.xml.namespace.QName",
        "meta": {
            "doc_index": 13164,
            "doc_name": "javax.xml.soap.Name",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                50,
                "ReplacedBy-1"
            ],
            [
                109,
                134,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124668,
        "text": "An application may either override its run() method, or pass a Runnable object to the constructor of the Timer class.",
        "meta": {
            "doc_index": 275,
            "doc_name": "com.sun.glass.ui.Timer",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                51,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124673,
        "text": "Extend this class to create a ComponentEvent listener and override the methods for the events of interest. (",
        "meta": {
            "doc_index": 7557,
            "doc_name": "java.awt.event.ComponentAdapter",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                67,
                105,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124677,
        "text": "If a JComponent's LayoutManager allows children to overlap, the JComponent must override isOptimizedDrawingEnabled to return false.",
        "meta": {
            "doc_index": 7792,
            "doc_name": "java.awt.LayoutManager",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                89,
                114,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124682,
        "text": "This deprecated class is maintained for compatibility.",
        "meta": {
            "doc_index": 10603,
            "doc_name": "javax.management.DefaultLoaderRepository",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                21,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124390,
        "text": "The derived class should override the getErrorHandler() method so that it will return the correct XMLErrorHandler instance.",
        "meta": {
            "doc_index": 6372,
            "doc_name": "com.sun.org.apache.xerces.internal.util.ErrorHandlerProxy",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                62,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124420,
        "text": "The extending class should override forEachRemaining(java.util.function.DoubleConsumer) if it can provide a more performant implementation.",
        "meta": {
            "doc_index": 10108,
            "doc_name": "java.util.Spliterators.AbstractDoubleSpliterator",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                87,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124570,
        "text": "This was the main event supplier interface for SAX1; it has been replaced in SAX2 by XMLReader, which includes Namespace support and sophisticated configurability and extensibility.",
        "meta": {
            "doc_index": 14032,
            "doc_name": "org.xml.sax.Parser",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                53,
                55,
                "ReplacedBy-1"
            ],
            [
                85,
                94,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124628,
        "text": "This interface replaces the (now deprecated) SAX 1.0 Parser interface.",
        "meta": {
            "doc_index": 14038,
            "doc_name": "org.xml.sax.XMLReader",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                14,
                "Replace-1"
            ],
            [
                45,
                69,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124608,
        "text": "The extending class should override forEach if it can provide a more performant implementation.",
        "meta": {
            "doc_index": 10102,
            "doc_name": "java.util.Spliterators.AbstractSpliterator",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                43,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124473,
        "text": "Note however that it is very important that subclasses that override the startEdit() method continue to call super.startEdit() so that parent classes can update additional state that is necessary for editing to be successful.",
        "meta": {
            "doc_index": 2814,
            "doc_name": "javafx.scene.control.Cell",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                69,
                91,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124522,
        "text": "Note: This class is designed to work with the now-deprecated SAX1 Parser class.",
        "meta": {
            "doc_index": 14024,
            "doc_name": "org.xml.sax.helpers.ParserFactory",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                61,
                78,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124805,
        "text": "Subclasses of Node should override this method and must call super.impl_updatePeer()",
        "meta": {
            "doc_index": 113436,
            "doc_name": "javafx.scene.Node.impl_updatePeer()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                46,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124806,
        "text": "The default implementation returns false, specific subclasses should override to return true when appropriate.",
        "meta": {
            "doc_index": 89007,
            "doc_name": "com.sun.javafx.sg.prism.NGNode.isRectClip(com.sun.javafx.geom.transform.BaseTransform,boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                40,
                "Returns-2"
            ],
            [
                0,
                26,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124807,
        "text": "If the value of scope is GLOBAL_SCOPE the given Bindings replaces the globalScope field.",
        "meta": {
            "doc_index": 190202,
            "doc_name": "javax.script.SimpleScriptContext.setBindings(javax.script.Bindings,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                37,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124832,
        "text": "If a subclass overrides hashCode(), it should override equals() as well so that two attributes that are equal have the same hash code.",
        "meta": {
            "doc_index": 188646,
            "doc_name": "javax.naming.directory.BasicAttribute.hashCode()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                55,
                63,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125366,
        "text": "This method is deprecated and should not be used because SQL TIME values do not have a date component.",
        "meta": {
            "doc_index": 172419,
            "doc_name": "java.sql.Time.getDate()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 125484,
        "text": "Subclasses should override this if they cache data in a temporary file.",
        "meta": {
            "doc_index": 185943,
            "doc_name": "javax.imageio.stream.ImageInputStreamImpl.isCachedFile()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124698,
        "text": "If the value is a UIDefaults.LazyValue then the real value is computed with LazyValue.createValue(), the table entry is replaced, and the real value is returned.",
        "meta": {
            "doc_index": 209451,
            "doc_name": "javax.swing.UIDefaults.get(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "Type-1"
            ],
            [
                18,
                38,
                "Type-2"
            ],
            [
                134,
                148,
                "Returned"
            ]
        ]
    },
    {
        "id": 124702,
        "text": "Subclasses should override this method with a correct implementation.",
        "meta": {
            "doc_index": 170438,
            "doc_name": "java.security.cert.X509Certificate.getExtendedKeyUsage()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124703,
        "text": "This method is obsolete, and has been replaced by isFocusOwner().",
        "meta": {
            "doc_index": 154500,
            "doc_name": "java.awt.Component.hasFocus()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ],
            [
                50,
                64,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124707,
        "text": "Subclasses which contain text should override this method to return their actual text baseline offset.",
        "meta": {
            "doc_index": 113560,
            "doc_name": "javafx.scene.Node.getBaselineOffset()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                46,
                57,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124714,
        "text": "Security providers can override this method to implement instantiation in a different way.",
        "meta": {
            "doc_index": 171085,
            "doc_name": "java.security.Provider.Service.newInstance(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                43,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124716,
        "text": "This method is deprecated; the method getCharacterStream should be used in its place.",
        "meta": {
            "doc_index": 191238,
            "doc_name": "javax.sql.rowset.BaseRowSet.setUnicodeStream(int,java.io.InputStream,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ],
            [
                27,
                56,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124720,
        "text": "Subclasses my override this method to compute a value, e.g. the change required to scroll up or down one paragraph in a text document.",
        "meta": {
            "doc_index": 195230,
            "doc_name": "javax.swing.JScrollBar.getBlockIncrement(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                34,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124732,
        "text": "Subclasses that wish to support indirect CRLs should override this method.",
        "meta": {
            "doc_index": 170533,
            "doc_name": "java.security.cert.X509CRL.getRevokedCertificate(java.security.cert.X509Certificate)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                62,
                73,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124741,
        "text": "By default this method returns getScanner().next_token(); this implementation can be overriden by the generated parser using the code declared in the \"scan with\" clause.",
        "meta": {
            "doc_index": 130119,
            "doc_name": "com.sun.java_cup.internal.runtime.lr_parser.scan()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                22,
                "Returns-1"
            ],
            [
                31,
                56,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 124748,
        "text": "You may want to override this method if you need to perform e.g. lazy evaluation of tables (you need to update the table when a request is received) or if your table is virtual.",
        "meta": {
            "doc_index": 131371,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpMibTable.contains(com.sun.jmx.snmp.SnmpOid,java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                36,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124749,
        "text": "Note that the class Principal has been deprecated.",
        "meta": {
            "doc_index": 212052,
            "doc_name": "org.omg.CORBA.Any.insert_Principal(org.omg.CORBA.Principal)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                29,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124750,
        "text": "Subclasses of viewport that support \"logical coordinates\" will override this method.",
        "meta": {
            "doc_index": 196621,
            "doc_name": "javax.swing.JViewport.toViewCoordinates(java.awt.Dimension)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                72,
                83,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124751,
        "text": "Subclasses should override this if they cache data in main memory.",
        "meta": {
            "doc_index": 185942,
            "doc_name": "javax.imageio.stream.ImageInputStreamImpl.isCachedMemory()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124755,
        "text": "Subtypes of AbstractButton should override this to update the UI.",
        "meta": {
            "doc_index": 191924,
            "doc_name": "javax.swing.AbstractButton.updateUI()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                43,
                47,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124757,
        "text": "Subclasses can override this method for faster handling.",
        "meta": {
            "doc_index": 182108,
            "doc_name": "java.util.ResourceBundle.handleKeySet()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124769,
        "text": "Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.",
        "meta": {
            "doc_index": 164429,
            "doc_name": "java.lang.Object.equals(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                48,
                67,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124770,
        "text": "This method is deprecated and should not be used because SQL TIME values do not have a month component.",
        "meta": {
            "doc_index": 172417,
            "doc_name": "java.sql.Time.getMonth()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124777,
        "text": "This method is deprecated and should not be used because SQL Date values do not have a time component.",
        "meta": {
            "doc_index": 171822,
            "doc_name": "java.sql.Date.setSeconds(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124780,
        "text": "Security providers can override it to implement their own test.",
        "meta": {
            "doc_index": 171088,
            "doc_name": "java.security.Provider.Service.supportsParameter(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                34,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124781,
        "text": "Subclassers should override this method.",
        "meta": {
            "doc_index": 155779,
            "doc_name": "java.awt.font.GlyphVector.getGlyphPixelBounds(int,java.awt.font.FontRenderContext,float,float)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                28,
                39,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124784,
        "text": "If enable is true, and there is a security manager installed, this method first calls the security manager's checkPermission method with a SerializablePermission(\"enableSubstitution\") permission to ensure it's ok to enable the stream to do replacement of objects in the stream.",
        "meta": {
            "doc_index": 161359,
            "doc_name": "java.io.ObjectOutputStream.enableReplaceObject(boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124789,
        "text": "Subclasses may override this method in order to implement their own behaviors.",
        "meta": {
            "doc_index": 159918,
            "doc_name": "java.beans.beancontext.BeanContextChildSupport.serviceRevoked(java.beans.beancontext.BeanContextServiceRevokedEvent)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124798,
        "text": "Returns true if it is possible to replace the stream metadata already present in the output.",
        "meta": {
            "doc_index": 185400,
            "doc_name": "javax.imageio.ImageWriter.canReplaceStreamMetadata()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 124804,
        "text": "You can override this if you want to provide icons for your bean.",
        "meta": {
            "doc_index": 160587,
            "doc_name": "java.beans.SimpleBeanInfo.getIcon(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                21,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124814,
        "text": "Therefore, subclasses which may have instances which do not support the unnormalized form must override this method.",
        "meta": {
            "doc_index": 157448,
            "doc_name": "java.awt.image.ColorModel.getNormalizedComponents(int[],int,float[],int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                104,
                115,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124816,
        "text": "Application writers may override this method in a subclass to take specific actions at the start of each element (such as allocating a new tree node or writing output to a file).",
        "meta": {
            "doc_index": 147251,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124819,
        "text": "Returns true if it is possible to replace the image metadata associated with an existing image with index imageIndex.",
        "meta": {
            "doc_index": 185402,
            "doc_name": "javax.imageio.ImageWriter.canReplaceImageMetadata(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 124822,
        "text": "You can override this if you wish to define a default event for the bean.",
        "meta": {
            "doc_index": 160584,
            "doc_name": "java.beans.SimpleBeanInfo.getDefaultEventIndex()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                21,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124825,
        "text": "Returns true if the subclass overrides any of the methods, false otherwise.",
        "meta": {
            "doc_index": 165511,
            "doc_name": "java.lang.Thread.auditSubclass(java.lang.Class<?>)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                59,
                64,
                "Returned"
            ]
        ]
    },
    {
        "id": 124826,
        "text": "Overriden to unconditionally allow the replace if ignoreDocumentMutate is true.",
        "meta": {
            "doc_index": 207619,
            "doc_name": "javax.swing.text.InternationalFormatter.replace(javax.swing.text.DocumentFilter.FilterBypass,int,int,java.lang.String,javax.swing.text.AttributeSet)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                70,
                "EQ-1"
            ],
            [
                74,
                78,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124830,
        "text": "Subclasses that support additional Action properties should override this and configurePropertiesFromAction.",
        "meta": {
            "doc_index": 191890,
            "doc_name": "javax.swing.AbstractButton.actionPropertyChanged(javax.swing.Action,java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                69,
                73,
                "MustOverride"
            ],
            [
                78,
                107,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124835,
        "text": "Important note: This method is deprecated as it does not consider the root node.",
        "meta": {
            "doc_index": 110477,
            "doc_name": "javafx.scene.control.TreeTableView.getNodeLevel(javafx.scene.control.TreeItem<?>)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                16,
                27,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124842,
        "text": "This method replaces the deprecated setValidating(boolean) API.",
        "meta": {
            "doc_index": 210245,
            "doc_name": "javax.xml.bind.Unmarshaller.setSchema(javax.xml.validation.Schema)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Replace-1"
            ],
            [
                36,
                62,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124846,
        "text": "This method is deprecated and should not be used because SQL TIME values do not have a day component.",
        "meta": {
            "doc_index": 172418,
            "doc_name": "java.sql.Time.getDay()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124852,
        "text": "Subclasses of ObjectOutputStream may override this method to customize the way in which class descriptors are written to the serialization stream.",
        "meta": {
            "doc_index": 161361,
            "doc_name": "java.io.ObjectOutputStream.writeClassDescriptor(java.io.ObjectStreamClass)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                46,
                57,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124853,
        "text": "All SynthUI implementations should override update and invoke this method.",
        "meta": {
            "doc_index": 203428,
            "doc_name": "javax.swing.plaf.synth.SynthLookAndFeel.update(javax.swing.plaf.synth.SynthContext,java.awt.Graphics)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                62,
                73,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124860,
        "text": "If the DTM implememtation that extends the default base requires notification of registration, they can override this method.",
        "meta": {
            "doc_index": 146634,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBase.documentRegistration()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                113,
                124,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124870,
        "text": "A subclass may override this to retrieve the values dynamically from the directory.",
        "meta": {
            "doc_index": 188648,
            "doc_name": "javax.naming.directory.BasicAttribute.getAll()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                28,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124871,
        "text": "Subclasses that intend to support efficient single-character output should override this method.",
        "meta": {
            "doc_index": 149956,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.SerializerTraceWriter.write(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                84,
                95,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124872,
        "text": "Subclasses that intend to support efficient single-character input should override this method.",
        "meta": {
            "doc_index": 140795,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.io.ASCIIReader.read()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                83,
                94,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124873,
        "text": "If the value is an instance of XMLSecurityManager, use it to override the default; If the value is an old SecurityManager, convert to the new XMLSecurityManager.",
        "meta": {
            "doc_index": 145447,
            "doc_name": "com.sun.org.apache.xerces.internal.utils.XMLSecurityManager.convert(java.lang.Object,com.sun.org.apache.xerces.internal.utils.XMLSecurityManager)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "Type-1"
            ],
            [
                31,
                49,
                "Type-2"
            ],
            [
                86,
                95,
                "Type-1"
            ],
            [
                106,
                121,
                "Type-2"
            ]
        ]
    },
    {
        "id": 124878,
        "text": "If the value of scope is ENGINE_SCOPE the given Bindings replaces the engineScope field.",
        "meta": {
            "doc_index": 190202,
            "doc_name": "javax.script.SimpleScriptContext.setBindings(javax.script.Bindings,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                37,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124880,
        "text": "Components that can service the request, such as JViewport, override this method and perform the scrolling.",
        "meta": {
            "doc_index": 193846,
            "doc_name": "javax.swing.JComponent.scrollRectToVisible(java.awt.Rectangle)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                69,
                80,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124883,
        "text": "If a subclass overrides equals(), it should override hashCode() as well so that two Attributes instances that are equal have the same hash code.",
        "meta": {
            "doc_index": 188689,
            "doc_name": "javax.naming.directory.BasicAttributes.equals(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                53,
                63,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124884,
        "text": "Classes for that connection type can override this method and short-circuit the parsing.",
        "meta": {
            "doc_index": 167300,
            "doc_name": "java.net.URLConnection.getHeaderFieldDate(java.lang.String,long)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                46,
                57,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124891,
        "text": "You might want to override this method in order to provide a different object naming scheme than that proposed by default by mibgen.",
        "meta": {
            "doc_index": 131158,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpMib.getGroupObjectName(java.lang.String,java.lang.String,java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124894,
        "text": "When using an ICC_ColorSpace with a profile that requires different minimum component values, it is necessary to subclass this class and override this method.",
        "meta": {
            "doc_index": 154089,
            "doc_name": "java.awt.color.ICC_ColorSpace.getMinValue(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                146,
                157,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124901,
        "text": "Subclasses may override this method in order to produce a locale-specific message.",
        "meta": {
            "doc_index": 165609,
            "doc_name": "java.lang.Throwable.getLocalizedMessage()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124903,
        "text": "The result of a call to this method is the same the result of a call to DOMParser.parseWithContext with an input stream referencing the URI that was passed to this call, the document as the context node, and the action ACTION_REPLACE_CHILDREN.",
        "meta": {
            "doc_index": 139013,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl.load(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "SameUsage-1"
            ],
            [
                72,
                98,
                "SameUsage-2"
            ]
        ]
    },
    {
        "id": 124905,
        "text": "Sets associated Descriptor (full replace) for the ModelMBeanNotificationInfo If the new Descriptor is null, then the associated Descriptor reverts to a default descriptor.",
        "meta": {
            "doc_index": 186960,
            "doc_name": "javax.management.modelmbean.ModelMBeanNotificationInfo.setDescriptor(javax.management.Descriptor)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                80,
                98,
                "EQ-1"
            ],
            [
                102,
                106,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124906,
        "text": "A subclass should override this method (as well as hashCode()) if it adds instance state that affects equality.",
        "meta": {
            "doc_index": 190090,
            "doc_name": "javax.rmi.ssl.SslRMIServerSocketFactory.equals(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124909,
        "text": "Computes the preferred height of this region for the given width; Region subclasses should override this method to return an appropriate value based on their content and layout strategy.",
        "meta": {
            "doc_index": 112755,
            "doc_name": "javafx.scene.layout.Region.computePrefHeight(double)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                100,
                111,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124910,
        "text": "Subclasses should override this if they cache data.",
        "meta": {
            "doc_index": 185941,
            "doc_name": "javax.imageio.stream.ImageInputStreamImpl.isCached()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124914,
        "text": "Subclasses should therefore override this method if possible in order to avoid forcing the thumbnail to be read.",
        "meta": {
            "doc_index": 185257,
            "doc_name": "javax.imageio.ImageReader.getThumbnailWidth(int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                48,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124915,
        "text": "Subclasses should generally not have to override this, instead override getColorForState.",
        "meta": {
            "doc_index": 203975,
            "doc_name": "javax.swing.plaf.synth.SynthStyle.getColor(javax.swing.plaf.synth.SynthContext,javax.swing.plaf.synth.ColorType)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                72,
                88,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124924,
        "text": "An enum type should override this method when a more \"programmer-friendly\" string form exists.",
        "meta": {
            "doc_index": 162762,
            "doc_name": "java.lang.Enum.toString()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                40,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124927,
        "text": "Subclasses may override this method if another implementation is needed.",
        "meta": {
            "doc_index": 157582,
            "doc_name": "java.awt.image.DataBuffer.getElemFloat(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124929,
        "text": "NavigationFilter method, subclasses that wish finer control should override this.",
        "meta": {
            "doc_index": 205753,
            "doc_name": "javax.swing.text.DefaultFormatter.setDot(javax.swing.text.NavigationFilter.FilterBypass,int,javax.swing.text.Position.Bias)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                76,
                80,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124930,
        "text": "If the passed notification has a sequence number lesser or equal to 0, then replace it with the delegate's own sequence number.",
        "meta": {
            "doc_index": 186792,
            "doc_name": "javax.management.MBeanServerDelegate.sendNotification(javax.management.Notification)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                48,
                "LE-1"
            ],
            [
                68,
                69,
                "LE-2"
            ]
        ]
    },
    {
        "id": 124933,
        "text": "The default implementation invokes getGlyphCharIndex for each glyph, and subclassers will probably want to override this implementation for performance reasons.",
        "meta": {
            "doc_index": 155763,
            "doc_name": "java.awt.font.GlyphVector.getGlyphCharIndices(int,int,int[])",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                116,
                135,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124935,
        "text": "Derived classes should try and override this and return a value without having to do a clone operation.",
        "meta": {
            "doc_index": 151609,
            "doc_name": "com.sun.org.apache.xpath.internal.axes.SelfIteratorNoPredicate.asNode(com.sun.org.apache.xpath.internal.XPathContext)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124942,
        "text": "Application writers may override this method in a subclass to take specific actions for each error, such as inserting the message in a log file or printing it to the console.",
        "meta": {
            "doc_index": 216190,
            "doc_name": "org.xml.sax.HandlerBase.error(org.xml.sax.SAXParseException)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124946,
        "text": "Throws UnsupportedOperationException if this class descriptor is not associated with a class, or if the class is non-serializable or does not define writeReplace.",
        "meta": {
            "doc_index": 161529,
            "doc_name": "java.io.ObjectStreamClass.invokeWriteReplace(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                36,
                "Thrown"
            ]
        ]
    },
    {
        "id": 124948,
        "text": "Application writers may override this method in a subclass if they wish to store the locator for use with other document events.",
        "meta": {
            "doc_index": 216181,
            "doc_name": "org.xml.sax.HandlerBase.setDocumentLocator(org.xml.sax.Locator)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124952,
        "text": "Application writers may override this method in a subclass to take specific actions at the start of each Namespace prefix scope (such as storing the prefix mapping).",
        "meta": {
            "doc_index": 147248,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM.startPrefixMapping(java.lang.String,java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124953,
        "text": "Subclasses should override this method and use the specified Graphics object to render the content of the component.",
        "meta": {
            "doc_index": 199562,
            "doc_name": "javax.swing.plaf.LayerUI.paint(java.awt.Graphics,javax.swing.JComponent)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124961,
        "text": "Toolkit implementations should override this method if the Control key isn't the correct key for accelerators.",
        "meta": {
            "doc_index": 159639,
            "doc_name": "java.awt.Toolkit.getMenuShortcutKeyMask()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                51,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124962,
        "text": "Note that this is a new method that replaces the deprecated newInstance() method.",
        "meta": {
            "doc_index": 211247,
            "doc_name": "javax.xml.stream.XMLOutputFactory.newFactory()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                14,
                "Replace-1"
            ],
            [
                60,
                80,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 124964,
        "text": "If the ColorModel is not an IndexColorModel or is null, this method overrides the default ColorModel used by the ImageProducer and specifies the default RGB ColorModel instead.",
        "meta": {
            "doc_index": 158092,
            "doc_name": "java.awt.image.RGBImageFilter.setColorModel(java.awt.image.ColorModel)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "NotType-1"
            ],
            [
                28,
                43,
                "NotType-2"
            ],
            [
                50,
                54,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 124967,
        "text": "You can override this method if you need to implement some specific policies for minimizing the accesses made to some remote underlying resources, or if you need to implement some consistency checks between the different values provided in the varbind list.",
        "meta": {
            "doc_index": 131256,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpMibNode.check(com.sun.jmx.snmp.agent.SnmpMibSubRequest,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                28,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124974,
        "text": "Application writers may override this method to take specific actions for each chunk of ignorable whitespace (such as adding data to a node or buffer, or printing it to a file).",
        "meta": {
            "doc_index": 147254,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM.ignorableWhitespace(char[],int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124984,
        "text": "This completely replaces the date and is equivalent to ofEpochDay(long).",
        "meta": {
            "doc_index": 174278,
            "doc_name": "java.time.LocalDate.with(java.time.temporal.TemporalField,long)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "SameUsage-1"
            ],
            [
                55,
                71,
                "SameUsage-2"
            ]
        ]
    },
    {
        "id": 124985,
        "text": "Returns true if the writer allows pixels of the given image to be replaced using the replacePixels methods.",
        "meta": {
            "doc_index": 185414,
            "doc_name": "javax.imageio.ImageWriter.canReplacePixels(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 124994,
        "text": "Adds element if not present, or replaces value if present and onlyIfAbsent is false.",
        "meta": {
            "doc_index": 177830,
            "doc_name": "java.util.concurrent.ConcurrentSkipListMap.doPut(K,V,boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                74,
                "EQ-1"
            ],
            [
                78,
                83,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124995,
        "text": "Naturally, override this if you are making a circular or semi-circular progress bar.",
        "meta": {
            "doc_index": 198065,
            "doc_name": "javax.swing.plaf.basic.BasicProgressBarUI.paintDeterminate(java.awt.Graphics,javax.swing.JComponent)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                20,
                24,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124998,
        "text": "Subclasses may override this method to invoke completion callbacks or perform bookkeeping.",
        "meta": {
            "doc_index": 178553,
            "doc_name": "java.util.concurrent.FutureTask.done()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124999,
        "text": "Region subclasses may override this method to return a different value based on their content and layout strategy.",
        "meta": {
            "doc_index": 112757,
            "doc_name": "javafx.scene.layout.Region.computeMaxHeight(double)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                42,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125000,
        "text": "Subclasses can override this method to provide default handling upon a match.",
        "meta": {
            "doc_index": 141965,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.xs.identity.XPathMatcher.matched(java.lang.Object,short,com.sun.org.apache.xerces.internal.xs.ShortList,boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125009,
        "text": "The default implementation simply returns \"this\" renderer, but subclasses may override this method and return a different renderer depending on the size of the operation.",
        "meta": {
            "doc_index": 96335,
            "doc_name": "com.sun.scenario.effect.impl.Renderer.getRendererForSize(com.sun.scenario.effect.Effect,int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                87,
                98,
                "MustOverride"
            ],
            [
                0,
                26,
                "Returns-1"
            ],
            [
                42,
                57,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 125011,
        "text": "Returns true if represented class is serializable or externalizable and defines a conformant writeReplace method.",
        "meta": {
            "doc_index": 161523,
            "doc_name": "java.io.ObjectStreamClass.hasWriteReplaceMethod()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 125021,
        "text": "Use of the DefaultHandler version of this method is recommended as the HandlerBase class has been deprecated in SAX 2.0.",
        "meta": {
            "doc_index": 210747,
            "doc_name": "javax.xml.parsers.SAXParser.parse(java.io.InputStream,org.xml.sax.HandlerBase)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                67,
                88,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 125032,
        "text": "It is recommended that you override one of the previously mentioned methods rather than this one if your intention is to customize the way printing looks.",
        "meta": {
            "doc_index": 193763,
            "doc_name": "javax.swing.JComponent.print(java.awt.Graphics)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                75,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125038,
        "text": "IF the first child was neither Text nor CDATASection nor a replaceable EntityReference Node, then return true.",
        "meta": {
            "doc_index": 139891,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.TextImpl.canModifyNext(org.w3c.dom.Node)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "NotType-1"
            ],
            [
                31,
                35,
                "NotType-2"
            ],
            [
                40,
                52,
                "NotType-2"
            ],
            [
                71,
                91,
                "NotType-2"
            ],
            [
                105,
                109,
                "Returned"
            ]
        ]
    },
    {
        "id": 125039,
        "text": "Subclasses can override this method to provide different justification information.",
        "meta": {
            "doc_index": 155791,
            "doc_name": "java.awt.font.GraphicAttribute.getJustificationInfo()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125040,
        "text": "If the enumeration class (a subclass of class EnumSyntax) uses integer values starting at other than 0, override this method in the subclass.",
        "meta": {
            "doc_index": 189379,
            "doc_name": "javax.print.attribute.EnumSyntax.getOffset()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                113,
                124,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125049,
        "text": "An invocation of this method upon a charset cs returns the same result as the expression  cs.newDecoder() .onMalformedInput(CodingErrorAction.REPLACE) .onUnmappableCharacter(CodingErrorAction.REPLACE) .decode(bb);  except that it is potentially more efficient because it can cache decoders between successive invocations.",
        "meta": {
            "doc_index": 168307,
            "doc_name": "java.nio.charset.Charset.decode(java.nio.ByteBuffer)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                28,
                "SameUsage-1"
            ],
            [
                90,
                212,
                "SameUsage-2"
            ]
        ]
    },
    {
        "id": 125054,
        "text": "This completely replaces the time and is equivalent to ofNanoOfDay(long).",
        "meta": {
            "doc_index": 174430,
            "doc_name": "java.time.LocalTime.with(java.time.temporal.TemporalField,long)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "SameUsage-1"
            ],
            [
                55,
                72,
                "SameUsage-2"
            ]
        ]
    },
    {
        "id": 125059,
        "text": "Subclasses may override this method to return a different POA.",
        "meta": {
            "doc_index": 214774,
            "doc_name": "org.omg.PortableServer.Servant._default_POA()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125063,
        "text": "Subclasses may override this with a different implementation, if necessary.",
        "meta": {
            "doc_index": 170983,
            "doc_name": "java.security.Principal.implies(javax.security.auth.Subject)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                28,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125070,
        "text": "Region subclasses should override this method to return an appropriate value based on their content and layout strategy.",
        "meta": {
            "doc_index": 112754,
            "doc_name": "javafx.scene.layout.Region.computePrefWidth(double)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                45,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125073,
        "text": "The default implementation of this method tests against equality, but developers are able to override this method to perform checks in other ways that are specific to their domain.",
        "meta": {
            "doc_index": 107724,
            "doc_name": "javafx.scene.control.Cell.isItemChanged(T,T)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                102,
                113,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125074,
        "text": "Subclasses that guarantee to always completely paint their contents should override this method and return true.",
        "meta": {
            "doc_index": 193909,
            "doc_name": "javax.swing.JComponent.isOpaque()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                84,
                95,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125088,
        "text": "Applications can override this method in subclasses of ThreadGroup to provide alternative handling of uncaught exceptions.",
        "meta": {
            "doc_index": 165568,
            "doc_name": "java.lang.ThreadGroup.uncaughtException(java.lang.Thread,java.lang.Throwable)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                37,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125089,
        "text": "Subclasses which may have instances which do not support the unnormalized form must override this method.",
        "meta": {
            "doc_index": 157453,
            "doc_name": "java.awt.image.ColorModel.getNormalizedComponents(java.lang.Object,float[],int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                93,
                104,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125093,
        "text": "UIs might wish to override this if they present areas on the screen that can be viewed as components, but actual components are not used for presenting those areas.",
        "meta": {
            "doc_index": 199544,
            "doc_name": "javax.swing.plaf.ComponentUI.getAccessibleChildrenCount(javax.swing.JComponent)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125094,
        "text": "The CompositeView must then override the flipEastAndWestAtEnds method.",
        "meta": {
            "doc_index": 208658,
            "doc_name": "javax.swing.text.Utilities.getNextVisualPositionFrom(javax.swing.text.View,int,javax.swing.text.Position.Bias,java.awt.Shape,int,javax.swing.text.Position.Bias[])",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                69,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125099,
        "text": "Override this method to create you own classes on the fly.",
        "meta": {
            "doc_index": 135278,
            "doc_name": "com.sun.org.apache.bcel.internal.util.ClassLoader.createClass(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                20,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125108,
        "text": "Readers that support tiling should override this method.",
        "meta": {
            "doc_index": 185247,
            "doc_name": "javax.imageio.ImageReader.getTileWidth(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                44,
                55,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125109,
        "text": "The getLogWriter and setLogWriter methods should be used instead of the get/setlogStream methods, which are deprecated.",
        "meta": {
            "doc_index": 171836,
            "doc_name": "java.sql.DriverManager.getLogWriter()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                41,
                "Replace-1"
            ],
            [
                68,
                96,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 125116,
        "text": "A subclass can override this method to return a different table header object.",
        "meta": {
            "doc_index": 195923,
            "doc_name": "javax.swing.JTable.createDefaultTableHeader()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125126,
        "text": "Subclasses can just override this method, as always.",
        "meta": {
            "doc_index": 193758,
            "doc_name": "javax.swing.JComponent.paint(java.awt.Graphics)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                29,
                40,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125128,
        "text": "Subclasses might need to override this method to ensure that the index does not go over the number of frames needed for the particular progress bar instance.",
        "meta": {
            "doc_index": 198076,
            "doc_name": "javax.swing.plaf.basic.BasicProgressBarUI.incrementAnimationIndex()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                34,
                45,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125130,
        "text": "Application writers may override this method in a subclass to take specific actions for each processing instruction, such as setting status variables or invoking other methods.",
        "meta": {
            "doc_index": 216188,
            "doc_name": "org.xml.sax.HandlerBase.processingInstruction(java.lang.String,java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125136,
        "text": "All subclasses which maintain state must support and override this method, if necessary.",
        "meta": {
            "doc_index": 170347,
            "doc_name": "java.security.cert.PKIXCertPathChecker.clone()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                62,
                73,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125144,
        "text": "Every look and feel that supports a rollover effect in a table header should override this method and repaint the header.",
        "meta": {
            "doc_index": 198792,
            "doc_name": "javax.swing.plaf.basic.BasicTableHeaderUI.rolloverColumnUpdated(int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                86,
                97,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125146,
        "text": "Implementations that choose to support this method must override this method.",
        "meta": {
            "doc_index": 209999,
            "doc_name": "javax.xml.bind.helpers.AbstractMarshallerImpl.getNode(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                65,
                76,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125148,
        "text": "Subclasses that wish to do some sort of mapping, perhaps lower case to upper case should override this and do the necessary mapping.",
        "meta": {
            "doc_index": 207917,
            "doc_name": "javax.swing.text.MaskFormatter.MaskCharacter.getChar(char)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                98,
                102,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125152,
        "text": "A subclass of Applet should override this method if it has initialization to perform.",
        "meta": {
            "doc_index": 153651,
            "doc_name": "java.applet.Applet.init()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                48,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125153,
        "text": "This method either returns a coalesced event which replaces the existing event (and the new event is then discarded), or null to indicate that no combining should be done (add the second event to the end of the queue).",
        "meta": {
            "doc_index": 154440,
            "doc_name": "java.awt.Component.coalesceEvents(java.awt.AWTEvent,java.awt.AWTEvent)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Returns-1"
            ],
            [
                27,
                44,
                "Returns-2"
            ],
            [
                121,
                125,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 125161,
        "text": "If the system identifier is not null, the PUBLIC entries that were encountered when OVERRIDE YES was in effect are interrogated and the first matching entry is returned.",
        "meta": {
            "doc_index": 147423,
            "doc_name": "com.sun.org.apache.xml.internal.resolver.Catalog.resolveLocalPublic(int,java.lang.String,java.lang.String,java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                24,
                "NEQ-1"
            ],
            [
                32,
                36,
                "NEQ-2"
            ],
            [
                132,
                156,
                "Returned"
            ]
        ]
    },
    {
        "id": 125163,
        "text": "Concrete implementations of this class are strongly encouraged to override this method with a more efficient implementation.",
        "meta": {
            "doc_index": 164475,
            "doc_name": "java.lang.Process.waitFor(long,java.util.concurrent.TimeUnit)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                75,
                86,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125165,
        "text": "Subclasses that wish to allow incrementing to happen outside of the known fields will need to override this.",
        "meta": {
            "doc_index": 207628,
            "doc_name": "javax.swing.text.InternationalFormatter.canIncrement(java.lang.Object,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                103,
                107,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125166,
        "text": "Subclassers can override this to install a different layout manager (or null) in the constructor.",
        "meta": {
            "doc_index": 196626,
            "doc_name": "javax.swing.JViewport.createLayoutManager()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                29,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125167,
        "text": "Class loader implementations should override this method to specify where to load resources from.",
        "meta": {
            "doc_index": 162605,
            "doc_name": "java.lang.ClassLoader.findResources(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                56,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125171,
        "text": "It is very important that subclasses of Cell override the updateItem method properly, as failure to do so will lead to issues such as blank cells or cells with unexpected content appearing within them.",
        "meta": {
            "doc_index": 107722,
            "doc_name": "javafx.scene.control.Cell.updateItem(T,boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                54,
                75,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125177,
        "text": "Subclasses should override the default implementation, which returns null.",
        "meta": {
            "doc_index": 166169,
            "doc_name": "java.net.Authenticator.getPasswordAuthentication()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                53,
                "MustOverride"
            ],
            [
                69,
                73,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 125180,
        "text": "Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",
        "meta": {
            "doc_index": 185452,
            "doc_name": "javax.imageio.metadata.IIOMetadata.getStandardChromaNode()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125185,
        "text": "Note that this method is deprecated; use the method arguments in its place.",
        "meta": {
            "doc_index": 212905,
            "doc_name": "org.omg.CORBA.ServerRequest.params(org.omg.CORBA.NVList)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                21,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 125187,
        "text": "This unconditionally returns false, subclasses should override this method if there is the possibility for laying Views in descending order.",
        "meta": {
            "doc_index": 205556,
            "doc_name": "javax.swing.text.CompositeView.flipEastAndWestAtEnds(int,javax.swing.text.Position.Bias)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Returns-1"
            ],
            [
                29,
                34,
                "Returns-2"
            ],
            [
                63,
                74,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125188,
        "text": "If the value is an UIDefaults.ActiveValue the table entry is not replaced - the value is computed with ActiveValue.createValue() for each get() call.",
        "meta": {
            "doc_index": 209451,
            "doc_name": "javax.swing.UIDefaults.get(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "Type-1"
            ],
            [
                19,
                41,
                "Type-2"
            ]
        ]
    },
    {
        "id": 125193,
        "text": "However, subclasses of the XPathExprScanner can override this method in order to disallow certain tokens from being used in the scanned XPath expression.",
        "meta": {
            "doc_index": 141870,
            "doc_name": "com.sun.org.apache.xerces.internal.impl.xpath.XPath.Scanner.addToken(com.sun.org.apache.xerces.internal.impl.xpath.XPath.Tokens,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                57,
                68,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125194,
        "text": "Resizable subclasses should override this method to return an appropriate value.",
        "meta": {
            "doc_index": 113549,
            "doc_name": "javafx.scene.Node.getContentBias()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                48,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125196,
        "text": "This method may only be called after a call to prepareReplacePixels, or else an IllegalStateException will be thrown.",
        "meta": {
            "doc_index": 185416,
            "doc_name": "javax.imageio.ImageWriter.replacePixels(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                77,
                101,
                "Thrown"
            ]
        ]
    },
    {
        "id": 125203,
        "text": "JComponent subclasses generally override this method to narrow the argument type.",
        "meta": {
            "doc_index": 193750,
            "doc_name": "javax.swing.JComponent.setUI(javax.swing.plaf.ComponentUI)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                41,
                52,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125209,
        "text": "When using an ICC_ColorSpace with a profile that requires different maximum component values, it is necessary to subclass this class and override this method.",
        "meta": {
            "doc_index": 154090,
            "doc_name": "java.awt.color.ICC_ColorSpace.getMaxValue(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                146,
                157,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125215,
        "text": "Subclasses that provide different string conversion should override this method if necessary.",
        "meta": {
            "doc_index": 204468,
            "doc_name": "javax.swing.RowFilter.Entry.getStringValue(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                68,
                79,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125218,
        "text": "A subclass of Applet should override this method if it has any operation that it wants to perform before it is destroyed.",
        "meta": {
            "doc_index": 153654,
            "doc_name": "java.applet.Applet.destroy()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                48,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125220,
        "text": "Subclasses can override createEditor to return a component that contains the spinner's editor or null, if they're going to handle adding the editor to the JSpinner in an installUI override.",
        "meta": {
            "doc_index": 203924,
            "doc_name": "javax.swing.plaf.synth.SynthSpinnerUI.createEditor()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                36,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125224,
        "text": "Subclasses should also override adjustValue.",
        "meta": {
            "doc_index": 207633,
            "doc_name": "javax.swing.text.InternationalFormatter.getSupportsIncrement()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                43,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125273,
        "text": "If it refuses (returns false), anEdit is given a chance to replaceEdit the last edit.",
        "meta": {
            "doc_index": 209579,
            "doc_name": "javax.swing.undo.CompoundEdit.addEdit(javax.swing.undo.UndoableEdit)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                5,
                "Returns-1"
            ],
            [
                23,
                28,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 125231,
        "text": "Calls to this method could be replaced with calls to getElemDesc(name), but this one should be faster.",
        "meta": {
            "doc_index": 150015,
            "doc_name": "com.sun.org.apache.xml.internal.serializer.ToHTMLStream.getElemDesc2(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                20,
                "SameUsage-1"
            ],
            [
                53,
                70,
                "SameUsage-2"
            ]
        ]
    },
    {
        "id": 125232,
        "text": "Application writers may override this method to take specific actions for each chunk of character data (such as adding the data to a node or buffer, or printing it to a file).",
        "meta": {
            "doc_index": 216240,
            "doc_name": "org.xml.sax.helpers.DefaultHandler.characters(char[],int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125237,
        "text": "You may override this if you want to (for example) return a BeanInfo for a base class.",
        "meta": {
            "doc_index": 160586,
            "doc_name": "java.beans.SimpleBeanInfo.getAdditionalBeanInfo()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                21,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125244,
        "text": "It is good practice for a subclass that overrides this method to call the overridden method via <noun>super.postRegister(...)</noun>.",
        "meta": {
            "doc_index": 188422,
            "doc_name": "javax.management.StandardMBean.postRegister(java.lang.Boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                61,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125248,
        "text": "Subclasses should override this method if necessary.",
        "meta": {
            "doc_index": 154079,
            "doc_name": "java.awt.color.ColorSpace.getMinValue(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125252,
        "text": "If a subclass overrides equals(), it should also override hashCode() such that two attributes that are equal have the same hash code.",
        "meta": {
            "doc_index": 188645,
            "doc_name": "javax.naming.directory.BasicAttribute.equals(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                58,
                68,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125253,
        "text": "unregister this DragGestureRecognizer's Listeners with the Component subclasses must override this method",
        "meta": {
            "doc_index": 208949,
            "doc_name": "javax.swing.TransferHandler.SwingDragGestureRecognizer.unregisterListeners()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                94,
                105,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125255,
        "text": "A subclass that just wants to specialize the UI (look and feel) delegate's paint method should just override paintComponent.",
        "meta": {
            "doc_index": 193758,
            "doc_name": "javax.swing.JComponent.paint(java.awt.Graphics)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                109,
                123,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125257,
        "text": "Subclasses may want to override these methods.",
        "meta": {
            "doc_index": 197628,
            "doc_name": "javax.swing.plaf.basic.BasicListUI.paint(java.awt.Graphics,javax.swing.JComponent)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                32,
                45,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125260,
        "text": "This case applies only if the malformed action of this encoder is CodingErrorAction#REPORT; otherwise the malformed input will be ignored or replaced, as requested.",
        "meta": {
            "doc_index": 168354,
            "doc_name": "java.nio.charset.CharsetEncoder.encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                62,
                "EQ-1"
            ],
            [
                66,
                90,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 125264,
        "text": "Subclasses can override this single method to capture all log activity.",
        "meta": {
            "doc_index": 180957,
            "doc_name": "java.util.logging.Logger.log(java.util.logging.LogRecord)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                28,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125265,
        "text": "If the object is a DirContext, any existing attributes associated with the name are replaced with those of the object.",
        "meta": {
            "doc_index": 188580,
            "doc_name": "javax.naming.Context.rebind(javax.naming.Name,java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                13,
                "Type-1"
            ],
            [
                19,
                29,
                "Type-2"
            ]
        ]
    },
    {
        "id": 125266,
        "text": "Override this if you want to right, left, top, or bottom align the progress string or if you need to nudge it around for any reason.",
        "meta": {
            "doc_index": 198068,
            "doc_name": "javax.swing.plaf.basic.BasicProgressBarUI.getStringPlacement(java.awt.Graphics,java.lang.String,int,int,int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                13,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125277,
        "text": "A subclass should override this method if it supports schema.",
        "meta": {
            "doc_index": 188664,
            "doc_name": "javax.naming.directory.BasicAttribute.getAttributeSyntaxDefinition()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125282,
        "text": "A subclass can override this method to return a different table model object.",
        "meta": {
            "doc_index": 195920,
            "doc_name": "javax.swing.JTable.createDefaultDataModel()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125297,
        "text": "You can override this method if you need to implement some specific policies for minimizing the accesses made to some remote underlying resources.",
        "meta": {
            "doc_index": 131233,
            "doc_name": "com.sun.jmx.snmp.agent.SnmpMibGroup.set(com.sun.jmx.snmp.agent.SnmpMibSubRequest,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                28,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125299,
        "text": "Override this method in subclass to hook in efficient internal data structure.",
        "meta": {
            "doc_index": 138909,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.AttrImpl.synchronizeChildren()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                20,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125306,
        "text": "If this flag is set to true, it overrides any tables specified in the metadata.",
        "meta": {
            "doc_index": 185667,
            "doc_name": "javax.imageio.plugins.jpeg.JPEGImageWriteParam.setOptimizeHuffmanTables(boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                12,
                "EQ-1"
            ],
            [
                23,
                27,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 125308,
        "text": "Subclasses may override this method in order to implement their own behaviors",
        "meta": {
            "doc_index": 159919,
            "doc_name": "java.beans.beancontext.BeanContextChildSupport.serviceAvailable(java.beans.beancontext.BeanContextServiceAvailableEvent)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125309,
        "text": "Subclasses of Thread should override this method.",
        "meta": {
            "doc_index": 165477,
            "doc_name": "java.lang.Thread.run()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                48,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125312,
        "text": "Subclasses should override this if they want cursor navigation to skip certain characters.",
        "meta": {
            "doc_index": 205739,
            "doc_name": "javax.swing.text.DefaultFormatter.isNavigatable(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125314,
        "text": "TODO: In future, this should be replaced by cal.getTimeInMillis().",
        "meta": {
            "doc_index": 210626,
            "doc_name": "javax.xml.datatype.Duration.getCalendarTimeInMillis(java.util.Calendar)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                21,
                "ReplacedBy-1"
            ],
            [
                44,
                65,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 125315,
        "text": "This method should be overridden by encoders that require notification of changes to the replacement.",
        "meta": {
            "doc_index": 168344,
            "doc_name": "java.nio.charset.CharsetEncoder.implReplaceWith(byte[])",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125316,
        "text": "Subclasses that use this constructor must override getLastPathComponent, and getParentPath.",
        "meta": {
            "doc_index": 209322,
            "doc_name": "javax.swing.tree.TreePath.TreePath()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                51,
                71,
                "MustOverride"
            ],
            [
                77,
                90,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125317,
        "text": "Application writers may override this method in a subclass to take specific actions for each warning, such as inserting the message in a log file or printing it to the console.",
        "meta": {
            "doc_index": 216189,
            "doc_name": "org.xml.sax.HandlerBase.warning(org.xml.sax.SAXParseException)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125324,
        "text": "This method is deprecated as it involves non-portable functionality.",
        "meta": {
            "doc_index": 117054,
            "doc_name": "netscape.javascript.JSException.getWrappedExceptionType()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 125325,
        "text": "Subclasses must override this method since the implementation in this abstract class throws an UnsupportedOperationException.",
        "meta": {
            "doc_index": 157446,
            "doc_name": "java.awt.image.ColorModel.getComponents(java.lang.Object,int[],int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                36,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125326,
        "text": "On setting, any possible children this node may have are removed and, if it the new string is not empty or null, replaced by a single Text node containing the string this attribute is set to.",
        "meta": {
            "doc_index": 215971,
            "doc_name": "org.w3c.dom.Node.setTextContent(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                73,
                75,
                "NEQ-1"
            ],
            [
                107,
                111,
                "NEQ-2"
            ],
            [
                98,
                103,
                "NEQ-2"
            ]
        ]
    },
    {
        "id": 125328,
        "text": "If the first child was a Text or CDATASection node and its next siblings are neither a replaceable EntityReference or Text or CDATASection nodes, return false.",
        "meta": {
            "doc_index": 139891,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.TextImpl.canModifyNext(org.w3c.dom.Node)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                18,
                "Type-1"
            ],
            [
                25,
                29,
                "Type-2"
            ],
            [
                33,
                45,
                "Type-2"
            ],
            [
                55,
                72,
                "NotType-1"
            ],
            [
                87,
                114,
                "NotType-2"
            ],
            [
                118,
                122,
                "NotType-2"
            ],
            [
                126,
                138,
                "NotType-2"
            ],
            [
                153,
                158,
                "Returned"
            ]
        ]
    },
    {
        "id": 125329,
        "text": "Subclasses will typically only need to override this if they wish to install additional listeners on the JFormattedTextField.",
        "meta": {
            "doc_index": 205723,
            "doc_name": "javax.swing.text.DefaultFormatter.install(javax.swing.JFormattedTextField)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                48,
                52,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125333,
        "text": "If characterIterators is null and fp is non-null and identifies Field.MESSAGE_ARGUMENT, the location of the first replaced argument will be set in it.",
        "meta": {
            "doc_index": 172947,
            "doc_name": "java.text.MessageFormat.subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List<java.text.AttributedCharacterIterator>)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                21,
                "EQ-1"
            ],
            [
                25,
                29,
                "EQ-2"
            ],
            [
                34,
                36,
                "NotNull"
            ]
        ]
    },
    {
        "id": 125334,
        "text": "This can be overriden in a subclass.",
        "meta": {
            "doc_index": 173071,
            "doc_name": "java.text.RuleBasedCollator.compare(java.lang.String,java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125339,
        "text": "In order to enable it this class need to override Window:: supportsPlatformModality() to return true.",
        "meta": {
            "doc_index": 78972,
            "doc_name": "com.sun.glass.ui.monocle.MonocleWindow._enterModal(long)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                85,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125345,
        "text": "Override this method to update your ChooserPanel.",
        "meta": {
            "doc_index": 192370,
            "doc_name": "javax.swing.colorchooser.AbstractColorChooserPanel.updateChooser()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                20,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125351,
        "text": "Subclasses should override this with a thread-safe implementation.",
        "meta": {
            "doc_index": 149064,
            "doc_name": "com.sun.org.apache.xml.internal.security.transforms.TransformSpi.enginePerformTransform(com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput,com.sun.org.apache.xml.internal.security.transforms.Transform)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125363,
        "text": "This implementation returns 0, indicating the AbstractColorChooserPanel does not support a mnemonic, subclasses wishing a mnemonic will need to override this.",
        "meta": {
            "doc_index": 192373,
            "doc_name": "javax.swing.colorchooser.AbstractColorChooserPanel.getMnemonic()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returns-1"
            ],
            [
                28,
                29,
                "Returns-2"
            ],
            [
                153,
                157,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125364,
        "text": "Subclasses that wish different behavior should override this and provide the additional feedback.",
        "meta": {
            "doc_index": 196757,
            "doc_name": "javax.swing.LookAndFeel.provideErrorFeedback(java.awt.Component)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                56,
                60,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125365,
        "text": "Subclasses should override this method and return the permission that best represents the permission required to make a a connection to the URL.",
        "meta": {
            "doc_index": 167305,
            "doc_name": "java.net.URLConnection.getPermission()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125373,
        "text": "That is, if you are making a circular progress indicator, you will want to override this method.",
        "meta": {
            "doc_index": 198058,
            "doc_name": "javax.swing.plaf.basic.BasicProgressBarUI.getAmountFull(java.awt.Insets,int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                84,
                95,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125376,
        "text": "Subclasses should, if possible, override this with a more efficient implementation - in many cases, they can simply return getMinimum().",
        "meta": {
            "doc_index": 175925,
            "doc_name": "java.util.Calendar.getActualMinimum(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                41,
                45,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125379,
        "text": "Reasons for this may include: The progress bar is determinate and becomes displayable The progress bar is displayable and becomes determinate The progress bar is displayable and determinate and this UI is installed If you implement your own animation thread, you must override this method.",
        "meta": {
            "doc_index": 198043,
            "doc_name": "javax.swing.plaf.basic.BasicProgressBarUI.startAnimationTimer()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                277,
                288,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125380,
        "text": "A subclass of Applet should override this method if it has any operation that it wants to perform each time the Web page containing it is no longer visible.",
        "meta": {
            "doc_index": 153653,
            "doc_name": "java.applet.Applet.stop()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                48,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125383,
        "text": "Class loader implementations should override this method to specify where to find resources.",
        "meta": {
            "doc_index": 162604,
            "doc_name": "java.lang.ClassLoader.findResource(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                45,
                56,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125389,
        "text": "However, it can be useful to override this method should you want to prepare state before invoking the superclass behavior.",
        "meta": {
            "doc_index": 193763,
            "doc_name": "javax.swing.JComponent.print(java.awt.Graphics)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                38,
                49,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125390,
        "text": "If this method returns false, a call to replaceImageMetadata(imageIndex) will throw an UnsupportedOperationException.",
        "meta": {
            "doc_index": 185402,
            "doc_name": "javax.imageio.ImageWriter.canReplaceImageMetadata(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                14,
                "Returns-1"
            ],
            [
                23,
                28,
                "Returns-2"
            ],
            [
                40,
                72,
                "Throws-1"
            ],
            [
                84,
                116,
                "Throws-2"
            ]
        ]
    },
    {
        "id": 125392,
        "text": "This implementation returns -1, indicating the AbstractColorChooserPanel does not support a mnemonic, subclasses wishing a mnemonic will need to override this.",
        "meta": {
            "doc_index": 192374,
            "doc_name": "javax.swing.colorchooser.AbstractColorChooserPanel.getDisplayedMnemonicIndex()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                19,
                "Returns-1"
            ],
            [
                28,
                30,
                "Returns-2"
            ],
            [
                154,
                158,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125394,
        "text": "Note that this method is deprecated; use the method set_result in its place.",
        "meta": {
            "doc_index": 212907,
            "doc_name": "org.omg.CORBA.ServerRequest.result(org.omg.CORBA.Any)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                10,
                21,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 125396,
        "text": "Many implementations will override this method for efficiency.",
        "meta": {
            "doc_index": 175276,
            "doc_name": "java.util.AbstractList.addAll(int,java.util.Collection<? extends E>)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                35,
                46,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125397,
        "text": "You can override this if you wish to define a default property for the bean.",
        "meta": {
            "doc_index": 160582,
            "doc_name": "java.beans.SimpleBeanInfo.getDefaultPropertyIndex()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                21,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125399,
        "text": "Knowledgeable providers should override this method.",
        "meta": {
            "doc_index": 170892,
            "doc_name": "java.security.MessageDigestSpi.engineDigest(byte[],int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                51,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125403,
        "text": "If canReplaceImageMetadata(imageIndex) returns false, an UnsupportedOperationException will be thrown.",
        "meta": {
            "doc_index": 185403,
            "doc_name": "javax.imageio.ImageWriter.replaceImageMetadata(int,javax.imageio.metadata.IIOMetadata)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                38,
                "Returns-1"
            ],
            [
                47,
                52,
                "Returns-2"
            ],
            [
                54,
                86,
                "Thrown"
            ]
        ]
    },
    {
        "id": 125404,
        "text": "A subclass may override this method to support it or to change the format of the written data.",
        "meta": {
            "doc_index": 186546,
            "doc_name": "javax.management.loading.MLet.writeExternal(java.io.ObjectOutput)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125405,
        "text": "Most implementations will probably choose to override this method for efficiency.",
        "meta": {
            "doc_index": 175262,
            "doc_name": "java.util.AbstractCollection.clear()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                54,
                65,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125407,
        "text": "If you've overriden this method, then you'll probably want to override replaceEditor as well.",
        "meta": {
            "doc_index": 203924,
            "doc_name": "javax.swing.plaf.synth.SynthSpinnerUI.createEditor()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                71,
                84,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125412,
        "text": "A subclass can override this method to return a different column model object.",
        "meta": {
            "doc_index": 195921,
            "doc_name": "javax.swing.JTable.createDefaultColumnModel()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125413,
        "text": "Override this if you are making another kind of progress bar.",
        "meta": {
            "doc_index": 198064,
            "doc_name": "javax.swing.plaf.basic.BasicProgressBarUI.paintIndeterminate(java.awt.Graphics,javax.swing.JComponent)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                13,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125416,
        "text": "Subclasses which handle different rounding modes should override this method.",
        "meta": {
            "doc_index": 172997,
            "doc_name": "java.text.NumberFormat.getRoundingMode()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                65,
                76,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125418,
        "text": "JMenuItem's are focusable, but subclasses may want to be, this provides them the opportunity to override this and invoke something else, or nothing at all.",
        "meta": {
            "doc_index": 194846,
            "doc_name": "javax.swing.JMenuItem.initFocusability()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                105,
                109,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125421,
        "text": "Subclasses should override this method.",
        "meta": {
            "doc_index": 161832,
            "doc_name": "java.io.Reader.markSupported()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                38,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125426,
        "text": "Otherwise, replaces the value with the results of the given remapping function, or removes if the result is null.",
        "meta": {
            "doc_index": 171031,
            "doc_name": "java.security.Provider.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction<? super java.lang.Object,? super java.lang.Object,? extends java.lang.Object>)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                94,
                104,
                "EQ-1"
            ],
            [
                108,
                112,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 125432,
        "text": "An application may override this method to perform initialization prior to the actual starting of the application.",
        "meta": {
            "doc_index": 102819,
            "doc_name": "javafx.application.Application.init()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                28,
                39,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125438,
        "text": "Application writers may override this method in a subclass to keep track of the unparsed entities declared in a document.",
        "meta": {
            "doc_index": 216232,
            "doc_name": "org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125442,
        "text": "Subclasses should override this, as this is used by all other methods.",
        "meta": {
            "doc_index": 181676,
            "doc_name": "java.util.Random.next(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125446,
        "text": "If the DTM implememtation that extends the default base requires notification when the document is being released, they can override this method",
        "meta": {
            "doc_index": 146900,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.DTMDocumentImpl.documentRelease()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                133,
                144,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125448,
        "text": "Button subclasses that support mirroring the selected state from the action should override this to return true.",
        "meta": {
            "doc_index": 191889,
            "doc_name": "javax.swing.AbstractButton.shouldUpdateSelectedStateFromAction()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                92,
                96,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125450,
        "text": "Subclasses may override this method to perform completion actions on the Event Dispatch Thread.",
        "meta": {
            "doc_index": 204861,
            "doc_name": "javax.swing.SwingWorker.done()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125452,
        "text": "Subclasses my override this method to compute a value, e.g. the change required to scroll up or down one (variable height) line text or one row in a table.",
        "meta": {
            "doc_index": 195228,
            "doc_name": "javax.swing.JScrollBar.getUnitIncrement(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                34,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125454,
        "text": "The affected pixel area will be clipped against the supplied If canReplacePixels returns false, and UnsupportedOperationException will be thrown.",
        "meta": {
            "doc_index": 185415,
            "doc_name": "javax.imageio.ImageWriter.prepareReplacePixels(int,java.awt.Rectangle)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                64,
                80,
                "Returns-1"
            ],
            [
                89,
                94,
                "Returns-2"
            ],
            [
                100,
                129,
                "Thrown"
            ]
        ]
    },
    {
        "id": 125461,
        "text": "Hopefully, all subclasses will override this method to accept strings of text, but if they don't, AbstractFilter's implementation will spoon-feed them via write(char).",
        "meta": {
            "doc_index": 208050,
            "doc_name": "javax.swing.text.rtf.AbstractFilter.write(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                40,
                51,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125465,
        "text": "In future, this should be replaced by cal.getTimeInMillis()",
        "meta": {
            "doc_index": 143547,
            "doc_name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl.getCalendarTimeInMillis(java.util.Calendar)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                11,
                15,
                "ReplacedBy-1"
            ],
            [
                38,
                59,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 125470,
        "text": "It is recommended that subclasses override this method.",
        "meta": {
            "doc_index": 170529,
            "doc_name": "java.security.cert.X509CRL.getIssuerX500Principal()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                43,
                54,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125477,
        "text": "Subclasses that want to conditionally allow removal should override this and only call supers implementation as necessary, or call directly into the FilterBypass as necessary.",
        "meta": {
            "doc_index": 205911,
            "doc_name": "javax.swing.text.DocumentFilter.remove(javax.swing.text.DocumentFilter.FilterBypass,int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                68,
                72,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125479,
        "text": "An ImageFilter subclass might override this method or not, depending on if and how it can send data in TDLR order.",
        "meta": {
            "doc_index": 157736,
            "doc_name": "java.awt.image.ImageFilter.resendTopDownLeftRight(java.awt.image.ImageProducer)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                39,
                50,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125483,
        "text": "IF the last child was neither Text nor CDATASection nor a replaceable EntityReference Node, then return true.",
        "meta": {
            "doc_index": 139890,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.TextImpl.canModifyPrev(org.w3c.dom.Node)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "NotType-1"
            ],
            [
                30,
                34,
                "NotType-2"
            ],
            [
                39,
                51,
                "NotType-2"
            ],
            [
                58,
                90,
                "NotType-2"
            ],
            [
                104,
                108,
                "Returned"
            ]
        ]
    },
    {
        "id": 125486,
        "text": "Application writers may override this method in a subclass to take specific actions at the end of each prefix mapping.",
        "meta": {
            "doc_index": 147249,
            "doc_name": "com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM.endPrefixMapping(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125489,
        "text": "The default implementation returns BaselineResizeBehavior.OTHER, subclasses that support baseline should override appropriately.",
        "meta": {
            "doc_index": 192081,
            "doc_name": "javax.swing.border.AbstractBorder.getBaselineResizeBehavior(java.awt.Component)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                26,
                "Returns-1"
            ],
            [
                35,
                64,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 125490,
        "text": "Subclasses that want to handle ChangeEvents differently can override this to return a subclass of ModelListener or another ChangeListener implementation.",
        "meta": {
            "doc_index": 195575,
            "doc_name": "javax.swing.JTabbedPane.createChangeListener()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                69,
                73,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125493,
        "text": "Override default behavior so that if deep is true, children are also toggled.",
        "meta": {
            "doc_index": 139756,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.ParentNode.setReadOnly(boolean,boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                41,
                "EQ-1"
            ],
            [
                45,
                49,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 125497,
        "text": "Subclasses that wish to render a different flashing caret should override paint and only paint the caret if this method returns true.",
        "meta": {
            "doc_index": 205599,
            "doc_name": "javax.swing.text.DefaultCaret.isVisible()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                74,
                79,
                "MustOverride"
            ],
            [
                108,
                119,
                "Returns-1"
            ],
            [
                128,
                132,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 125498,
        "text": "Subclasses can override this method if another implementation is needed.",
        "meta": {
            "doc_index": 157586,
            "doc_name": "java.awt.image.DataBuffer.getElemDouble(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125503,
        "text": "If canReplacePixels returns false, and UnsupportedOperationException will be thrown.",
        "meta": {
            "doc_index": 185418,
            "doc_name": "javax.imageio.ImageWriter.endReplacePixels()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                19,
                "Returns-1"
            ],
            [
                28,
                33,
                "Returns-2"
            ],
            [
                39,
                68,
                "Thrown"
            ]
        ]
    },
    {
        "id": 125507,
        "text": "This method is deprecated and should not be used because SQL TIME values do not have a year component.",
        "meta": {
            "doc_index": 172416,
            "doc_name": "java.sql.Time.getYear()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 125512,
        "text": "A subclass may override this to retrieve the value dynamically from the directory.",
        "meta": {
            "doc_index": 188649,
            "doc_name": "javax.naming.directory.BasicAttribute.get()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                28,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125516,
        "text": "Else if at the end of the inserted text, the replace the item with the placeholder Otherwise the insert is bogus and false is returned.",
        "meta": {
            "doc_index": 207914,
            "doc_name": "javax.swing.text.MaskFormatter.canReplace(javax.swing.text.DefaultFormatter.ReplaceHolder)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                117,
                122,
                "Returned"
            ]
        ]
    },
    {
        "id": 125523,
        "text": "Applications that want a stricter policy should override this method.",
        "meta": {
            "doc_index": 165052,
            "doc_name": "java.lang.SecurityManager.checkAccess(java.lang.Thread)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                57,
                68,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125524,
        "text": "This method is deprecated in favor of the version that takes a binary name as its first argument, and is more secure.",
        "meta": {
            "doc_index": 162581,
            "doc_name": "java.lang.ClassLoader.defineClass(byte[],int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 125525,
        "text": "You can override this if you wish to provide explicit property info.",
        "meta": {
            "doc_index": 160581,
            "doc_name": "java.beans.SimpleBeanInfo.getPropertyDescriptors()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                21,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125527,
        "text": "Subclasses may override this method to force ScrollPaneUI implementations to use a JScrollBar subclass.",
        "meta": {
            "doc_index": 195287,
            "doc_name": "javax.swing.JScrollPane.createHorizontalScrollBar()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125531,
        "text": "If a provider needs to handle additional properties, it should override this method in a derived class.",
        "meta": {
            "doc_index": 210045,
            "doc_name": "javax.xml.bind.helpers.AbstractUnmarshallerImpl.setProperty(java.lang.String,java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                72,
                83,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125540,
        "text": "Note: Although this method is not deprecated, the preferred method to use is remove(int), which implements the List interface defined in the 1.2 Collections framework.",
        "meta": {
            "doc_index": 192796,
            "doc_name": "javax.swing.DefaultListModel.removeElementAt(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                26,
                "ReplacedBy-1"
            ],
            [
                77,
                88,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 125552,
        "text": "A subclass can override this method to return a different selection model object.",
        "meta": {
            "doc_index": 195922,
            "doc_name": "javax.swing.JTable.createDefaultSelectionModel()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125553,
        "text": "Region subclasses may override this method to return an different value based on their content and layout strategy.",
        "meta": {
            "doc_index": 112756,
            "doc_name": "javafx.scene.layout.Region.computeMaxWidth(double)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                31,
                42,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125554,
        "text": "Sets associated Descriptor (full replace) for the ModelMBeanOperationInfo If the new Descriptor is null, then the associated Descriptor reverts to a default descriptor.",
        "meta": {
            "doc_index": 186972,
            "doc_name": "javax.management.modelmbean.ModelMBeanOperationInfo.setDescriptor(javax.management.Descriptor)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                77,
                95,
                "EQ-1"
            ],
            [
                99,
                103,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 125558,
        "text": "This constructor is deprecated as it involves non-portable functionality.",
        "meta": {
            "doc_index": 117052,
            "doc_name": "netscape.javascript.JSException.JSException(java.lang.String,java.lang.String,int,java.lang.String,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                16,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 125560,
        "text": "If the value contains a writeReplace method then the result is returned.",
        "meta": {
            "doc_index": 119465,
            "doc_name": "com.sun.corba.se.impl.io.ValueHandlerImpl.writeReplace(java.io.Serializable)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                49,
                59,
                "Returned"
            ]
        ]
    },
    {
        "id": 125561,
        "text": "Concrete subclasses of this class may override this method in order to provide a localized display name.",
        "meta": {
            "doc_index": 168300,
            "doc_name": "java.nio.charset.Charset.displayName()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                47,
                58,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125564,
        "text": "Other subclasses should also provide overrides of this function that do the right thing.",
        "meta": {
            "doc_index": 175906,
            "doc_name": "java.util.Calendar.roll(int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                50,
                63,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125565,
        "text": "A subclass may override this to make use of schema syntax information and matching rules, which define what it means for two attributes to be equal.",
        "meta": {
            "doc_index": 188645,
            "doc_name": "javax.naming.directory.BasicAttribute.equals(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                28,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125569,
        "text": "Application writers may override this method in a subclass if they wish to keep track of the notations declared in a document.",
        "meta": {
            "doc_index": 216231,
            "doc_name": "org.xml.sax.helpers.DefaultHandler.notationDecl(java.lang.String,java.lang.String,java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125570,
        "text": "Subclasses are encouraged to override this method and provide a more efficient implementation.",
        "meta": {
            "doc_index": 161593,
            "doc_name": "java.io.OutputStream.write(byte[],int,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                38,
                49,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125571,
        "text": "If newChild is a DocumentFragment object, oldChild is replaced by all of the DocumentFragment children, which are inserted in the same order.",
        "meta": {
            "doc_index": 215956,
            "doc_name": "org.w3c.dom.Node.replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                11,
                "Type-1"
            ],
            [
                17,
                33,
                "Type-2"
            ]
        ]
    },
    {
        "id": 125572,
        "text": "Subclasses may override this method to return instances of their own ItemEvent handlers.",
        "meta": {
            "doc_index": 197085,
            "doc_name": "javax.swing.plaf.basic.BasicComboPopup.createItemListener()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125574,
        "text": "If a subclass overrides hashCode(), it should override equals() as well so that two Attributes instances that are equal have the same hash code.",
        "meta": {
            "doc_index": 188690,
            "doc_name": "javax.naming.directory.BasicAttributes.hashCode()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                55,
                63,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125575,
        "text": "Subclasses should override this returning true if the instance represents a literal character.",
        "meta": {
            "doc_index": 207915,
            "doc_name": "javax.swing.text.MaskFormatter.MaskCharacter.isLiteral()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125585,
        "text": "Override this method if there is some needed initialization that takes place after argument parsing.",
        "meta": {
            "doc_index": 126737,
            "doc_name": "com.sun.corba.se.spi.orb.ParserImplBase.complete()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                20,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125592,
        "text": "Readers that support tiling with non-(0, 0) offsets should override this method.",
        "meta": {
            "doc_index": 185250,
            "doc_name": "javax.imageio.ImageReader.getTileGridYOffset(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                68,
                79,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125594,
        "text": "If an NGNode subclass is written to support opaque regions, it must override this method to return true.",
        "meta": {
            "doc_index": 89004,
            "doc_name": "com.sun.javafx.sg.prism.NGNode.supportsOpaqueRegions()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                77,
                88,
                "MustOverride"
            ],
            [
                99,
                103,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 125596,
        "text": "Subclasses must override this method to get any behavior other than returning null because the implementation in this abstract class returns null.",
        "meta": {
            "doc_index": 157463,
            "doc_name": "java.awt.image.ColorModel.getAlphaRaster(java.awt.image.WritableRaster)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                25,
                36,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125602,
        "text": "If enable is true, and there is a security manager installed, this method first calls the security manager's checkPermission method with the SerializablePermission(\"enableSubstitution\") permission to ensure it's ok to enable the stream to allow objects read from the stream to be replaced.",
        "meta": {
            "doc_index": 161184,
            "doc_name": "java.io.ObjectInputStream.enableResolveObject(boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                9,
                "EQ-1"
            ],
            [
                13,
                17,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 125610,
        "text": "Note: Although this method is not deprecated, the preferred method to use is get(int), which implements the List interface defined in the 1.2 Collections framework.",
        "meta": {
            "doc_index": 192778,
            "doc_name": "javax.swing.DefaultListModel.getElementAt(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                26,
                "ReplacedBy-1"
            ],
            [
                77,
                85,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 125614,
        "text": "Subclasses may override this method to return a subclass of JViewport.",
        "meta": {
            "doc_index": 195293,
            "doc_name": "javax.swing.JScrollPane.createViewport()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125617,
        "text": "The subclass must then also override the computeDirtyRegion method to return the dirty region, or null if the node in its current state doesn't have one.",
        "meta": {
            "doc_index": 89004,
            "doc_name": "com.sun.javafx.sg.prism.NGNode.supportsOpaqueRegions()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                37,
                66,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125618,
        "text": "JComponent subclasses that can't make this guarantee, such as JLayeredPane, should override this method to return false.",
        "meta": {
            "doc_index": 193934,
            "doc_name": "javax.swing.JComponent.isOptimizedDrawingEnabled()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                92,
                103,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125619,
        "text": "This method is deprecated, and replaced by ORB.resolve_initial_references(\"NameOfCurrentObject\");",
        "meta": {
            "doc_index": 123133,
            "doc_name": "com.sun.corba.se.impl.orb.ORBImpl.get_current()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ],
            [
                43,
                96,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 125620,
        "text": "Application writers may override this method in a subclass to take specific actions at the beginning of a document (such as allocating the root node of a tree or creating an output file).",
        "meta": {
            "doc_index": 216182,
            "doc_name": "org.xml.sax.HandlerBase.startDocument()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125624,
        "text": "Returns true if this UndoableEdit should replace anEdit.",
        "meta": {
            "doc_index": 209605,
            "doc_name": "javax.swing.undo.UndoableEdit.replaceEdit(javax.swing.undo.UndoableEdit)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ]
        ]
    },
    {
        "id": 125632,
        "text": "A subclass may override this method.",
        "meta": {
            "doc_index": 85890,
            "doc_name": "com.sun.javafx.scene.control.behavior.BehaviorBase.traverse(javafx.scene.Node,com.sun.javafx.scene.traversal.Direction)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125633,
        "text": "An invocation of this method upon a charset cs returns the same result as the expression  cs.newEncoder() .onMalformedInput(CodingErrorAction.REPLACE) .onUnmappableCharacter(CodingErrorAction.REPLACE) .encode(bb);  except that it is potentially more efficient because it can cache encoders between successive invocations.",
        "meta": {
            "doc_index": 168308,
            "doc_name": "java.nio.charset.Charset.encode(java.nio.CharBuffer)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                17,
                28,
                "SameUsage-1"
            ],
            [
                90,
                212,
                "SameUsage-2"
            ]
        ]
    },
    {
        "id": 125636,
        "text": "subclasses should override this to provide their own implementation",
        "meta": {
            "doc_index": 159655,
            "doc_name": "java.awt.Toolkit.createDragGestureRecognizer(java.lang.Class<T>,java.awt.dnd.DragSource,java.awt.Component,int,java.awt.dnd.DragGestureListener)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125643,
        "text": "If no replacement is found, returns the lookup object itself.",
        "meta": {
            "doc_index": 161466,
            "doc_name": "java.io.ObjectOutputStream.ReplaceTable.lookup(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                36,
                53,
                "Returned"
            ]
        ]
    },
    {
        "id": 125646,
        "text": "Subclasses that don't use the default painting code might need to override this method to change the way that the repaint method is invoked.",
        "meta": {
            "doc_index": 129717,
            "doc_name": "com.sun.java.swing.plaf.windows.WindowsProgressBarUI.setAnimationIndex(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                75,
                86,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125648,
        "text": "This replaces requestLayout() as it has been overridden to do nothing so that changes to children's bounds etc do not cause a layout.",
        "meta": {
            "doc_index": 106695,
            "doc_name": "javafx.scene.chart.Axis.requestAxisLayout()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                4,
                "Replace-1"
            ],
            [
                14,
                29,
                "Replace-2"
            ]
        ]
    },
    {
        "id": 125658,
        "text": "Use of the DefaultHandler version of this method is recommended as the HandlerBase class has been deprecated in SAX 2.0",
        "meta": {
            "doc_index": 210755,
            "doc_name": "javax.xml.parsers.SAXParser.parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                67,
                88,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 125662,
        "text": "Application writers may override this method in a subclass to take specific actions at the end of each element (such as finalising a tree node or writing output to a file).",
        "meta": {
            "doc_index": 216239,
            "doc_name": "org.xml.sax.helpers.DefaultHandler.endElement(java.lang.String,java.lang.String,java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125664,
        "text": "If a provider needs to support additional provider specific properties, it should override this method in a derived class.",
        "meta": {
            "doc_index": 210012,
            "doc_name": "javax.xml.bind.helpers.AbstractMarshallerImpl.getProperty(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                91,
                102,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125665,
        "text": "Override this method to make sure that xsl:attributes are not copied to output if this xsl:element is to be ignored",
        "meta": {
            "doc_index": 137280,
            "doc_name": "com.sun.org.apache.xalan.internal.xsltc.compiler.XslElement.translateContents(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator,com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                9,
                20,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125668,
        "text": "Subclasses should override this if they change the navigation keys.",
        "meta": {
            "doc_index": 197022,
            "doc_name": "javax.swing.plaf.basic.BasicComboBoxUI.isNavigationKey(int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                27,
                31,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125670,
        "text": "Subclassers should override this method, and make sure it correctly describes the GlyphVector and corresponds to the results of related calls.",
        "meta": {
            "doc_index": 155775,
            "doc_name": "java.awt.font.GlyphVector.getLayoutFlags()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                28,
                39,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125671,
        "text": "Subclasses may override this method to return some sort of state object that contains implementation details that are hidden from the public API.",
        "meta": {
            "doc_index": 95912,
            "doc_name": "com.sun.scenario.effect.Effect.getState()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                24,
                35,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125676,
        "text": "If the last child was a Text or CDATASection node and its previous siblings are neither a replaceable EntityReference or Text or CDATASection nodes, return false.",
        "meta": {
            "doc_index": 139890,
            "doc_name": "com.sun.org.apache.xerces.internal.dom.TextImpl.canModifyPrev(org.w3c.dom.Node)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                17,
                "Type-1"
            ],
            [
                24,
                28,
                "Type-2"
            ],
            [
                32,
                44,
                "Type-2"
            ],
            [
                90,
                117,
                "NotType-2"
            ],
            [
                54,
                75,
                "NotType-1"
            ],
            [
                121,
                125,
                "NotType-2"
            ],
            [
                129,
                141,
                "NotType-2"
            ],
            [
                156,
                161,
                "Returned"
            ]
        ]
    },
    {
        "id": 125677,
        "text": "Subclasses that wish to support incrementing/decrementing the value should override this and return true.",
        "meta": {
            "doc_index": 207633,
            "doc_name": "javax.swing.text.InternationalFormatter.getSupportsIncrement()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                84,
                88,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125686,
        "text": "Application writers may override this method in a subclass to take specific actions at the end of a document (such as finalising a tree or closing an output file).",
        "meta": {
            "doc_index": 216235,
            "doc_name": "org.xml.sax.helpers.DefaultHandler.endDocument()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                33,
                44,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125687,
        "text": "Note: Although this method is not deprecated, the preferred method to use is set(int,Object), which implements the List interface defined in the 1.2 Collections framework.",
        "meta": {
            "doc_index": 192795,
            "doc_name": "javax.swing.DefaultListModel.setElementAt(E,int)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                15,
                26,
                "ReplacedBy-1"
            ],
            [
                77,
                92,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 125690,
        "text": "Implementations that may not have an originating service provider, or which desire a different naming policy should override this method.",
        "meta": {
            "doc_index": 185215,
            "doc_name": "javax.imageio.ImageReader.getFormatName()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                125,
                136,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125694,
        "text": "An applet should override this method to return an array of Strings describing these parameters.",
        "meta": {
            "doc_index": 153648,
            "doc_name": "java.applet.Applet.getParameterInfo()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                37,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124925,
        "text": "Clocks should override this method to compare equals based on their state and to meet the contract of Object#equals.",
        "meta": {
            "doc_index": 173786,
            "doc_name": "java.time.Clock.equals(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                34,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124839,
        "text": "This method is deprecated as of JAXB 2.0 - please use the new getSchema() API.",
        "meta": {
            "doc_index": 210240,
            "doc_name": "javax.xml.bind.Unmarshaller.isValidating()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ],
            [
                62,
                77,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124968,
        "text": "Validator has been made optional and deprecated in JAXB 2.0.",
        "meta": {
            "doc_index": 210134,
            "doc_name": "javax.xml.bind.JAXBContext.createValidator()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                9,
                "Deprecated"
            ]
        ]
    },
    {
        "id": 124892,
        "text": "This method provides replacement functionality for the deprecated isValidating() API as well as access to the Schema object.",
        "meta": {
            "doc_index": 210246,
            "doc_name": "javax.xml.bind.Unmarshaller.getSchema()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                66,
                84,
                "Replace-2"
            ],
            [
                0,
                11,
                "Replace-1"
            ]
        ]
    },
    {
        "id": 125016,
        "text": "Subclasses of ClassLoader are encouraged to override findClass(String), rather than this method.",
        "meta": {
            "doc_index": 162576,
            "doc_name": "java.lang.ClassLoader.loadClass(java.lang.String,boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                53,
                70,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125201,
        "text": "Clocks should override this method based on their state and to meet the contract of Object#hashCode.",
        "meta": {
            "doc_index": 173787,
            "doc_name": "java.time.Clock.hashCode()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                23,
                34,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125077,
        "text": "This method is deprecated as of JAXB 2.0 - please use the new setSchema(javax.xml.validation.Schema) API.",
        "meta": {
            "doc_index": 210239,
            "doc_name": "javax.xml.bind.Unmarshaller.setValidating(boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                11,
                "Deprecated"
            ],
            [
                62,
                104,
                "ReplacedBy-2"
            ]
        ]
    },
    {
        "id": 124808,
        "text": "Otherwise, it calls identityEquals, which subclasses should override.",
        "meta": {
            "doc_index": 170649,
            "doc_name": "java.security.Identity.equals(java.lang.Object)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                20,
                34,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 124850,
        "text": "When the includeRemoved argument has the value false, this method replaces uses of MethodGen#getLocalVariables() which has a side-effect of setting the start and end range for any LocalVariableGen if either was null.",
        "meta": {
            "doc_index": 136829,
            "doc_name": "com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry.getLocals(boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                5,
                32,
                "EQ-1"
            ],
            [
                47,
                52,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 124983,
        "text": "If the source or target is set to null, it is replaced by the NULL_SOURCE_TARGET value.",
        "meta": {
            "doc_index": 105938,
            "doc_name": "javafx.event.Event.copyFor(java.lang.Object,javafx.event.EventTarget)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                3,
                23,
                "EQ-1"
            ],
            [
                34,
                38,
                "EQ-2"
            ],
            [
                40,
                42,
                "EQ-1"
            ],
            [
                58,
                86,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 125107,
        "text": "Subclasses of ClassLoader need not usually invoke this method, because most class loaders need to override just findClass(String).",
        "meta": {
            "doc_index": 162596,
            "doc_name": "java.lang.ClassLoader.findSystemClass(java.lang.String)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                112,
                129,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125239,
        "text": "The returned value should usually be an instance of CompositeDataSupport, or a class that serializes as a CompositeDataSupport via a writeReplace method.",
        "meta": {
            "doc_index": 187421,
            "doc_name": "javax.management.openmbean.CompositeDataView.toCompositeData(javax.management.openmbean.CompositeType)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Type-1"
            ],
            [
                52,
                72,
                "Type-2"
            ]
        ]
    },
    {
        "id": 125267,
        "text": "For subclasses that do not override this method, the default implementation returns the same result as getMessage().",
        "meta": {
            "doc_index": 165609,
            "doc_name": "java.lang.Throwable.getLocalizedMessage()",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                49,
                75,
                "Returns-1"
            ],
            [
                103,
                115,
                "Returns-2"
            ]
        ]
    },
    {
        "id": 125272,
        "text": "If the REPLACE_EXISTING option is specified, and the target file already exists, then it is replaced if it is not a non-empty directory.",
        "meta": {
            "doc_index": 169088,
            "doc_name": "java.nio.file.Files.copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption...)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                7,
                23,
                "EQ-1"
            ],
            [
                24,
                30,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 125411,
        "text": "This case applies only if the malformed action of this decoder is CodingErrorAction#REPORT; otherwise the malformed input will be ignored or replaced, as requested.",
        "meta": {
            "doc_index": 168328,
            "doc_name": "java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                26,
                62,
                "EQ-1"
            ],
            [
                66,
                90,
                "EQ-2"
            ]
        ]
    },
    {
        "id": 125511,
        "text": "Concrete locale service provider implementations should override this method if those implementations are Locale extensions-aware.",
        "meta": {
            "doc_index": 182334,
            "doc_name": "java.util.spi.LocaleServiceProvider.isSupportedLocale(java.util.Locale)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                65,
                76,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125672,
        "text": "Returns true if the element is deprecated, false otherwise.",
        "meta": {
            "doc_index": 186231,
            "doc_name": "javax.lang.model.util.Elements.isDeprecated(javax.lang.model.element.Element)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                8,
                12,
                "Returned"
            ],
            [
                43,
                48,
                "Returned"
            ]
        ]
    },
    {
        "id": 125295,
        "text": "The implementation in this class just returns DEFAULT_VALUE; subclasses will commonly override this method.",
        "meta": {
            "doc_index": 186279,
            "doc_name": "javax.lang.model.util.SimpleElementVisitor6.defaultAction(javax.lang.model.element.Element,P)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                0,
                18,
                "Returns-1"
            ],
            [
                46,
                59,
                "Returns-2"
            ],
            [
                95,
                106,
                "MustOverride"
            ]
        ]
    },
    {
        "id": 125343,
        "text": "This completely replaces the time and is equivalent to using ofNanoOfDay(long) with the milli-of-day multiplied by 1,000,000.",
        "meta": {
            "doc_index": 174430,
            "doc_name": "java.time.LocalTime.with(java.time.temporal.TemporalField,long)",
            "type_reference": "special",
            "data_extract_type": "Keyword"
        },
        "annotation_approver": null,
        "labels": [
            [
                61,
                78,
                "SameUsage-2"
            ],
            [
                0,
                4,
                "SameUsage-1"
            ]
        ]
    }
]